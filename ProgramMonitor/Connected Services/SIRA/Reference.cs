//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProgramMonitor.SIRA {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResult", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfboolean))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoPermissionI_PRg1ux4))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoCompanyRoleI_PRg1ux4))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoObservationRawDataHll1wPEA))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoGradeHll1wPEA))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoGradeAliasHll1wPEA))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoTankI_PRg1ux4))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoRegionI_PRg1ux4))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoRuleHll1wPEA))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceHll1wPEA))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoPublisherHll1wPEA))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoPublisherActionHll1wPEA))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceActionHll1wPEA))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceRuleHll1wPEA))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoContactI_PRg1ux4))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoCompanyI_PRg1ux4))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoCompanyAndSiteItemsyKa_PZV9R))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoSiteNameI_PRg1ux4))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoSiteI_PRg1ux4))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoTankSystemNameI_PRg1ux4))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoSiteTankSystemsyKa_PZV9R))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoTankSystemActivePeriodEntryyKa_PZV9R))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoTankSystemyKa_PZV9R))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoSiteTankSystemsChangeResultyKa_PZV9R))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoJobCompanyAndSiteItemsyKa_PZV9R))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoOperationyKa_PZV9R))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoSiteAnalysesSummaryyKa_PZV9R))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisJournalHll1wPEA))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoAnalysesPublishingDatayKa_PZV9R))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoMessageTnvYW2Wc))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoOperatorInfoyKa_PZV9R))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoAnalysesMetricsyKa_PZV9R))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoTankSystemAnalysisMetricsyKa_PZV9R))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoRunStateInfoyKa_PZV9R))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoTankAnalysisSummaryyKa_PZV9R))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoLastestCycleStartDateyKa_PZV9R))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoUnverifiedAnalysisInfoNS3hM9Iz))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfdateTime))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationMdlryKa_PZV9R))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoScreameryKa_PZV9R))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfstring))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationyKa_PZV9R))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationFactoryKa_PZV9R))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileyKa_PZV9R))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileMessageHll1wPEA))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoSiraConfigyKa_PZV9R))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoSiraGradeConfigSetyKa_PZV9R))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoObservationRawDataChangeLogyKa_PZV9R))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoClientInfoGzr_Sn7us))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoSystemInfoNS3hM9Iz))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoSiraBlackFlagReportJournalHll1wPEA))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoFileReaderI_PRg1ux4))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoImportPathHll1wPEA))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisTaskyKa_PZV9R))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisRunHll1wPEA))]
    public partial class ServiceResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoServerMessage[] MessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan ServerElapsedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.ServiceCallErrorInfo ServiceCallErrorInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.ServiceCallResultType ServiceCallResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UnsavedChangesOnServerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoServerMessage[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan ServerElapsedTime {
            get {
                return this.ServerElapsedTimeField;
            }
            set {
                if ((this.ServerElapsedTimeField.Equals(value) != true)) {
                    this.ServerElapsedTimeField = value;
                    this.RaisePropertyChanged("ServerElapsedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.ServiceCallErrorInfo ServiceCallErrorInfo {
            get {
                return this.ServiceCallErrorInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceCallErrorInfoField, value) != true)) {
                    this.ServiceCallErrorInfoField = value;
                    this.RaisePropertyChanged("ServiceCallErrorInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.ServiceCallResultType ServiceCallResult {
            get {
                return this.ServiceCallResultField;
            }
            set {
                if ((this.ServiceCallResultField.Equals(value) != true)) {
                    this.ServiceCallResultField = value;
                    this.RaisePropertyChanged("ServiceCallResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UnsavedChangesOnServer {
            get {
                return this.UnsavedChangesOnServerField;
            }
            set {
                if ((this.UnsavedChangesOnServerField.Equals(value) != true)) {
                    this.UnsavedChangesOnServerField = value;
                    this.RaisePropertyChanged("UnsavedChangesOnServer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceCallErrorInfo", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.Services.Framewor" +
        "k")]
    [System.SerializableAttribute()]
    public partial class ServiceCallErrorInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.ServiceCallErrorInfo.ErrorCategoryType ErrorCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserFriendlyErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.ServiceCallErrorInfo.ErrorCategoryType ErrorCategory {
            get {
                return this.ErrorCategoryField;
            }
            set {
                if ((this.ErrorCategoryField.Equals(value) != true)) {
                    this.ErrorCategoryField = value;
                    this.RaisePropertyChanged("ErrorCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserFriendlyErrorMessage {
            get {
                return this.UserFriendlyErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.UserFriendlyErrorMessageField, value) != true)) {
                    this.UserFriendlyErrorMessageField = value;
                    this.RaisePropertyChanged("UserFriendlyErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ServiceCallErrorInfo.ErrorCategoryType", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.Services.Framewor" +
            "k")]
        public enum ErrorCategoryType : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            None = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            General = 1,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfboolean", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfboolean : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoPermissionI_PRg1ux4", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoPermissionI_PRg1ux4 : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoPermission[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoPermission[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoCompanyRoleI_PRg1ux4", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoCompanyRoleI_PRg1ux4 : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoCompanyRole[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoCompanyRole[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoObservationRawDataHll1wPEA", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoObservationRawDataHll1wPEA : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoObservationRawData[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoObservationRawData[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoGradeHll1wPEA", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoGradeHll1wPEA : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoGrade[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoGrade[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoGradeAliasHll1wPEA", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoGradeAliasHll1wPEA : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoGradeAlias[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoGradeAlias[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoTankI_PRg1ux4", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoTankI_PRg1ux4 : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoTank[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoTank[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoRegionI_PRg1ux4", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoRegionI_PRg1ux4 : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoRegion[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoRegion[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoRuleHll1wPEA", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoRuleHll1wPEA : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoRule[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoRule[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoPostAnalysisServiceHll1wPEA", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoPostAnalysisServiceHll1wPEA : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoPostAnalysisService[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoPostAnalysisService[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoPublisherHll1wPEA", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoPublisherHll1wPEA : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoPublisher[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoPublisher[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoPublisherActionHll1wPEA", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoPublisherActionHll1wPEA : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoPublisherAction[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoPublisherAction[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoPostAnalysisServiceActionHll1wPEA", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoPostAnalysisServiceActionHll1wPEA : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoPostAnalysisServiceAction[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoPostAnalysisServiceAction[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoPostAnalysisServiceRuleHll1wPEA", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoPostAnalysisServiceRuleHll1wPEA : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoPostAnalysisServiceRule[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoPostAnalysisServiceRule[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoContactI_PRg1ux4", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoContactI_PRg1ux4 : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoContact[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoContact[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoCompanyI_PRg1ux4", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoCompanyI_PRg1ux4 : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoCompany[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoCompany[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoCompanyAndSiteItemsyKa_PZV9R", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoCompanyAndSiteItemsyKa_PZV9R : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoCompanyAndSiteItems[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoCompanyAndSiteItems[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoSiteNameI_PRg1ux4", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoSiteNameI_PRg1ux4 : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoSiteName[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoSiteName[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoSiteI_PRg1ux4", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoSiteI_PRg1ux4 : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoSite[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoSite[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoTankSystemNameI_PRg1ux4", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoTankSystemNameI_PRg1ux4 : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoTankSystemName[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoTankSystemName[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoSiteTankSystemsyKa_PZV9R", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoSiteTankSystemsyKa_PZV9R : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoSiteTankSystems[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoSiteTankSystems[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoTankSystemActivePeriodEntryyKa_PZV9R", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoTankSystemActivePeriodEntryyKa_PZV9R : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoTankSystemActivePeriodEntry[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoTankSystemActivePeriodEntry[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoTankSystemyKa_PZV9R", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoTankSystemyKa_PZV9R : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoTankSystem[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoTankSystem[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoSiteTankSystemsChangeResultyKa_PZV9R", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoSiteTankSystemsChangeResultyKa_PZV9R : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoSiteTankSystemsChangeResult[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoSiteTankSystemsChangeResult[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoJobCompanyAndSiteItemsyKa_PZV9R", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoJobCompanyAndSiteItemsyKa_PZV9R : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoJobCompanyAndSiteItems[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoJobCompanyAndSiteItems[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoOperationyKa_PZV9R", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoOperationyKa_PZV9R : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoOperation[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoOperation[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoSiteAnalysesSummaryyKa_PZV9R", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoSiteAnalysesSummaryyKa_PZV9R : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoSiteAnalysesSummary[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoSiteAnalysesSummary[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoAnalysisyKa_PZV9R", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoAnalysisyKa_PZV9R : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoAnalysis[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoAnalysis[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoAnalysisJournalHll1wPEA", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoAnalysisJournalHll1wPEA : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoAnalysisJournal[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoAnalysisJournal[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoAnalysesPublishingDatayKa_PZV9R", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoAnalysesPublishingDatayKa_PZV9R : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoAnalysesPublishingData[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoAnalysesPublishingData[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoMessageTnvYW2Wc", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoMessageTnvYW2Wc : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoMessage[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoMessage[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoOperatorInfoyKa_PZV9R", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoOperatorInfoyKa_PZV9R : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoOperatorInfo[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoOperatorInfo[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfint", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfint : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoAnalysesMetricsyKa_PZV9R", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoAnalysesMetricsyKa_PZV9R : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoAnalysesMetrics[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoAnalysesMetrics[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoTankSystemAnalysisMetricsyKa_PZV9R", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoTankSystemAnalysisMetricsyKa_PZV9R : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoTankSystemAnalysisMetrics[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoTankSystemAnalysisMetrics[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoRunStateInfoyKa_PZV9R", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoRunStateInfoyKa_PZV9R : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoRunStateInfo[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoRunStateInfo[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoTankAnalysisSummaryyKa_PZV9R", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoTankAnalysisSummaryyKa_PZV9R : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoTankAnalysisSummary[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoTankAnalysisSummary[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoLastestCycleStartDateyKa_PZV9R", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoLastestCycleStartDateyKa_PZV9R : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoLastestCycleStartDate[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoLastestCycleStartDate[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoUnverifiedAnalysisInfoNS3hM9Iz", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoUnverifiedAnalysisInfoNS3hM9Iz : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoUnverifiedAnalysisInfo[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoUnverifiedAnalysisInfo[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfdateTime", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfdateTime : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoCalibrationMdlryKa_PZV9R", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoCalibrationMdlryKa_PZV9R : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoCalibrationMdlr[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoCalibrationMdlr[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoScreameryKa_PZV9R", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoScreameryKa_PZV9R : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoScreamer[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoScreamer[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfstring", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfstring : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoCalibrationyKa_PZV9R", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoCalibrationyKa_PZV9R : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoCalibration[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoCalibration[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoCalibrationFactoryKa_PZV9R", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoCalibrationFactoryKa_PZV9R : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoCalibrationFactor[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoCalibrationFactor[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoImportedFileyKa_PZV9R", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoImportedFileyKa_PZV9R : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoImportedFile[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoImportedFile[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoImportedFileMessageHll1wPEA", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoImportedFileMessageHll1wPEA : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoImportedFileMessage[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoImportedFileMessage[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoSiraConfigyKa_PZV9R", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoSiraConfigyKa_PZV9R : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoSiraConfig[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoSiraConfig[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoSiraGradeConfigSetyKa_PZV9R", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoSiraGradeConfigSetyKa_PZV9R : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoSiraGradeConfigSet[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoSiraGradeConfigSet[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoObservationRawDataChangeLogyKa_PZV9R", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoObservationRawDataChangeLogyKa_PZV9R : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoObservationRawDataChangeLog[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoObservationRawDataChangeLog[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoClientInfoGzr_Sn7us", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoClientInfoGzr_Sn7us : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoClientInfo[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoClientInfo[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoSystemInfoNS3hM9Iz", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoSystemInfoNS3hM9Iz : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoSystemInfo[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoSystemInfo[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoSiraBlackFlagReportJournalHll1wPEA", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoSiraBlackFlagReportJournalHll1wPEA : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoSiraBlackFlagReportJournal[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoSiraBlackFlagReportJournal[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoFileReaderI_PRg1ux4", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoFileReaderI_PRg1ux4 : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoFileReader[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoFileReader[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoImportPathHll1wPEA", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoImportPathHll1wPEA : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoImportPath[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoImportPath[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoAnalysisTaskyKa_PZV9R", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoAnalysisTaskyKa_PZV9R : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoAnalysisTask[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoAnalysisTask[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfDtoAnalysisRunHll1wPEA", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.DotNet.Services.F" +
        "ramework")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfDtoAnalysisRunHll1wPEA : ProgramMonitor.SIRA.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoAnalysisRun[] PayloadField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoAnalysisRun[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoServerMessage", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.Services.Framewor" +
        "k")]
    [System.SerializableAttribute()]
    public partial class DtoServerMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] IntParamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessageCategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Param1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] StrParamsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeId {
            get {
                return this.ChangeIdField;
            }
            set {
                if ((this.ChangeIdField.Equals(value) != true)) {
                    this.ChangeIdField = value;
                    this.RaisePropertyChanged("ChangeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] IntParams {
            get {
                return this.IntParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.IntParamsField, value) != true)) {
                    this.IntParamsField = value;
                    this.RaisePropertyChanged("IntParams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageCategoryId {
            get {
                return this.MessageCategoryIdField;
            }
            set {
                if ((this.MessageCategoryIdField.Equals(value) != true)) {
                    this.MessageCategoryIdField = value;
                    this.RaisePropertyChanged("MessageCategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((this.MessageIdField.Equals(value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Param1 {
            get {
                return this.Param1Field;
            }
            set {
                if ((this.Param1Field.Equals(value) != true)) {
                    this.Param1Field = value;
                    this.RaisePropertyChanged("Param1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] StrParams {
            get {
                return this.StrParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.StrParamsField, value) != true)) {
                    this.StrParamsField = value;
                    this.RaisePropertyChanged("StrParams");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceCallResultType", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.LobWorks.Services.Framewor" +
        "k")]
    public enum ServiceCallResultType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Succeeded = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Timeout = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cancelled = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnknownClient = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoAnalysisRun", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Entitie" +
        "s.LobTypes")]
    [System.SerializableAttribute()]
    public partial class DtoAnalysisRun : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReadyTasksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TasksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> WhenLastActivatedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReadyTasks {
            get {
                return this.ReadyTasksField;
            }
            set {
                if ((this.ReadyTasksField.Equals(value) != true)) {
                    this.ReadyTasksField = value;
                    this.RaisePropertyChanged("ReadyTasks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Tasks {
            get {
                return this.TasksField;
            }
            set {
                if ((this.TasksField.Equals(value) != true)) {
                    this.TasksField = value;
                    this.RaisePropertyChanged("Tasks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> WhenLastActivated {
            get {
                return this.WhenLastActivatedField;
            }
            set {
                if ((this.WhenLastActivatedField.Equals(value) != true)) {
                    this.WhenLastActivatedField = value;
                    this.RaisePropertyChanged("WhenLastActivated");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoPermission", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.BL.Framework.Dt" +
        "o")]
    [System.SerializableAttribute()]
    public partial class DtoPermission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PermissionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PermissionId {
            get {
                return this.PermissionIdField;
            }
            set {
                if ((this.PermissionIdField.Equals(value) != true)) {
                    this.PermissionIdField = value;
                    this.RaisePropertyChanged("PermissionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoCompanyRole", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.BL.Framework.Dt" +
        "o")]
    [System.SerializableAttribute()]
    public partial class DtoCompanyRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyRoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ContactIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] PermissionIdsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyRoleId {
            get {
                return this.CompanyRoleIdField;
            }
            set {
                if ((this.CompanyRoleIdField.Equals(value) != true)) {
                    this.CompanyRoleIdField = value;
                    this.RaisePropertyChanged("CompanyRoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] ContactIds {
            get {
                return this.ContactIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactIdsField, value) != true)) {
                    this.ContactIdsField = value;
                    this.RaisePropertyChanged("ContactIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] PermissionIds {
            get {
                return this.PermissionIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionIdsField, value) != true)) {
                    this.PermissionIdsField = value;
                    this.RaisePropertyChanged("PermissionIds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoObservationRawData", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Entitie" +
        "s.LobTypes")]
    [System.SerializableAttribute()]
    public partial class DtoObservationRawData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateInsertedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> DipLitresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ObservationIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ObservationRawDataIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RawDeliveryLitresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RawTankNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReconciliationAlertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SaleLitresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TankIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TankSystemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> TemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateInserted {
            get {
                return this.DateInsertedField;
            }
            set {
                if ((this.DateInsertedField.Equals(value) != true)) {
                    this.DateInsertedField = value;
                    this.RaisePropertyChanged("DateInserted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> DipLitres {
            get {
                return this.DipLitresField;
            }
            set {
                if ((this.DipLitresField.Equals(value) != true)) {
                    this.DipLitresField = value;
                    this.RaisePropertyChanged("DipLitres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] ObservationIds {
            get {
                return this.ObservationIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.ObservationIdsField, value) != true)) {
                    this.ObservationIdsField = value;
                    this.RaisePropertyChanged("ObservationIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ObservationRawDataId {
            get {
                return this.ObservationRawDataIdField;
            }
            set {
                if ((this.ObservationRawDataIdField.Equals(value) != true)) {
                    this.ObservationRawDataIdField = value;
                    this.RaisePropertyChanged("ObservationRawDataId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RawDeliveryLitres {
            get {
                return this.RawDeliveryLitresField;
            }
            set {
                if ((this.RawDeliveryLitresField.Equals(value) != true)) {
                    this.RawDeliveryLitresField = value;
                    this.RaisePropertyChanged("RawDeliveryLitres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RawTankNumber {
            get {
                return this.RawTankNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RawTankNumberField, value) != true)) {
                    this.RawTankNumberField = value;
                    this.RaisePropertyChanged("RawTankNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReconciliationAlert {
            get {
                return this.ReconciliationAlertField;
            }
            set {
                if ((this.ReconciliationAlertField.Equals(value) != true)) {
                    this.ReconciliationAlertField = value;
                    this.RaisePropertyChanged("ReconciliationAlert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SaleLitres {
            get {
                return this.SaleLitresField;
            }
            set {
                if ((this.SaleLitresField.Equals(value) != true)) {
                    this.SaleLitresField = value;
                    this.RaisePropertyChanged("SaleLitres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TankId {
            get {
                return this.TankIdField;
            }
            set {
                if ((this.TankIdField.Equals(value) != true)) {
                    this.TankIdField = value;
                    this.RaisePropertyChanged("TankId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TankSystemId {
            get {
                return this.TankSystemIdField;
            }
            set {
                if ((this.TankSystemIdField.Equals(value) != true)) {
                    this.TankSystemIdField = value;
                    this.RaisePropertyChanged("TankSystemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Temperature {
            get {
                return this.TemperatureField;
            }
            set {
                if ((this.TemperatureField.Equals(value) != true)) {
                    this.TemperatureField = value;
                    this.RaisePropertyChanged("Temperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoGrade", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Entitie" +
        "s.LobTypes")]
    [System.SerializableAttribute()]
    public partial class DtoGrade : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GradeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GradeId {
            get {
                return this.GradeIdField;
            }
            set {
                if ((this.GradeIdField.Equals(value) != true)) {
                    this.GradeIdField = value;
                    this.RaisePropertyChanged("GradeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUsed {
            get {
                return this.IsUsedField;
            }
            set {
                if ((this.IsUsedField.Equals(value) != true)) {
                    this.IsUsedField = value;
                    this.RaisePropertyChanged("IsUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoGradeAlias", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Entitie" +
        "s.LobTypes")]
    [System.SerializableAttribute()]
    public partial class DtoGradeAlias : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AliasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GradeAliasIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Alias {
            get {
                return this.AliasField;
            }
            set {
                if ((object.ReferenceEquals(this.AliasField, value) != true)) {
                    this.AliasField = value;
                    this.RaisePropertyChanged("Alias");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GradeAliasId {
            get {
                return this.GradeAliasIdField;
            }
            set {
                if ((this.GradeAliasIdField.Equals(value) != true)) {
                    this.GradeAliasIdField = value;
                    this.RaisePropertyChanged("GradeAliasId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoTank", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.BL.Framework.Dt" +
        "o")]
    [System.SerializableAttribute()]
    public partial class DtoTank : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> CapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GaugeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> TankDiameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TankIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TankNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TankTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Capacity {
            get {
                return this.CapacityField;
            }
            set {
                if ((this.CapacityField.Equals(value) != true)) {
                    this.CapacityField = value;
                    this.RaisePropertyChanged("Capacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GaugeType {
            get {
                return this.GaugeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GaugeTypeField, value) != true)) {
                    this.GaugeTypeField = value;
                    this.RaisePropertyChanged("GaugeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteId {
            get {
                return this.SiteIdField;
            }
            set {
                if ((this.SiteIdField.Equals(value) != true)) {
                    this.SiteIdField = value;
                    this.RaisePropertyChanged("SiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> TankDiameter {
            get {
                return this.TankDiameterField;
            }
            set {
                if ((this.TankDiameterField.Equals(value) != true)) {
                    this.TankDiameterField = value;
                    this.RaisePropertyChanged("TankDiameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TankId {
            get {
                return this.TankIdField;
            }
            set {
                if ((this.TankIdField.Equals(value) != true)) {
                    this.TankIdField = value;
                    this.RaisePropertyChanged("TankId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TankNumber {
            get {
                return this.TankNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TankNumberField, value) != true)) {
                    this.TankNumberField = value;
                    this.RaisePropertyChanged("TankNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TankType {
            get {
                return this.TankTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TankTypeField, value) != true)) {
                    this.TankTypeField = value;
                    this.RaisePropertyChanged("TankType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoRegion", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.BL.Framework.Dt" +
        "o")]
    [System.SerializableAttribute()]
    public partial class DtoRegion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ContactIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExpiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentRegionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionCodeAliasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegionTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] RuleIdsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] ContactIds {
            get {
                return this.ContactIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactIdsField, value) != true)) {
                    this.ContactIdsField = value;
                    this.RaisePropertyChanged("ContactIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExpired {
            get {
                return this.IsExpiredField;
            }
            set {
                if ((this.IsExpiredField.Equals(value) != true)) {
                    this.IsExpiredField = value;
                    this.RaisePropertyChanged("IsExpired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentRegionId {
            get {
                return this.ParentRegionIdField;
            }
            set {
                if ((this.ParentRegionIdField.Equals(value) != true)) {
                    this.ParentRegionIdField = value;
                    this.RaisePropertyChanged("ParentRegionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionCode {
            get {
                return this.RegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionCodeField, value) != true)) {
                    this.RegionCodeField = value;
                    this.RaisePropertyChanged("RegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionCodeAlias {
            get {
                return this.RegionCodeAliasField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionCodeAliasField, value) != true)) {
                    this.RegionCodeAliasField = value;
                    this.RaisePropertyChanged("RegionCodeAlias");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegionId {
            get {
                return this.RegionIdField;
            }
            set {
                if ((this.RegionIdField.Equals(value) != true)) {
                    this.RegionIdField = value;
                    this.RaisePropertyChanged("RegionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegionTypeId {
            get {
                return this.RegionTypeIdField;
            }
            set {
                if ((this.RegionTypeIdField.Equals(value) != true)) {
                    this.RegionTypeIdField = value;
                    this.RaisePropertyChanged("RegionTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] RuleIds {
            get {
                return this.RuleIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.RuleIdsField, value) != true)) {
                    this.RuleIdsField = value;
                    this.RaisePropertyChanged("RuleIds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoRule", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Entitie" +
        "s.LobTypes")]
    [System.SerializableAttribute()]
    public partial class DtoRule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdjectiveIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] PostAnalysisServiceRuleIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RegionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RuleIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdjectiveId {
            get {
                return this.AdjectiveIdField;
            }
            set {
                if ((this.AdjectiveIdField.Equals(value) != true)) {
                    this.AdjectiveIdField = value;
                    this.RaisePropertyChanged("AdjectiveId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] PostAnalysisServiceRuleIds {
            get {
                return this.PostAnalysisServiceRuleIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.PostAnalysisServiceRuleIdsField, value) != true)) {
                    this.PostAnalysisServiceRuleIdsField = value;
                    this.RaisePropertyChanged("PostAnalysisServiceRuleIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RegionId {
            get {
                return this.RegionIdField;
            }
            set {
                if ((this.RegionIdField.Equals(value) != true)) {
                    this.RegionIdField = value;
                    this.RaisePropertyChanged("RegionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RuleId {
            get {
                return this.RuleIdField;
            }
            set {
                if ((this.RuleIdField.Equals(value) != true)) {
                    this.RuleIdField = value;
                    this.RaisePropertyChanged("RuleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoPostAnalysisService", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Entitie" +
        "s.LobTypes")]
    [System.SerializableAttribute()]
    public partial class DtoPostAnalysisService : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] PostAnalysisServiceActionIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PostAnalysisServiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] PostAnalysisServiceRuleIdsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] PostAnalysisServiceActionIds {
            get {
                return this.PostAnalysisServiceActionIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.PostAnalysisServiceActionIdsField, value) != true)) {
                    this.PostAnalysisServiceActionIdsField = value;
                    this.RaisePropertyChanged("PostAnalysisServiceActionIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PostAnalysisServiceId {
            get {
                return this.PostAnalysisServiceIdField;
            }
            set {
                if ((this.PostAnalysisServiceIdField.Equals(value) != true)) {
                    this.PostAnalysisServiceIdField = value;
                    this.RaisePropertyChanged("PostAnalysisServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] PostAnalysisServiceRuleIds {
            get {
                return this.PostAnalysisServiceRuleIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.PostAnalysisServiceRuleIdsField, value) != true)) {
                    this.PostAnalysisServiceRuleIdsField = value;
                    this.RaisePropertyChanged("PostAnalysisServiceRuleIds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoPublisher", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Entitie" +
        "s.LobTypes")]
    [System.SerializableAttribute()]
    public partial class DtoPublisher : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PublisherIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PublisherId {
            get {
                return this.PublisherIdField;
            }
            set {
                if ((this.PublisherIdField.Equals(value) != true)) {
                    this.PublisherIdField = value;
                    this.RaisePropertyChanged("PublisherId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoPublisherAction", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Entitie" +
        "s.LobTypes")]
    [System.SerializableAttribute()]
    public partial class DtoPublisherAction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PublisherActionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PublisherIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VerbIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parameters {
            get {
                return this.ParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ParametersField, value) != true)) {
                    this.ParametersField = value;
                    this.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PublisherActionId {
            get {
                return this.PublisherActionIdField;
            }
            set {
                if ((this.PublisherActionIdField.Equals(value) != true)) {
                    this.PublisherActionIdField = value;
                    this.RaisePropertyChanged("PublisherActionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PublisherId {
            get {
                return this.PublisherIdField;
            }
            set {
                if ((this.PublisherIdField.Equals(value) != true)) {
                    this.PublisherIdField = value;
                    this.RaisePropertyChanged("PublisherId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VerbId {
            get {
                return this.VerbIdField;
            }
            set {
                if ((this.VerbIdField.Equals(value) != true)) {
                    this.VerbIdField = value;
                    this.RaisePropertyChanged("VerbId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoPostAnalysisServiceAction", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Entitie" +
        "s.LobTypes")]
    [System.SerializableAttribute()]
    public partial class DtoPostAnalysisServiceAction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PostAnalysisServiceActionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PostAnalysisServiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PublisherActionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PostAnalysisServiceActionId {
            get {
                return this.PostAnalysisServiceActionIdField;
            }
            set {
                if ((this.PostAnalysisServiceActionIdField.Equals(value) != true)) {
                    this.PostAnalysisServiceActionIdField = value;
                    this.RaisePropertyChanged("PostAnalysisServiceActionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PostAnalysisServiceId {
            get {
                return this.PostAnalysisServiceIdField;
            }
            set {
                if ((this.PostAnalysisServiceIdField.Equals(value) != true)) {
                    this.PostAnalysisServiceIdField = value;
                    this.RaisePropertyChanged("PostAnalysisServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PublisherActionId {
            get {
                return this.PublisherActionIdField;
            }
            set {
                if ((this.PublisherActionIdField.Equals(value) != true)) {
                    this.PublisherActionIdField = value;
                    this.RaisePropertyChanged("PublisherActionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoPostAnalysisServiceRule", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Entitie" +
        "s.LobTypes")]
    [System.SerializableAttribute()]
    public partial class DtoPostAnalysisServiceRule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PostAnalysisServiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PostAnalysisServiceRuleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RuleIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PostAnalysisServiceId {
            get {
                return this.PostAnalysisServiceIdField;
            }
            set {
                if ((this.PostAnalysisServiceIdField.Equals(value) != true)) {
                    this.PostAnalysisServiceIdField = value;
                    this.RaisePropertyChanged("PostAnalysisServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PostAnalysisServiceRuleId {
            get {
                return this.PostAnalysisServiceRuleIdField;
            }
            set {
                if ((this.PostAnalysisServiceRuleIdField.Equals(value) != true)) {
                    this.PostAnalysisServiceRuleIdField = value;
                    this.RaisePropertyChanged("PostAnalysisServiceRuleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RuleId {
            get {
                return this.RuleIdField;
            }
            set {
                if ((this.RuleIdField.Equals(value) != true)) {
                    this.RuleIdField = value;
                    this.RaisePropertyChanged("RuleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoContact", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.BL.Framework.Dt" +
        "o")]
    [System.SerializableAttribute()]
    public partial class DtoContact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] AssignedSiteIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] CompanyRoleIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDisabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastLoginAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] AssignedSiteIds {
            get {
                return this.AssignedSiteIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedSiteIdsField, value) != true)) {
                    this.AssignedSiteIdsField = value;
                    this.RaisePropertyChanged("AssignedSiteIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] CompanyRoleIds {
            get {
                return this.CompanyRoleIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyRoleIdsField, value) != true)) {
                    this.CompanyRoleIdsField = value;
                    this.RaisePropertyChanged("CompanyRoleIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactId {
            get {
                return this.ContactIdField;
            }
            set {
                if ((this.ContactIdField.Equals(value) != true)) {
                    this.ContactIdField = value;
                    this.RaisePropertyChanged("ContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDisabled {
            get {
                return this.IsDisabledField;
            }
            set {
                if ((this.IsDisabledField.Equals(value) != true)) {
                    this.IsDisabledField = value;
                    this.RaisePropertyChanged("IsDisabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastLoginAt {
            get {
                return this.LastLoginAtField;
            }
            set {
                if ((this.LastLoginAtField.Equals(value) != true)) {
                    this.LastLoginAtField = value;
                    this.RaisePropertyChanged("LastLoginAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoCompany", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.BL.Framework.Dt" +
        "o")]
    [System.SerializableAttribute()]
    public partial class DtoCompany : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] FileReaderIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoRegion[] RegionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyCode {
            get {
                return this.CompanyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyCodeField, value) != true)) {
                    this.CompanyCodeField = value;
                    this.RaisePropertyChanged("CompanyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] FileReaderIds {
            get {
                return this.FileReaderIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.FileReaderIdsField, value) != true)) {
                    this.FileReaderIdsField = value;
                    this.RaisePropertyChanged("FileReaderIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoRegion[] Regions {
            get {
                return this.RegionsField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionsField, value) != true)) {
                    this.RegionsField = value;
                    this.RaisePropertyChanged("Regions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoCompanyAndSiteItems", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProgramMonitor.SIRA.DtoJobCompanyAndSiteItems))]
    public partial class DtoCompanyAndSiteItems : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoCompany[] CompaniesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoSite[] SitesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoCompany[] Companies {
            get {
                return this.CompaniesField;
            }
            set {
                if ((object.ReferenceEquals(this.CompaniesField, value) != true)) {
                    this.CompaniesField = value;
                    this.RaisePropertyChanged("Companies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoSite[] Sites {
            get {
                return this.SitesField;
            }
            set {
                if ((object.ReferenceEquals(this.SitesField, value) != true)) {
                    this.SitesField = value;
                    this.RaisePropertyChanged("Sites");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoJobCompanyAndSiteItems", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoJobCompanyAndSiteItems : ProgramMonitor.SIRA.DtoCompanyAndSiteItems {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoJob DtoJobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalTankSystemsNumberInJobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VerifiedTankSystemsNumberInJobField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoJob DtoJob {
            get {
                return this.DtoJobField;
            }
            set {
                if ((object.ReferenceEquals(this.DtoJobField, value) != true)) {
                    this.DtoJobField = value;
                    this.RaisePropertyChanged("DtoJob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalTankSystemsNumberInJob {
            get {
                return this.TotalTankSystemsNumberInJobField;
            }
            set {
                if ((this.TotalTankSystemsNumberInJobField.Equals(value) != true)) {
                    this.TotalTankSystemsNumberInJobField = value;
                    this.RaisePropertyChanged("TotalTankSystemsNumberInJob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VerifiedTankSystemsNumberInJob {
            get {
                return this.VerifiedTankSystemsNumberInJobField;
            }
            set {
                if ((this.VerifiedTankSystemsNumberInJobField.Equals(value) != true)) {
                    this.VerifiedTankSystemsNumberInJobField = value;
                    this.RaisePropertyChanged("VerifiedTankSystemsNumberInJob");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoSite", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.BL.Framework.Dt" +
        "o")]
    [System.SerializableAttribute()]
    public partial class DtoSite : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnalysisStartDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessLineOrDistributorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityOrLocalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataFeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DealerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GaugeMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPendingSiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] LinkedContactIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReconciliationAlertsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoRegion[] RegionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RetailOrDistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RiskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiraConfigIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoTank[] TanksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TerritoryManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpToDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountManager {
            get {
                return this.AccountManagerField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountManagerField, value) != true)) {
                    this.AccountManagerField = value;
                    this.RaisePropertyChanged("AccountManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnalysisStartDay {
            get {
                return this.AnalysisStartDayField;
            }
            set {
                if ((this.AnalysisStartDayField.Equals(value) != true)) {
                    this.AnalysisStartDayField = value;
                    this.RaisePropertyChanged("AnalysisStartDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaManager {
            get {
                return this.AreaManagerField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaManagerField, value) != true)) {
                    this.AreaManagerField = value;
                    this.RaisePropertyChanged("AreaManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessLineOrDistributor {
            get {
                return this.BusinessLineOrDistributorField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessLineOrDistributorField, value) != true)) {
                    this.BusinessLineOrDistributorField = value;
                    this.RaisePropertyChanged("BusinessLineOrDistributor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessManager {
            get {
                return this.BusinessManagerField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessManagerField, value) != true)) {
                    this.BusinessManagerField = value;
                    this.RaisePropertyChanged("BusinessManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityOrLocal {
            get {
                return this.CityOrLocalField;
            }
            set {
                if ((object.ReferenceEquals(this.CityOrLocalField, value) != true)) {
                    this.CityOrLocalField = value;
                    this.RaisePropertyChanged("CityOrLocal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataFeed {
            get {
                return this.DataFeedField;
            }
            set {
                if ((object.ReferenceEquals(this.DataFeedField, value) != true)) {
                    this.DataFeedField = value;
                    this.RaisePropertyChanged("DataFeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DealerType {
            get {
                return this.DealerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DealerTypeField, value) != true)) {
                    this.DealerTypeField = value;
                    this.RaisePropertyChanged("DealerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FromDate {
            get {
                return this.FromDateField;
            }
            set {
                if ((this.FromDateField.Equals(value) != true)) {
                    this.FromDateField = value;
                    this.RaisePropertyChanged("FromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GaugeMethod {
            get {
                return this.GaugeMethodField;
            }
            set {
                if ((this.GaugeMethodField.Equals(value) != true)) {
                    this.GaugeMethodField = value;
                    this.RaisePropertyChanged("GaugeMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPendingSite {
            get {
                return this.IsPendingSiteField;
            }
            set {
                if ((this.IsPendingSiteField.Equals(value) != true)) {
                    this.IsPendingSiteField = value;
                    this.RaisePropertyChanged("IsPendingSite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] LinkedContactIds {
            get {
                return this.LinkedContactIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkedContactIdsField, value) != true)) {
                    this.LinkedContactIdsField = value;
                    this.RaisePropertyChanged("LinkedContactIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReconciliationAlerts {
            get {
                return this.ReconciliationAlertsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReconciliationAlertsField, value) != true)) {
                    this.ReconciliationAlertsField = value;
                    this.RaisePropertyChanged("ReconciliationAlerts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoRegion[] Regions {
            get {
                return this.RegionsField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionsField, value) != true)) {
                    this.RegionsField = value;
                    this.RaisePropertyChanged("Regions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RetailOrDist {
            get {
                return this.RetailOrDistField;
            }
            set {
                if ((object.ReferenceEquals(this.RetailOrDistField, value) != true)) {
                    this.RetailOrDistField = value;
                    this.RaisePropertyChanged("RetailOrDist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Risk {
            get {
                return this.RiskField;
            }
            set {
                if ((object.ReferenceEquals(this.RiskField, value) != true)) {
                    this.RiskField = value;
                    this.RaisePropertyChanged("Risk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiraConfigId {
            get {
                return this.SiraConfigIdField;
            }
            set {
                if ((this.SiraConfigIdField.Equals(value) != true)) {
                    this.SiraConfigIdField = value;
                    this.RaisePropertyChanged("SiraConfigId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteCode {
            get {
                return this.SiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteCodeField, value) != true)) {
                    this.SiteCodeField = value;
                    this.RaisePropertyChanged("SiteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteId {
            get {
                return this.SiteIdField;
            }
            set {
                if ((this.SiteIdField.Equals(value) != true)) {
                    this.SiteIdField = value;
                    this.RaisePropertyChanged("SiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetAddress {
            get {
                return this.StreetAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetAddressField, value) != true)) {
                    this.StreetAddressField = value;
                    this.RaisePropertyChanged("StreetAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoTank[] Tanks {
            get {
                return this.TanksField;
            }
            set {
                if ((object.ReferenceEquals(this.TanksField, value) != true)) {
                    this.TanksField = value;
                    this.RaisePropertyChanged("Tanks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TerritoryManager {
            get {
                return this.TerritoryManagerField;
            }
            set {
                if ((object.ReferenceEquals(this.TerritoryManagerField, value) != true)) {
                    this.TerritoryManagerField = value;
                    this.RaisePropertyChanged("TerritoryManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpToDate {
            get {
                return this.UpToDateField;
            }
            set {
                if ((this.UpToDateField.Equals(value) != true)) {
                    this.UpToDateField = value;
                    this.RaisePropertyChanged("UpToDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoJob", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoJob : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoSiteName", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.BL.Framework.Dt" +
        "o")]
    [System.SerializableAttribute()]
    public partial class DtoSiteName : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteCode {
            get {
                return this.SiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteCodeField, value) != true)) {
                    this.SiteCodeField = value;
                    this.RaisePropertyChanged("SiteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteId {
            get {
                return this.SiteIdField;
            }
            set {
                if ((this.SiteIdField.Equals(value) != true)) {
                    this.SiteIdField = value;
                    this.RaisePropertyChanged("SiteId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoTankSystemName", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.BL.Framework.Dt" +
        "o")]
    [System.SerializableAttribute()]
    public partial class DtoTankSystemName : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TankSystemIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockedBy {
            get {
                return this.LockedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LockedByField, value) != true)) {
                    this.LockedByField = value;
                    this.RaisePropertyChanged("LockedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteId {
            get {
                return this.SiteIdField;
            }
            set {
                if ((this.SiteIdField.Equals(value) != true)) {
                    this.SiteIdField = value;
                    this.RaisePropertyChanged("SiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TankSystemId {
            get {
                return this.TankSystemIdField;
            }
            set {
                if ((this.TankSystemIdField.Equals(value) != true)) {
                    this.TankSystemIdField = value;
                    this.RaisePropertyChanged("TankSystemId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoSiteTankSystems", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoSiteTankSystems : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoGrade[] LobProductsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] TankNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoTankSystem[] TankSystemsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoGrade[] LobProducts {
            get {
                return this.LobProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.LobProductsField, value) != true)) {
                    this.LobProductsField = value;
                    this.RaisePropertyChanged("LobProducts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteId {
            get {
                return this.SiteIdField;
            }
            set {
                if ((this.SiteIdField.Equals(value) != true)) {
                    this.SiteIdField = value;
                    this.RaisePropertyChanged("SiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] TankNumbers {
            get {
                return this.TankNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.TankNumbersField, value) != true)) {
                    this.TankNumbersField = value;
                    this.RaisePropertyChanged("TankNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoTankSystem[] TankSystems {
            get {
                return this.TankSystemsField;
            }
            set {
                if ((object.ReferenceEquals(this.TankSystemsField, value) != true)) {
                    this.TankSystemsField = value;
                    this.RaisePropertyChanged("TankSystems");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoTankSystem", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoTankSystem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DwmMonitoredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoTankSystemActivePeriodEntry[] InSystemHistoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPendingTankSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastObservationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] TankNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TankSystemIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Capacity {
            get {
                return this.CapacityField;
            }
            set {
                if ((this.CapacityField.Equals(value) != true)) {
                    this.CapacityField = value;
                    this.RaisePropertyChanged("Capacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyCode {
            get {
                return this.CompanyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyCodeField, value) != true)) {
                    this.CompanyCodeField = value;
                    this.RaisePropertyChanged("CompanyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DwmMonitored {
            get {
                return this.DwmMonitoredField;
            }
            set {
                if ((this.DwmMonitoredField.Equals(value) != true)) {
                    this.DwmMonitoredField = value;
                    this.RaisePropertyChanged("DwmMonitored");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoTankSystemActivePeriodEntry[] InSystemHistory {
            get {
                return this.InSystemHistoryField;
            }
            set {
                if ((object.ReferenceEquals(this.InSystemHistoryField, value) != true)) {
                    this.InSystemHistoryField = value;
                    this.RaisePropertyChanged("InSystemHistory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPendingTankSystem {
            get {
                return this.IsPendingTankSystemField;
            }
            set {
                if ((this.IsPendingTankSystemField.Equals(value) != true)) {
                    this.IsPendingTankSystemField = value;
                    this.RaisePropertyChanged("IsPendingTankSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastObservationDate {
            get {
                return this.LastObservationDateField;
            }
            set {
                if ((this.LastObservationDateField.Equals(value) != true)) {
                    this.LastObservationDateField = value;
                    this.RaisePropertyChanged("LastObservationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteCode {
            get {
                return this.SiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteCodeField, value) != true)) {
                    this.SiteCodeField = value;
                    this.RaisePropertyChanged("SiteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteId {
            get {
                return this.SiteIdField;
            }
            set {
                if ((this.SiteIdField.Equals(value) != true)) {
                    this.SiteIdField = value;
                    this.RaisePropertyChanged("SiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] TankNumbers {
            get {
                return this.TankNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.TankNumbersField, value) != true)) {
                    this.TankNumbersField = value;
                    this.RaisePropertyChanged("TankNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TankSystemId {
            get {
                return this.TankSystemIdField;
            }
            set {
                if ((this.TankSystemIdField.Equals(value) != true)) {
                    this.TankSystemIdField = value;
                    this.RaisePropertyChanged("TankSystemId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoTankSystemActivePeriodEntry", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoTankSystemActivePeriodEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TankSystemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TankSystemInSystemsIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ToDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FromDate {
            get {
                return this.FromDateField;
            }
            set {
                if ((this.FromDateField.Equals(value) != true)) {
                    this.FromDateField = value;
                    this.RaisePropertyChanged("FromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TankSystemId {
            get {
                return this.TankSystemIdField;
            }
            set {
                if ((this.TankSystemIdField.Equals(value) != true)) {
                    this.TankSystemIdField = value;
                    this.RaisePropertyChanged("TankSystemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TankSystemInSystemsId {
            get {
                return this.TankSystemInSystemsIdField;
            }
            set {
                if ((this.TankSystemInSystemsIdField.Equals(value) != true)) {
                    this.TankSystemInSystemsIdField = value;
                    this.RaisePropertyChanged("TankSystemInSystemsId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ToDate {
            get {
                return this.ToDateField;
            }
            set {
                if ((this.ToDateField.Equals(value) != true)) {
                    this.ToDateField = value;
                    this.RaisePropertyChanged("ToDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoSiteTankSystemsChangeResult", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoSiteTankSystemsChangeResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActuallyMadeChangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoSiteTankSystems NewStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OrphansWereDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoSite SiteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ActuallyMadeChange {
            get {
                return this.ActuallyMadeChangeField;
            }
            set {
                if ((this.ActuallyMadeChangeField.Equals(value) != true)) {
                    this.ActuallyMadeChangeField = value;
                    this.RaisePropertyChanged("ActuallyMadeChange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoSiteTankSystems NewState {
            get {
                return this.NewStateField;
            }
            set {
                if ((object.ReferenceEquals(this.NewStateField, value) != true)) {
                    this.NewStateField = value;
                    this.RaisePropertyChanged("NewState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OrphansWereDeleted {
            get {
                return this.OrphansWereDeletedField;
            }
            set {
                if ((this.OrphansWereDeletedField.Equals(value) != true)) {
                    this.OrphansWereDeletedField = value;
                    this.RaisePropertyChanged("OrphansWereDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoSite Site {
            get {
                return this.SiteField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteField, value) != true)) {
                    this.SiteField = value;
                    this.RaisePropertyChanged("Site");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoOperation", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoOperation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OperationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RunningStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeCompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStartedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OperationId {
            get {
                return this.OperationIdField;
            }
            set {
                if ((this.OperationIdField.Equals(value) != true)) {
                    this.OperationIdField = value;
                    this.RaisePropertyChanged("OperationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RunningState {
            get {
                return this.RunningStateField;
            }
            set {
                if ((this.RunningStateField.Equals(value) != true)) {
                    this.RunningStateField = value;
                    this.RaisePropertyChanged("RunningState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartedBy {
            get {
                return this.StartedByField;
            }
            set {
                if ((object.ReferenceEquals(this.StartedByField, value) != true)) {
                    this.StartedByField = value;
                    this.RaisePropertyChanged("StartedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeCompleted {
            get {
                return this.TimeCompletedField;
            }
            set {
                if ((this.TimeCompletedField.Equals(value) != true)) {
                    this.TimeCompletedField = value;
                    this.RaisePropertyChanged("TimeCompleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStarted {
            get {
                return this.TimeStartedField;
            }
            set {
                if ((this.TimeStartedField.Equals(value) != true)) {
                    this.TimeStartedField = value;
                    this.RaisePropertyChanged("TimeStarted");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoSiteAnalysesSummary", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoSiteAnalysesSummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoTankSystemAnalysesSummary[] TankSystemAnalysesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyCode {
            get {
                return this.CompanyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyCodeField, value) != true)) {
                    this.CompanyCodeField = value;
                    this.RaisePropertyChanged("CompanyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteCode {
            get {
                return this.SiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteCodeField, value) != true)) {
                    this.SiteCodeField = value;
                    this.RaisePropertyChanged("SiteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoTankSystemAnalysesSummary[] TankSystemAnalyses {
            get {
                return this.TankSystemAnalysesField;
            }
            set {
                if ((object.ReferenceEquals(this.TankSystemAnalysesField, value) != true)) {
                    this.TankSystemAnalysesField = value;
                    this.RaisePropertyChanged("TankSystemAnalyses");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoTankSystemAnalysesSummary", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoTankSystemAnalysesSummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoAnalysisMetrics[] AnalysesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TankSystemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TankSystemNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoAnalysisMetrics[] Analyses {
            get {
                return this.AnalysesField;
            }
            set {
                if ((object.ReferenceEquals(this.AnalysesField, value) != true)) {
                    this.AnalysesField = value;
                    this.RaisePropertyChanged("Analyses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TankSystemId {
            get {
                return this.TankSystemIdField;
            }
            set {
                if ((this.TankSystemIdField.Equals(value) != true)) {
                    this.TankSystemIdField = value;
                    this.RaisePropertyChanged("TankSystemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TankSystemName {
            get {
                return this.TankSystemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TankSystemNameField, value) != true)) {
                    this.TankSystemNameField = value;
                    this.RaisePropertyChanged("TankSystemName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoAnalysisMetrics", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoAnalysisMetrics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnalysisIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DataDiscrepenciesCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FirstObsDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MDLRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PoorDipsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalSalesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> TrendLPDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> TrendPercentageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnalysisId {
            get {
                return this.AnalysisIdField;
            }
            set {
                if ((this.AnalysisIdField.Equals(value) != true)) {
                    this.AnalysisIdField = value;
                    this.RaisePropertyChanged("AnalysisId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DataDiscrepenciesCount {
            get {
                return this.DataDiscrepenciesCountField;
            }
            set {
                if ((this.DataDiscrepenciesCountField.Equals(value) != true)) {
                    this.DataDiscrepenciesCountField = value;
                    this.RaisePropertyChanged("DataDiscrepenciesCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FirstObsDate {
            get {
                return this.FirstObsDateField;
            }
            set {
                if ((this.FirstObsDateField.Equals(value) != true)) {
                    this.FirstObsDateField = value;
                    this.RaisePropertyChanged("FirstObsDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MDLR {
            get {
                return this.MDLRField;
            }
            set {
                if ((this.MDLRField.Equals(value) != true)) {
                    this.MDLRField = value;
                    this.RaisePropertyChanged("MDLR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PoorDipsCount {
            get {
                return this.PoorDipsCountField;
            }
            set {
                if ((this.PoorDipsCountField.Equals(value) != true)) {
                    this.PoorDipsCountField = value;
                    this.RaisePropertyChanged("PoorDipsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReasonCode {
            get {
                return this.ReasonCodeField;
            }
            set {
                if ((this.ReasonCodeField.Equals(value) != true)) {
                    this.ReasonCodeField = value;
                    this.RaisePropertyChanged("ReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalSales {
            get {
                return this.TotalSalesField;
            }
            set {
                if ((this.TotalSalesField.Equals(value) != true)) {
                    this.TotalSalesField = value;
                    this.RaisePropertyChanged("TotalSales");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> TrendLPD {
            get {
                return this.TrendLPDField;
            }
            set {
                if ((this.TrendLPDField.Equals(value) != true)) {
                    this.TrendLPDField = value;
                    this.RaisePropertyChanged("TrendLPD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> TrendPercentage {
            get {
                return this.TrendPercentageField;
            }
            set {
                if ((this.TrendPercentageField.Equals(value) != true)) {
                    this.TrendPercentageField = value;
                    this.RaisePropertyChanged("TrendPercentage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoAnalysis", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoAnalysis : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnalysisIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnalysisTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ApplicationLockIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FirstObsDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GaugeMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasCalibrationErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasCorrectionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasExceptionOccuredInLockingProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDirtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsObjectLockedByAnotherUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsScreamerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastObsDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockOwnerUserDomainUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockOwnerUserFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LockOwnerUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockSucceededField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MDLRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoObservation[] ObservationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoObservation OpeningDipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorFailResultReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorFlagResultReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorInconclusiveResultReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorPassResultReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoLinearLine RawDataTrendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StandardDeviationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatsEngineErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoTankSystem TankSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TankSystemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalSalesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoLinearLine TrendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> TrendLPDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> TrendPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VerifiedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnalysisId {
            get {
                return this.AnalysisIdField;
            }
            set {
                if ((this.AnalysisIdField.Equals(value) != true)) {
                    this.AnalysisIdField = value;
                    this.RaisePropertyChanged("AnalysisId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnalysisType {
            get {
                return this.AnalysisTypeField;
            }
            set {
                if ((this.AnalysisTypeField.Equals(value) != true)) {
                    this.AnalysisTypeField = value;
                    this.RaisePropertyChanged("AnalysisType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ApplicationLockId {
            get {
                return this.ApplicationLockIdField;
            }
            set {
                if ((this.ApplicationLockIdField.Equals(value) != true)) {
                    this.ApplicationLockIdField = value;
                    this.RaisePropertyChanged("ApplicationLockId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FirstObsDate {
            get {
                return this.FirstObsDateField;
            }
            set {
                if ((this.FirstObsDateField.Equals(value) != true)) {
                    this.FirstObsDateField = value;
                    this.RaisePropertyChanged("FirstObsDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GaugeMethod {
            get {
                return this.GaugeMethodField;
            }
            set {
                if ((this.GaugeMethodField.Equals(value) != true)) {
                    this.GaugeMethodField = value;
                    this.RaisePropertyChanged("GaugeMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasCalibrationError {
            get {
                return this.HasCalibrationErrorField;
            }
            set {
                if ((this.HasCalibrationErrorField.Equals(value) != true)) {
                    this.HasCalibrationErrorField = value;
                    this.RaisePropertyChanged("HasCalibrationError");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasCorrections {
            get {
                return this.HasCorrectionsField;
            }
            set {
                if ((this.HasCorrectionsField.Equals(value) != true)) {
                    this.HasCorrectionsField = value;
                    this.RaisePropertyChanged("HasCorrections");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasExceptionOccuredInLockingProcess {
            get {
                return this.HasExceptionOccuredInLockingProcessField;
            }
            set {
                if ((this.HasExceptionOccuredInLockingProcessField.Equals(value) != true)) {
                    this.HasExceptionOccuredInLockingProcessField = value;
                    this.RaisePropertyChanged("HasExceptionOccuredInLockingProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDirty {
            get {
                return this.IsDirtyField;
            }
            set {
                if ((this.IsDirtyField.Equals(value) != true)) {
                    this.IsDirtyField = value;
                    this.RaisePropertyChanged("IsDirty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsObjectLockedByAnotherUser {
            get {
                return this.IsObjectLockedByAnotherUserField;
            }
            set {
                if ((this.IsObjectLockedByAnotherUserField.Equals(value) != true)) {
                    this.IsObjectLockedByAnotherUserField = value;
                    this.RaisePropertyChanged("IsObjectLockedByAnotherUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsScreamer {
            get {
                return this.IsScreamerField;
            }
            set {
                if ((this.IsScreamerField.Equals(value) != true)) {
                    this.IsScreamerField = value;
                    this.RaisePropertyChanged("IsScreamer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastObsDate {
            get {
                return this.LastObsDateField;
            }
            set {
                if ((this.LastObsDateField.Equals(value) != true)) {
                    this.LastObsDateField = value;
                    this.RaisePropertyChanged("LastObsDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockOwnerUserDomainUserName {
            get {
                return this.LockOwnerUserDomainUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LockOwnerUserDomainUserNameField, value) != true)) {
                    this.LockOwnerUserDomainUserNameField = value;
                    this.RaisePropertyChanged("LockOwnerUserDomainUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockOwnerUserFullName {
            get {
                return this.LockOwnerUserFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LockOwnerUserFullNameField, value) != true)) {
                    this.LockOwnerUserFullNameField = value;
                    this.RaisePropertyChanged("LockOwnerUserFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LockOwnerUserId {
            get {
                return this.LockOwnerUserIdField;
            }
            set {
                if ((this.LockOwnerUserIdField.Equals(value) != true)) {
                    this.LockOwnerUserIdField = value;
                    this.RaisePropertyChanged("LockOwnerUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockSucceeded {
            get {
                return this.LockSucceededField;
            }
            set {
                if ((this.LockSucceededField.Equals(value) != true)) {
                    this.LockSucceededField = value;
                    this.RaisePropertyChanged("LockSucceeded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MDLR {
            get {
                return this.MDLRField;
            }
            set {
                if ((this.MDLRField.Equals(value) != true)) {
                    this.MDLRField = value;
                    this.RaisePropertyChanged("MDLR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoObservation[] Observations {
            get {
                return this.ObservationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ObservationsField, value) != true)) {
                    this.ObservationsField = value;
                    this.RaisePropertyChanged("Observations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoObservation OpeningDip {
            get {
                return this.OpeningDipField;
            }
            set {
                if ((object.ReferenceEquals(this.OpeningDipField, value) != true)) {
                    this.OpeningDipField = value;
                    this.RaisePropertyChanged("OpeningDip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PriorFailResultReasonCode {
            get {
                return this.PriorFailResultReasonCodeField;
            }
            set {
                if ((this.PriorFailResultReasonCodeField.Equals(value) != true)) {
                    this.PriorFailResultReasonCodeField = value;
                    this.RaisePropertyChanged("PriorFailResultReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PriorFlagResultReasonCode {
            get {
                return this.PriorFlagResultReasonCodeField;
            }
            set {
                if ((this.PriorFlagResultReasonCodeField.Equals(value) != true)) {
                    this.PriorFlagResultReasonCodeField = value;
                    this.RaisePropertyChanged("PriorFlagResultReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PriorInconclusiveResultReasonCode {
            get {
                return this.PriorInconclusiveResultReasonCodeField;
            }
            set {
                if ((this.PriorInconclusiveResultReasonCodeField.Equals(value) != true)) {
                    this.PriorInconclusiveResultReasonCodeField = value;
                    this.RaisePropertyChanged("PriorInconclusiveResultReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PriorPassResultReasonCode {
            get {
                return this.PriorPassResultReasonCodeField;
            }
            set {
                if ((this.PriorPassResultReasonCodeField.Equals(value) != true)) {
                    this.PriorPassResultReasonCodeField = value;
                    this.RaisePropertyChanged("PriorPassResultReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PriorResult {
            get {
                return this.PriorResultField;
            }
            set {
                if ((this.PriorResultField.Equals(value) != true)) {
                    this.PriorResultField = value;
                    this.RaisePropertyChanged("PriorResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoLinearLine RawDataTrend {
            get {
                return this.RawDataTrendField;
            }
            set {
                if ((object.ReferenceEquals(this.RawDataTrendField, value) != true)) {
                    this.RawDataTrendField = value;
                    this.RaisePropertyChanged("RawDataTrend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResultReasonCode {
            get {
                return this.ResultReasonCodeField;
            }
            set {
                if ((this.ResultReasonCodeField.Equals(value) != true)) {
                    this.ResultReasonCodeField = value;
                    this.RaisePropertyChanged("ResultReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StandardDeviation {
            get {
                return this.StandardDeviationField;
            }
            set {
                if ((this.StandardDeviationField.Equals(value) != true)) {
                    this.StandardDeviationField = value;
                    this.RaisePropertyChanged("StandardDeviation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatsEngineErrorCode {
            get {
                return this.StatsEngineErrorCodeField;
            }
            set {
                if ((this.StatsEngineErrorCodeField.Equals(value) != true)) {
                    this.StatsEngineErrorCodeField = value;
                    this.RaisePropertyChanged("StatsEngineErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoTankSystem TankSystem {
            get {
                return this.TankSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.TankSystemField, value) != true)) {
                    this.TankSystemField = value;
                    this.RaisePropertyChanged("TankSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TankSystemId {
            get {
                return this.TankSystemIdField;
            }
            set {
                if ((this.TankSystemIdField.Equals(value) != true)) {
                    this.TankSystemIdField = value;
                    this.RaisePropertyChanged("TankSystemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalSales {
            get {
                return this.TotalSalesField;
            }
            set {
                if ((this.TotalSalesField.Equals(value) != true)) {
                    this.TotalSalesField = value;
                    this.RaisePropertyChanged("TotalSales");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoLinearLine Trend {
            get {
                return this.TrendField;
            }
            set {
                if ((object.ReferenceEquals(this.TrendField, value) != true)) {
                    this.TrendField = value;
                    this.RaisePropertyChanged("Trend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> TrendLPD {
            get {
                return this.TrendLPDField;
            }
            set {
                if ((this.TrendLPDField.Equals(value) != true)) {
                    this.TrendLPDField = value;
                    this.RaisePropertyChanged("TrendLPD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> TrendPercentage {
            get {
                return this.TrendPercentageField;
            }
            set {
                if ((this.TrendPercentageField.Equals(value) != true)) {
                    this.TrendPercentageField = value;
                    this.RaisePropertyChanged("TrendPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Verified {
            get {
                return this.VerifiedField;
            }
            set {
                if ((this.VerifiedField.Equals(value) != true)) {
                    this.VerifiedField = value;
                    this.RaisePropertyChanged("Verified");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoObservation", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.SiraSystem.BackEnd.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoObservation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AdjustmentLitresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnalysisIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> CalibratedDipLitresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DDCauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DeliveriesLitresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DipIgnoredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FutureObservationsUsedForAdjustmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasAdjustmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsInitialDipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ObservationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ObservationRawDataIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RawDeliveriesLitresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> RawDipLitresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SalesLitresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TankSystemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double VarianceLitresField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AdjustmentLitres {
            get {
                return this.AdjustmentLitresField;
            }
            set {
                if ((this.AdjustmentLitresField.Equals(value) != true)) {
                    this.AdjustmentLitresField = value;
                    this.RaisePropertyChanged("AdjustmentLitres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnalysisId {
            get {
                return this.AnalysisIdField;
            }
            set {
                if ((this.AnalysisIdField.Equals(value) != true)) {
                    this.AnalysisIdField = value;
                    this.RaisePropertyChanged("AnalysisId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> CalibratedDipLitres {
            get {
                return this.CalibratedDipLitresField;
            }
            set {
                if ((this.CalibratedDipLitresField.Equals(value) != true)) {
                    this.CalibratedDipLitresField = value;
                    this.RaisePropertyChanged("CalibratedDipLitres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DDCause {
            get {
                return this.DDCauseField;
            }
            set {
                if ((this.DDCauseField.Equals(value) != true)) {
                    this.DDCauseField = value;
                    this.RaisePropertyChanged("DDCause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DeliveriesLitres {
            get {
                return this.DeliveriesLitresField;
            }
            set {
                if ((this.DeliveriesLitresField.Equals(value) != true)) {
                    this.DeliveriesLitresField = value;
                    this.RaisePropertyChanged("DeliveriesLitres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DipIgnored {
            get {
                return this.DipIgnoredField;
            }
            set {
                if ((this.DipIgnoredField.Equals(value) != true)) {
                    this.DipIgnoredField = value;
                    this.RaisePropertyChanged("DipIgnored");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FutureObservationsUsedForAdjustment {
            get {
                return this.FutureObservationsUsedForAdjustmentField;
            }
            set {
                if ((this.FutureObservationsUsedForAdjustmentField.Equals(value) != true)) {
                    this.FutureObservationsUsedForAdjustmentField = value;
                    this.RaisePropertyChanged("FutureObservationsUsedForAdjustment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasAdjustment {
            get {
                return this.HasAdjustmentField;
            }
            set {
                if ((this.HasAdjustmentField.Equals(value) != true)) {
                    this.HasAdjustmentField = value;
                    this.RaisePropertyChanged("HasAdjustment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInitialDip {
            get {
                return this.IsInitialDipField;
            }
            set {
                if ((this.IsInitialDipField.Equals(value) != true)) {
                    this.IsInitialDipField = value;
                    this.RaisePropertyChanged("IsInitialDip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ObservationId {
            get {
                return this.ObservationIdField;
            }
            set {
                if ((this.ObservationIdField.Equals(value) != true)) {
                    this.ObservationIdField = value;
                    this.RaisePropertyChanged("ObservationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] ObservationRawDataIds {
            get {
                return this.ObservationRawDataIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.ObservationRawDataIdsField, value) != true)) {
                    this.ObservationRawDataIdsField = value;
                    this.RaisePropertyChanged("ObservationRawDataIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RawDeliveriesLitres {
            get {
                return this.RawDeliveriesLitresField;
            }
            set {
                if ((this.RawDeliveriesLitresField.Equals(value) != true)) {
                    this.RawDeliveriesLitresField = value;
                    this.RaisePropertyChanged("RawDeliveriesLitres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> RawDipLitres {
            get {
                return this.RawDipLitresField;
            }
            set {
                if ((this.RawDipLitresField.Equals(value) != true)) {
                    this.RawDipLitresField = value;
                    this.RaisePropertyChanged("RawDipLitres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SalesLitres {
            get {
                return this.SalesLitresField;
            }
            set {
                if ((this.SalesLitresField.Equals(value) != true)) {
                    this.SalesLitresField = value;
                    this.RaisePropertyChanged("SalesLitres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TankSystemId {
            get {
                return this.TankSystemIdField;
            }
            set {
                if ((this.TankSystemIdField.Equals(value) != true)) {
                    this.TankSystemIdField = value;
                    this.RaisePropertyChanged("TankSystemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double VarianceLitres {
            get {
                return this.VarianceLitresField;
            }
            set {
                if ((this.VarianceLitresField.Equals(value) != true)) {
                    this.VarianceLitresField = value;
                    this.RaisePropertyChanged("VarianceLitres");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoLinearLine", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.SiraSystem.Services")]
    [System.SerializableAttribute()]
    public partial class DtoLinearLine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InterceptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SlopeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Intercept {
            get {
                return this.InterceptField;
            }
            set {
                if ((this.InterceptField.Equals(value) != true)) {
                    this.InterceptField = value;
                    this.RaisePropertyChanged("Intercept");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Slope {
            get {
                return this.SlopeField;
            }
            set {
                if ((this.SlopeField.Equals(value) != true)) {
                    this.SlopeField = value;
                    this.RaisePropertyChanged("Slope");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoAnalysisJournal", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Entitie" +
        "s.LobTypes")]
    [System.SerializableAttribute()]
    public partial class DtoAnalysisJournal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdjustedDipsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AnalysisIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnalysisJournalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AnalysisProcessingStateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnalysisTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnalystField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ApproxCalibrationErrorMagnitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CarryOverDeliveriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CarryOverSalesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExternalAnalysisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FirstObsDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IgnoredDipsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsScreamerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastObsDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MDLRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PublishedTimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StandardDeviationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatsEngineErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TankSystemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampInsertedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalSalesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> TrendLPDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> TrendPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> WhenVerifiedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdjustedDipsCount {
            get {
                return this.AdjustedDipsCountField;
            }
            set {
                if ((this.AdjustedDipsCountField.Equals(value) != true)) {
                    this.AdjustedDipsCountField = value;
                    this.RaisePropertyChanged("AdjustedDipsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AnalysisId {
            get {
                return this.AnalysisIdField;
            }
            set {
                if ((this.AnalysisIdField.Equals(value) != true)) {
                    this.AnalysisIdField = value;
                    this.RaisePropertyChanged("AnalysisId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnalysisJournalId {
            get {
                return this.AnalysisJournalIdField;
            }
            set {
                if ((this.AnalysisJournalIdField.Equals(value) != true)) {
                    this.AnalysisJournalIdField = value;
                    this.RaisePropertyChanged("AnalysisJournalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AnalysisProcessingStateId {
            get {
                return this.AnalysisProcessingStateIdField;
            }
            set {
                if ((this.AnalysisProcessingStateIdField.Equals(value) != true)) {
                    this.AnalysisProcessingStateIdField = value;
                    this.RaisePropertyChanged("AnalysisProcessingStateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnalysisTypeId {
            get {
                return this.AnalysisTypeIdField;
            }
            set {
                if ((this.AnalysisTypeIdField.Equals(value) != true)) {
                    this.AnalysisTypeIdField = value;
                    this.RaisePropertyChanged("AnalysisTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Analyst {
            get {
                return this.AnalystField;
            }
            set {
                if ((object.ReferenceEquals(this.AnalystField, value) != true)) {
                    this.AnalystField = value;
                    this.RaisePropertyChanged("Analyst");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> ApproxCalibrationErrorMagnitude {
            get {
                return this.ApproxCalibrationErrorMagnitudeField;
            }
            set {
                if ((this.ApproxCalibrationErrorMagnitudeField.Equals(value) != true)) {
                    this.ApproxCalibrationErrorMagnitudeField = value;
                    this.RaisePropertyChanged("ApproxCalibrationErrorMagnitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CarryOverDeliveries {
            get {
                return this.CarryOverDeliveriesField;
            }
            set {
                if ((this.CarryOverDeliveriesField.Equals(value) != true)) {
                    this.CarryOverDeliveriesField = value;
                    this.RaisePropertyChanged("CarryOverDeliveries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CarryOverSales {
            get {
                return this.CarryOverSalesField;
            }
            set {
                if ((this.CarryOverSalesField.Equals(value) != true)) {
                    this.CarryOverSalesField = value;
                    this.RaisePropertyChanged("CarryOverSales");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExternalAnalysis {
            get {
                return this.ExternalAnalysisField;
            }
            set {
                if ((this.ExternalAnalysisField.Equals(value) != true)) {
                    this.ExternalAnalysisField = value;
                    this.RaisePropertyChanged("ExternalAnalysis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FirstObsDate {
            get {
                return this.FirstObsDateField;
            }
            set {
                if ((this.FirstObsDateField.Equals(value) != true)) {
                    this.FirstObsDateField = value;
                    this.RaisePropertyChanged("FirstObsDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IgnoredDipsCount {
            get {
                return this.IgnoredDipsCountField;
            }
            set {
                if ((this.IgnoredDipsCountField.Equals(value) != true)) {
                    this.IgnoredDipsCountField = value;
                    this.RaisePropertyChanged("IgnoredDipsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsScreamer {
            get {
                return this.IsScreamerField;
            }
            set {
                if ((this.IsScreamerField.Equals(value) != true)) {
                    this.IsScreamerField = value;
                    this.RaisePropertyChanged("IsScreamer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastObsDate {
            get {
                return this.LastObsDateField;
            }
            set {
                if ((this.LastObsDateField.Equals(value) != true)) {
                    this.LastObsDateField = value;
                    this.RaisePropertyChanged("LastObsDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MDLR {
            get {
                return this.MDLRField;
            }
            set {
                if ((this.MDLRField.Equals(value) != true)) {
                    this.MDLRField = value;
                    this.RaisePropertyChanged("MDLR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PublishedTimeStamp {
            get {
                return this.PublishedTimeStampField;
            }
            set {
                if ((this.PublishedTimeStampField.Equals(value) != true)) {
                    this.PublishedTimeStampField = value;
                    this.RaisePropertyChanged("PublishedTimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResultReasonCode {
            get {
                return this.ResultReasonCodeField;
            }
            set {
                if ((this.ResultReasonCodeField.Equals(value) != true)) {
                    this.ResultReasonCodeField = value;
                    this.RaisePropertyChanged("ResultReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StandardDeviation {
            get {
                return this.StandardDeviationField;
            }
            set {
                if ((this.StandardDeviationField.Equals(value) != true)) {
                    this.StandardDeviationField = value;
                    this.RaisePropertyChanged("StandardDeviation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatsEngineErrorCode {
            get {
                return this.StatsEngineErrorCodeField;
            }
            set {
                if ((this.StatsEngineErrorCodeField.Equals(value) != true)) {
                    this.StatsEngineErrorCodeField = value;
                    this.RaisePropertyChanged("StatsEngineErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TankSystemId {
            get {
                return this.TankSystemIdField;
            }
            set {
                if ((this.TankSystemIdField.Equals(value) != true)) {
                    this.TankSystemIdField = value;
                    this.RaisePropertyChanged("TankSystemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStampInserted {
            get {
                return this.TimeStampInsertedField;
            }
            set {
                if ((this.TimeStampInsertedField.Equals(value) != true)) {
                    this.TimeStampInsertedField = value;
                    this.RaisePropertyChanged("TimeStampInserted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalLoss {
            get {
                return this.TotalLossField;
            }
            set {
                if ((this.TotalLossField.Equals(value) != true)) {
                    this.TotalLossField = value;
                    this.RaisePropertyChanged("TotalLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalSales {
            get {
                return this.TotalSalesField;
            }
            set {
                if ((this.TotalSalesField.Equals(value) != true)) {
                    this.TotalSalesField = value;
                    this.RaisePropertyChanged("TotalSales");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> TrendLPD {
            get {
                return this.TrendLPDField;
            }
            set {
                if ((this.TrendLPDField.Equals(value) != true)) {
                    this.TrendLPDField = value;
                    this.RaisePropertyChanged("TrendLPD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> TrendPercentage {
            get {
                return this.TrendPercentageField;
            }
            set {
                if ((this.TrendPercentageField.Equals(value) != true)) {
                    this.TrendPercentageField = value;
                    this.RaisePropertyChanged("TrendPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> WhenVerified {
            get {
                return this.WhenVerifiedField;
            }
            set {
                if ((this.WhenVerifiedField.Equals(value) != true)) {
                    this.WhenVerifiedField = value;
                    this.RaisePropertyChanged("WhenVerified");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoAnalysesPublishingData", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoAnalysesPublishingData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnalysisIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnalysisJournalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DataDescrepencyCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GaugeMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPublishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LossPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MDLRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PoorDipCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TanksystemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThroughputField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrendLpdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnalysisId {
            get {
                return this.AnalysisIdField;
            }
            set {
                if ((this.AnalysisIdField.Equals(value) != true)) {
                    this.AnalysisIdField = value;
                    this.RaisePropertyChanged("AnalysisId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnalysisJournalId {
            get {
                return this.AnalysisJournalIdField;
            }
            set {
                if ((this.AnalysisJournalIdField.Equals(value) != true)) {
                    this.AnalysisJournalIdField = value;
                    this.RaisePropertyChanged("AnalysisJournalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DataDescrepencyCount {
            get {
                return this.DataDescrepencyCountField;
            }
            set {
                if ((this.DataDescrepencyCountField.Equals(value) != true)) {
                    this.DataDescrepencyCountField = value;
                    this.RaisePropertyChanged("DataDescrepencyCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GaugeMethod {
            get {
                return this.GaugeMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.GaugeMethodField, value) != true)) {
                    this.GaugeMethodField = value;
                    this.RaisePropertyChanged("GaugeMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPublished {
            get {
                return this.IsPublishedField;
            }
            set {
                if ((this.IsPublishedField.Equals(value) != true)) {
                    this.IsPublishedField = value;
                    this.RaisePropertyChanged("IsPublished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LossPercentage {
            get {
                return this.LossPercentageField;
            }
            set {
                if ((object.ReferenceEquals(this.LossPercentageField, value) != true)) {
                    this.LossPercentageField = value;
                    this.RaisePropertyChanged("LossPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MDLR {
            get {
                return this.MDLRField;
            }
            set {
                if ((object.ReferenceEquals(this.MDLRField, value) != true)) {
                    this.MDLRField = value;
                    this.RaisePropertyChanged("MDLR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PoorDipCount {
            get {
                return this.PoorDipCountField;
            }
            set {
                if ((this.PoorDipCountField.Equals(value) != true)) {
                    this.PoorDipCountField = value;
                    this.RaisePropertyChanged("PoorDipCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteCode {
            get {
                return this.SiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteCodeField, value) != true)) {
                    this.SiteCodeField = value;
                    this.RaisePropertyChanged("SiteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteId {
            get {
                return this.SiteIdField;
            }
            set {
                if ((this.SiteIdField.Equals(value) != true)) {
                    this.SiteIdField = value;
                    this.RaisePropertyChanged("SiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TanksystemId {
            get {
                return this.TanksystemIdField;
            }
            set {
                if ((this.TanksystemIdField.Equals(value) != true)) {
                    this.TanksystemIdField = value;
                    this.RaisePropertyChanged("TanksystemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Throughput {
            get {
                return this.ThroughputField;
            }
            set {
                if ((object.ReferenceEquals(this.ThroughputField, value) != true)) {
                    this.ThroughputField = value;
                    this.RaisePropertyChanged("Throughput");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrendLpd {
            get {
                return this.TrendLpdField;
            }
            set {
                if ((object.ReferenceEquals(this.TrendLpdField, value) != true)) {
                    this.TrendLpdField = value;
                    this.RaisePropertyChanged("TrendLpd");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoMessage", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common")]
    [System.SerializableAttribute()]
    public partial class DtoMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoOperatorInfo FromDomainUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessageTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoOperatorInfo ToDomainUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UtcDateTimeSentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoOperatorInfo FromDomainUser {
            get {
                return this.FromDomainUserField;
            }
            set {
                if ((object.ReferenceEquals(this.FromDomainUserField, value) != true)) {
                    this.FromDomainUserField = value;
                    this.RaisePropertyChanged("FromDomainUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageBody {
            get {
                return this.MessageBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageBodyField, value) != true)) {
                    this.MessageBodyField = value;
                    this.RaisePropertyChanged("MessageBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((this.MessageIdField.Equals(value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageTitle {
            get {
                return this.MessageTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageTitleField, value) != true)) {
                    this.MessageTitleField = value;
                    this.RaisePropertyChanged("MessageTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageTypeId {
            get {
                return this.MessageTypeIdField;
            }
            set {
                if ((this.MessageTypeIdField.Equals(value) != true)) {
                    this.MessageTypeIdField = value;
                    this.RaisePropertyChanged("MessageTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoOperatorInfo ToDomainUser {
            get {
                return this.ToDomainUserField;
            }
            set {
                if ((object.ReferenceEquals(this.ToDomainUserField, value) != true)) {
                    this.ToDomainUserField = value;
                    this.RaisePropertyChanged("ToDomainUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UtcDateTimeSent {
            get {
                return this.UtcDateTimeSentField;
            }
            set {
                if ((this.UtcDateTimeSentField.Equals(value) != true)) {
                    this.UtcDateTimeSentField = value;
                    this.RaisePropertyChanged("UtcDateTimeSent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoOperatorInfo", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoOperatorInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OperatorDomainUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorMachineNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorUserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OperatorDomainUserId {
            get {
                return this.OperatorDomainUserIdField;
            }
            set {
                if ((this.OperatorDomainUserIdField.Equals(value) != true)) {
                    this.OperatorDomainUserIdField = value;
                    this.RaisePropertyChanged("OperatorDomainUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatorFullName {
            get {
                return this.OperatorFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorFullNameField, value) != true)) {
                    this.OperatorFullNameField = value;
                    this.RaisePropertyChanged("OperatorFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatorMachineName {
            get {
                return this.OperatorMachineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorMachineNameField, value) != true)) {
                    this.OperatorMachineNameField = value;
                    this.RaisePropertyChanged("OperatorMachineName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatorUserName {
            get {
                return this.OperatorUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorUserNameField, value) != true)) {
                    this.OperatorUserNameField = value;
                    this.RaisePropertyChanged("OperatorUserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoAnalysesMetrics", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoAnalysesMetrics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfTanksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfTanksReadyToDeclareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfTanksWithUnprocessedAnalysesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfUnprocessedAnalysesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatsEngineErrorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfTanks {
            get {
                return this.NumberOfTanksField;
            }
            set {
                if ((this.NumberOfTanksField.Equals(value) != true)) {
                    this.NumberOfTanksField = value;
                    this.RaisePropertyChanged("NumberOfTanks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfTanksReadyToDeclare {
            get {
                return this.NumberOfTanksReadyToDeclareField;
            }
            set {
                if ((this.NumberOfTanksReadyToDeclareField.Equals(value) != true)) {
                    this.NumberOfTanksReadyToDeclareField = value;
                    this.RaisePropertyChanged("NumberOfTanksReadyToDeclare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfTanksWithUnprocessedAnalyses {
            get {
                return this.NumberOfTanksWithUnprocessedAnalysesField;
            }
            set {
                if ((this.NumberOfTanksWithUnprocessedAnalysesField.Equals(value) != true)) {
                    this.NumberOfTanksWithUnprocessedAnalysesField = value;
                    this.RaisePropertyChanged("NumberOfTanksWithUnprocessedAnalyses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfUnprocessedAnalyses {
            get {
                return this.NumberOfUnprocessedAnalysesField;
            }
            set {
                if ((this.NumberOfUnprocessedAnalysesField.Equals(value) != true)) {
                    this.NumberOfUnprocessedAnalysesField = value;
                    this.RaisePropertyChanged("NumberOfUnprocessedAnalyses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatsEngineError {
            get {
                return this.StatsEngineErrorField;
            }
            set {
                if ((this.StatsEngineErrorField.Equals(value) != true)) {
                    this.StatsEngineErrorField = value;
                    this.RaisePropertyChanged("StatsEngineError");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoTankSystemAnalysisMetrics", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoTankSystemAnalysisMetrics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfTankSystemsAnalysisErroredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfTankSystemsAnalysisInProgressField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfTankSystemsAnalysisErrored {
            get {
                return this.NumberOfTankSystemsAnalysisErroredField;
            }
            set {
                if ((this.NumberOfTankSystemsAnalysisErroredField.Equals(value) != true)) {
                    this.NumberOfTankSystemsAnalysisErroredField = value;
                    this.RaisePropertyChanged("NumberOfTankSystemsAnalysisErrored");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfTankSystemsAnalysisInProgress {
            get {
                return this.NumberOfTankSystemsAnalysisInProgressField;
            }
            set {
                if ((this.NumberOfTankSystemsAnalysisInProgressField.Equals(value) != true)) {
                    this.NumberOfTankSystemsAnalysisInProgressField = value;
                    this.RaisePropertyChanged("NumberOfTankSystemsAnalysisInProgress");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoRunStateInfo", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoRunStateInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FirstUnverifiedAnalysisIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstUnverifiedSiteCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FirstUnverifiedSiteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FirstUnverifiedTankSystemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ServerDateAndTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FirstUnverifiedAnalysisId {
            get {
                return this.FirstUnverifiedAnalysisIdField;
            }
            set {
                if ((this.FirstUnverifiedAnalysisIdField.Equals(value) != true)) {
                    this.FirstUnverifiedAnalysisIdField = value;
                    this.RaisePropertyChanged("FirstUnverifiedAnalysisId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstUnverifiedSiteCode {
            get {
                return this.FirstUnverifiedSiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstUnverifiedSiteCodeField, value) != true)) {
                    this.FirstUnverifiedSiteCodeField = value;
                    this.RaisePropertyChanged("FirstUnverifiedSiteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FirstUnverifiedSiteId {
            get {
                return this.FirstUnverifiedSiteIdField;
            }
            set {
                if ((this.FirstUnverifiedSiteIdField.Equals(value) != true)) {
                    this.FirstUnverifiedSiteIdField = value;
                    this.RaisePropertyChanged("FirstUnverifiedSiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FirstUnverifiedTankSystemId {
            get {
                return this.FirstUnverifiedTankSystemIdField;
            }
            set {
                if ((this.FirstUnverifiedTankSystemIdField.Equals(value) != true)) {
                    this.FirstUnverifiedTankSystemIdField = value;
                    this.RaisePropertyChanged("FirstUnverifiedTankSystemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ServerDateAndTime {
            get {
                return this.ServerDateAndTimeField;
            }
            set {
                if ((this.ServerDateAndTimeField.Equals(value) != true)) {
                    this.ServerDateAndTimeField = value;
                    this.RaisePropertyChanged("ServerDateAndTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoTankAnalysisSummary", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoTankAnalysisSummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoAnalysisResult[] ResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyCode {
            get {
                return this.CompanyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyCodeField, value) != true)) {
                    this.CompanyCodeField = value;
                    this.RaisePropertyChanged("CompanyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoAnalysisResult[] Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteCode {
            get {
                return this.SiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteCodeField, value) != true)) {
                    this.SiteCodeField = value;
                    this.RaisePropertyChanged("SiteCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoAnalysisResult", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoAnalysisResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoLastestCycleStartDate", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoLastestCycleStartDate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AnalysisStartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoTankSystem TankSystemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AnalysisStartTime {
            get {
                return this.AnalysisStartTimeField;
            }
            set {
                if ((this.AnalysisStartTimeField.Equals(value) != true)) {
                    this.AnalysisStartTimeField = value;
                    this.RaisePropertyChanged("AnalysisStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoTankSystem TankSystem {
            get {
                return this.TankSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.TankSystemField, value) != true)) {
                    this.TankSystemField = value;
                    this.RaisePropertyChanged("TankSystem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoUnverifiedAnalysisInfo", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.SiraSystem.Services")]
    [System.SerializableAttribute()]
    public partial class DtoUnverifiedAnalysisInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoAnalysis AnalysisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnalysisIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnalysisTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TankSystemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TankSystemNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoAnalysis Analysis {
            get {
                return this.AnalysisField;
            }
            set {
                if ((object.ReferenceEquals(this.AnalysisField, value) != true)) {
                    this.AnalysisField = value;
                    this.RaisePropertyChanged("Analysis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnalysisId {
            get {
                return this.AnalysisIdField;
            }
            set {
                if ((this.AnalysisIdField.Equals(value) != true)) {
                    this.AnalysisIdField = value;
                    this.RaisePropertyChanged("AnalysisId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnalysisType {
            get {
                return this.AnalysisTypeField;
            }
            set {
                if ((this.AnalysisTypeField.Equals(value) != true)) {
                    this.AnalysisTypeField = value;
                    this.RaisePropertyChanged("AnalysisType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteCode {
            get {
                return this.SiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteCodeField, value) != true)) {
                    this.SiteCodeField = value;
                    this.RaisePropertyChanged("SiteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteId {
            get {
                return this.SiteIdField;
            }
            set {
                if ((this.SiteIdField.Equals(value) != true)) {
                    this.SiteIdField = value;
                    this.RaisePropertyChanged("SiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TankSystemId {
            get {
                return this.TankSystemIdField;
            }
            set {
                if ((this.TankSystemIdField.Equals(value) != true)) {
                    this.TankSystemIdField = value;
                    this.RaisePropertyChanged("TankSystemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TankSystemName {
            get {
                return this.TankSystemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TankSystemNameField, value) != true)) {
                    this.TankSystemNameField = value;
                    this.RaisePropertyChanged("TankSystemName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoCalibrationMdlr", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoCalibrationMdlr : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CalibrationFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FirstObsDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastObsDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MDLRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MonthHeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TankSystemIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CalibrationFactor {
            get {
                return this.CalibrationFactorField;
            }
            set {
                if ((this.CalibrationFactorField.Equals(value) != true)) {
                    this.CalibrationFactorField = value;
                    this.RaisePropertyChanged("CalibrationFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FirstObsDate {
            get {
                return this.FirstObsDateField;
            }
            set {
                if ((this.FirstObsDateField.Equals(value) != true)) {
                    this.FirstObsDateField = value;
                    this.RaisePropertyChanged("FirstObsDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastObsDate {
            get {
                return this.LastObsDateField;
            }
            set {
                if ((this.LastObsDateField.Equals(value) != true)) {
                    this.LastObsDateField = value;
                    this.RaisePropertyChanged("LastObsDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MDLR {
            get {
                return this.MDLRField;
            }
            set {
                if ((this.MDLRField.Equals(value) != true)) {
                    this.MDLRField = value;
                    this.RaisePropertyChanged("MDLR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MonthHeader {
            get {
                return this.MonthHeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.MonthHeaderField, value) != true)) {
                    this.MonthHeaderField = value;
                    this.RaisePropertyChanged("MonthHeader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TankSystemId {
            get {
                return this.TankSystemIdField;
            }
            set {
                if ((this.TankSystemIdField.Equals(value) != true)) {
                    this.TankSystemIdField = value;
                    this.RaisePropertyChanged("TankSystemId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoScreamer", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoScreamer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LastObservationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScreamerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TankSystemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TankSystemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime WhenIdentifiedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyCode {
            get {
                return this.CompanyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyCodeField, value) != true)) {
                    this.CompanyCodeField = value;
                    this.RaisePropertyChanged("CompanyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastObservationId {
            get {
                return this.LastObservationIdField;
            }
            set {
                if ((this.LastObservationIdField.Equals(value) != true)) {
                    this.LastObservationIdField = value;
                    this.RaisePropertyChanged("LastObservationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScreamerId {
            get {
                return this.ScreamerIdField;
            }
            set {
                if ((this.ScreamerIdField.Equals(value) != true)) {
                    this.ScreamerIdField = value;
                    this.RaisePropertyChanged("ScreamerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteCode {
            get {
                return this.SiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteCodeField, value) != true)) {
                    this.SiteCodeField = value;
                    this.RaisePropertyChanged("SiteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TankSystemId {
            get {
                return this.TankSystemIdField;
            }
            set {
                if ((this.TankSystemIdField.Equals(value) != true)) {
                    this.TankSystemIdField = value;
                    this.RaisePropertyChanged("TankSystemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TankSystemName {
            get {
                return this.TankSystemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TankSystemNameField, value) != true)) {
                    this.TankSystemNameField = value;
                    this.RaisePropertyChanged("TankSystemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime WhenIdentified {
            get {
                return this.WhenIdentifiedField;
            }
            set {
                if ((this.WhenIdentifiedField.Equals(value) != true)) {
                    this.WhenIdentifiedField = value;
                    this.RaisePropertyChanged("WhenIdentified");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoCalibration", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoCalibration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoCalibrationFactor[] CalibrationFactorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CalibrationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TankSystemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ToDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoCalibrationFactor[] CalibrationFactors {
            get {
                return this.CalibrationFactorsField;
            }
            set {
                if ((object.ReferenceEquals(this.CalibrationFactorsField, value) != true)) {
                    this.CalibrationFactorsField = value;
                    this.RaisePropertyChanged("CalibrationFactors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CalibrationId {
            get {
                return this.CalibrationIdField;
            }
            set {
                if ((this.CalibrationIdField.Equals(value) != true)) {
                    this.CalibrationIdField = value;
                    this.RaisePropertyChanged("CalibrationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FromDate {
            get {
                return this.FromDateField;
            }
            set {
                if ((this.FromDateField.Equals(value) != true)) {
                    this.FromDateField = value;
                    this.RaisePropertyChanged("FromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TankSystemId {
            get {
                return this.TankSystemIdField;
            }
            set {
                if ((this.TankSystemIdField.Equals(value) != true)) {
                    this.TankSystemIdField = value;
                    this.RaisePropertyChanged("TankSystemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ToDate {
            get {
                return this.ToDateField;
            }
            set {
                if ((this.ToDateField.Equals(value) != true)) {
                    this.ToDateField = value;
                    this.RaisePropertyChanged("ToDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoCalibrationFactor", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoCalibrationFactor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CalFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CalibrationFactorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CalibrationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FromLevelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CalFactor {
            get {
                return this.CalFactorField;
            }
            set {
                if ((this.CalFactorField.Equals(value) != true)) {
                    this.CalFactorField = value;
                    this.RaisePropertyChanged("CalFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CalibrationFactorId {
            get {
                return this.CalibrationFactorIdField;
            }
            set {
                if ((this.CalibrationFactorIdField.Equals(value) != true)) {
                    this.CalibrationFactorIdField = value;
                    this.RaisePropertyChanged("CalibrationFactorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CalibrationId {
            get {
                return this.CalibrationIdField;
            }
            set {
                if ((this.CalibrationIdField.Equals(value) != true)) {
                    this.CalibrationIdField = value;
                    this.RaisePropertyChanged("CalibrationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FromLevel {
            get {
                return this.FromLevelField;
            }
            set {
                if ((this.FromLevelField.Equals(value) != true)) {
                    this.FromLevelField = value;
                    this.RaisePropertyChanged("FromLevel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoImportedFile", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoImportedFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ChildFileIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImportPathIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImportStateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImportedFileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTopLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] MessageIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentFileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampUtcField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] ChildFileIds {
            get {
                return this.ChildFileIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildFileIdsField, value) != true)) {
                    this.ChildFileIdsField = value;
                    this.RaisePropertyChanged("ChildFileIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImportPathId {
            get {
                return this.ImportPathIdField;
            }
            set {
                if ((this.ImportPathIdField.Equals(value) != true)) {
                    this.ImportPathIdField = value;
                    this.RaisePropertyChanged("ImportPathId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImportStateId {
            get {
                return this.ImportStateIdField;
            }
            set {
                if ((this.ImportStateIdField.Equals(value) != true)) {
                    this.ImportStateIdField = value;
                    this.RaisePropertyChanged("ImportStateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImportedFileId {
            get {
                return this.ImportedFileIdField;
            }
            set {
                if ((this.ImportedFileIdField.Equals(value) != true)) {
                    this.ImportedFileIdField = value;
                    this.RaisePropertyChanged("ImportedFileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTopLevel {
            get {
                return this.IsTopLevelField;
            }
            set {
                if ((this.IsTopLevelField.Equals(value) != true)) {
                    this.IsTopLevelField = value;
                    this.RaisePropertyChanged("IsTopLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] MessageIds {
            get {
                return this.MessageIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageIdsField, value) != true)) {
                    this.MessageIdsField = value;
                    this.RaisePropertyChanged("MessageIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentFileId {
            get {
                return this.ParentFileIdField;
            }
            set {
                if ((this.ParentFileIdField.Equals(value) != true)) {
                    this.ParentFileIdField = value;
                    this.RaisePropertyChanged("ParentFileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStampUtc {
            get {
                return this.TimeStampUtcField;
            }
            set {
                if ((this.TimeStampUtcField.Equals(value) != true)) {
                    this.TimeStampUtcField = value;
                    this.RaisePropertyChanged("TimeStampUtc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoImportedFileMessage", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Entitie" +
        "s.LobTypes")]
    [System.SerializableAttribute()]
    public partial class DtoImportedFileMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImportMessageTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImportedFileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImportedFileMessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImportMessageTypeId {
            get {
                return this.ImportMessageTypeIdField;
            }
            set {
                if ((this.ImportMessageTypeIdField.Equals(value) != true)) {
                    this.ImportMessageTypeIdField = value;
                    this.RaisePropertyChanged("ImportMessageTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImportedFileId {
            get {
                return this.ImportedFileIdField;
            }
            set {
                if ((this.ImportedFileIdField.Equals(value) != true)) {
                    this.ImportedFileIdField = value;
                    this.RaisePropertyChanged("ImportedFileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImportedFileMessageId {
            get {
                return this.ImportedFileMessageIdField;
            }
            set {
                if ((this.ImportedFileMessageIdField.Equals(value) != true)) {
                    this.ImportedFileMessageIdField = value;
                    this.RaisePropertyChanged("ImportedFileMessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoSiraConfig", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoSiraConfig : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowNegativeSalesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowPassResultinBlackFlagReportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowShortTermAnalysisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultCultureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoSiraGradeConfigSet[] GradeSetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoMissingDataNotificationTrigger MissingDataNotificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoNotificationEmailTrigger NotificationEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoReconciliationAnalysisTrigger ReconciliationAnalysisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiraConfigIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowNegativeSales {
            get {
                return this.AllowNegativeSalesField;
            }
            set {
                if ((this.AllowNegativeSalesField.Equals(value) != true)) {
                    this.AllowNegativeSalesField = value;
                    this.RaisePropertyChanged("AllowNegativeSales");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowPassResultinBlackFlagReport {
            get {
                return this.AllowPassResultinBlackFlagReportField;
            }
            set {
                if ((this.AllowPassResultinBlackFlagReportField.Equals(value) != true)) {
                    this.AllowPassResultinBlackFlagReportField = value;
                    this.RaisePropertyChanged("AllowPassResultinBlackFlagReport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowShortTermAnalysis {
            get {
                return this.AllowShortTermAnalysisField;
            }
            set {
                if ((this.AllowShortTermAnalysisField.Equals(value) != true)) {
                    this.AllowShortTermAnalysisField = value;
                    this.RaisePropertyChanged("AllowShortTermAnalysis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultCulture {
            get {
                return this.DefaultCultureField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultCultureField, value) != true)) {
                    this.DefaultCultureField = value;
                    this.RaisePropertyChanged("DefaultCulture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoSiraGradeConfigSet[] GradeSets {
            get {
                return this.GradeSetsField;
            }
            set {
                if ((object.ReferenceEquals(this.GradeSetsField, value) != true)) {
                    this.GradeSetsField = value;
                    this.RaisePropertyChanged("GradeSets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoMissingDataNotificationTrigger MissingDataNotification {
            get {
                return this.MissingDataNotificationField;
            }
            set {
                if ((object.ReferenceEquals(this.MissingDataNotificationField, value) != true)) {
                    this.MissingDataNotificationField = value;
                    this.RaisePropertyChanged("MissingDataNotification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoNotificationEmailTrigger NotificationEmail {
            get {
                return this.NotificationEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationEmailField, value) != true)) {
                    this.NotificationEmailField = value;
                    this.RaisePropertyChanged("NotificationEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoReconciliationAnalysisTrigger ReconciliationAnalysis {
            get {
                return this.ReconciliationAnalysisField;
            }
            set {
                if ((object.ReferenceEquals(this.ReconciliationAnalysisField, value) != true)) {
                    this.ReconciliationAnalysisField = value;
                    this.RaisePropertyChanged("ReconciliationAnalysis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiraConfigId {
            get {
                return this.SiraConfigIdField;
            }
            set {
                if ((this.SiraConfigIdField.Equals(value) != true)) {
                    this.SiraConfigIdField = value;
                    this.RaisePropertyChanged("SiraConfigId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoMissingDataNotificationTrigger", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoMissingDataNotificationTrigger : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DaysIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartBoundaryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DaysInterval {
            get {
                return this.DaysIntervalField;
            }
            set {
                if ((this.DaysIntervalField.Equals(value) != true)) {
                    this.DaysIntervalField = value;
                    this.RaisePropertyChanged("DaysInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartBoundary {
            get {
                return this.StartBoundaryField;
            }
            set {
                if ((this.StartBoundaryField.Equals(value) != true)) {
                    this.StartBoundaryField = value;
                    this.RaisePropertyChanged("StartBoundary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoNotificationEmailTrigger", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoNotificationEmailTrigger : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DaysIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartBoundaryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DaysInterval {
            get {
                return this.DaysIntervalField;
            }
            set {
                if ((this.DaysIntervalField.Equals(value) != true)) {
                    this.DaysIntervalField = value;
                    this.RaisePropertyChanged("DaysInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartBoundary {
            get {
                return this.StartBoundaryField;
            }
            set {
                if ((this.StartBoundaryField.Equals(value) != true)) {
                    this.StartBoundaryField = value;
                    this.RaisePropertyChanged("StartBoundary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoReconciliationAnalysisTrigger", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoReconciliationAnalysisTrigger : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OutOfToleranceThresholdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OutOfToleranceThreshold {
            get {
                return this.OutOfToleranceThresholdField;
            }
            set {
                if ((this.OutOfToleranceThresholdField.Equals(value) != true)) {
                    this.OutOfToleranceThresholdField = value;
                    this.RaisePropertyChanged("OutOfToleranceThreshold");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoSiraGradeConfigSet", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoSiraGradeConfigSet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasCustomTriggerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoSiraGradeConfig[] SiraGradeConfigsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasCustomTrigger {
            get {
                return this.HasCustomTriggerField;
            }
            set {
                if ((this.HasCustomTriggerField.Equals(value) != true)) {
                    this.HasCustomTriggerField = value;
                    this.RaisePropertyChanged("HasCustomTrigger");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoSiraGradeConfig[] SiraGradeConfigs {
            get {
                return this.SiraGradeConfigsField;
            }
            set {
                if ((object.ReferenceEquals(this.SiraGradeConfigsField, value) != true)) {
                    this.SiraGradeConfigsField = value;
                    this.RaisePropertyChanged("SiraGradeConfigs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoSiraGradeConfig", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoSiraGradeConfig : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LossInvestigationLpdTriggerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LossInvestigationTriggerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MonthOfYearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LossInvestigationLpdTrigger {
            get {
                return this.LossInvestigationLpdTriggerField;
            }
            set {
                if ((this.LossInvestigationLpdTriggerField.Equals(value) != true)) {
                    this.LossInvestigationLpdTriggerField = value;
                    this.RaisePropertyChanged("LossInvestigationLpdTrigger");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LossInvestigationTrigger {
            get {
                return this.LossInvestigationTriggerField;
            }
            set {
                if ((this.LossInvestigationTriggerField.Equals(value) != true)) {
                    this.LossInvestigationTriggerField = value;
                    this.RaisePropertyChanged("LossInvestigationTrigger");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MonthOfYear {
            get {
                return this.MonthOfYearField;
            }
            set {
                if ((this.MonthOfYearField.Equals(value) != true)) {
                    this.MonthOfYearField = value;
                    this.RaisePropertyChanged("MonthOfYear");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoObservationRawDataChangeLog", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoObservationRawDataChangeLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ChangedDeliveryLitresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ChangedDipLitresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ChangedSaleLitresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateInsertedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> DipLitresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModificationDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ObservationDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> OriginalDeliveryLitresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> OriginalDipLitresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> OriginalSaleLitresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RawDeliveryLitresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RawTankNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SaleLitresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> TemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalInformation {
            get {
                return this.AdditionalInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalInformationField, value) != true)) {
                    this.AdditionalInformationField = value;
                    this.RaisePropertyChanged("AdditionalInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> ChangedDeliveryLitres {
            get {
                return this.ChangedDeliveryLitresField;
            }
            set {
                if ((this.ChangedDeliveryLitresField.Equals(value) != true)) {
                    this.ChangedDeliveryLitresField = value;
                    this.RaisePropertyChanged("ChangedDeliveryLitres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> ChangedDipLitres {
            get {
                return this.ChangedDipLitresField;
            }
            set {
                if ((this.ChangedDipLitresField.Equals(value) != true)) {
                    this.ChangedDipLitresField = value;
                    this.RaisePropertyChanged("ChangedDipLitres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> ChangedSaleLitres {
            get {
                return this.ChangedSaleLitresField;
            }
            set {
                if ((this.ChangedSaleLitresField.Equals(value) != true)) {
                    this.ChangedSaleLitresField = value;
                    this.RaisePropertyChanged("ChangedSaleLitres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateInserted {
            get {
                return this.DateInsertedField;
            }
            set {
                if ((this.DateInsertedField.Equals(value) != true)) {
                    this.DateInsertedField = value;
                    this.RaisePropertyChanged("DateInserted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> DipLitres {
            get {
                return this.DipLitresField;
            }
            set {
                if ((this.DipLitresField.Equals(value) != true)) {
                    this.DipLitresField = value;
                    this.RaisePropertyChanged("DipLitres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModificationDateTime {
            get {
                return this.ModificationDateTimeField;
            }
            set {
                if ((this.ModificationDateTimeField.Equals(value) != true)) {
                    this.ModificationDateTimeField = value;
                    this.RaisePropertyChanged("ModificationDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ObservationDateTime {
            get {
                return this.ObservationDateTimeField;
            }
            set {
                if ((this.ObservationDateTimeField.Equals(value) != true)) {
                    this.ObservationDateTimeField = value;
                    this.RaisePropertyChanged("ObservationDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> OriginalDeliveryLitres {
            get {
                return this.OriginalDeliveryLitresField;
            }
            set {
                if ((this.OriginalDeliveryLitresField.Equals(value) != true)) {
                    this.OriginalDeliveryLitresField = value;
                    this.RaisePropertyChanged("OriginalDeliveryLitres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> OriginalDipLitres {
            get {
                return this.OriginalDipLitresField;
            }
            set {
                if ((this.OriginalDipLitresField.Equals(value) != true)) {
                    this.OriginalDipLitresField = value;
                    this.RaisePropertyChanged("OriginalDipLitres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> OriginalSaleLitres {
            get {
                return this.OriginalSaleLitresField;
            }
            set {
                if ((this.OriginalSaleLitresField.Equals(value) != true)) {
                    this.OriginalSaleLitresField = value;
                    this.RaisePropertyChanged("OriginalSaleLitres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RawDeliveryLitres {
            get {
                return this.RawDeliveryLitresField;
            }
            set {
                if ((this.RawDeliveryLitresField.Equals(value) != true)) {
                    this.RawDeliveryLitresField = value;
                    this.RaisePropertyChanged("RawDeliveryLitres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RawTankNumber {
            get {
                return this.RawTankNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RawTankNumberField, value) != true)) {
                    this.RawTankNumberField = value;
                    this.RaisePropertyChanged("RawTankNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SaleLitres {
            get {
                return this.SaleLitresField;
            }
            set {
                if ((this.SaleLitresField.Equals(value) != true)) {
                    this.SaleLitresField = value;
                    this.RaisePropertyChanged("SaleLitres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteCode {
            get {
                return this.SiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteCodeField, value) != true)) {
                    this.SiteCodeField = value;
                    this.RaisePropertyChanged("SiteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Temperature {
            get {
                return this.TemperatureField;
            }
            set {
                if ((this.TemperatureField.Equals(value) != true)) {
                    this.TemperatureField = value;
                    this.RaisePropertyChanged("Temperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoClientInfo", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.SiraSystem.DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoClientInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] ActivityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastHeardFromField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] Activity {
            get {
                return this.ActivityField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityField, value) != true)) {
                    this.ActivityField = value;
                    this.RaisePropertyChanged("Activity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IpAddress {
            get {
                return this.IpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IpAddressField, value) != true)) {
                    this.IpAddressField = value;
                    this.RaisePropertyChanged("IpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastHeardFrom {
            get {
                return this.LastHeardFromField;
            }
            set {
                if ((this.LastHeardFromField.Equals(value) != true)) {
                    this.LastHeardFromField = value;
                    this.RaisePropertyChanged("LastHeardFrom");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoSystemInfo", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.SiraSystem.Services")]
    [System.SerializableAttribute()]
    public partial class DtoSystemInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientLoggingConfigurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan ClientMetricsUpdatePeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan ClientPollPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatabaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatabaseVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasCustomLoggingEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatsEngineLockedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationVersion {
            get {
                return this.ApplicationVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationVersionField, value) != true)) {
                    this.ApplicationVersionField = value;
                    this.RaisePropertyChanged("ApplicationVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientLoggingConfiguration {
            get {
                return this.ClientLoggingConfigurationField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientLoggingConfigurationField, value) != true)) {
                    this.ClientLoggingConfigurationField = value;
                    this.RaisePropertyChanged("ClientLoggingConfiguration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan ClientMetricsUpdatePeriod {
            get {
                return this.ClientMetricsUpdatePeriodField;
            }
            set {
                if ((this.ClientMetricsUpdatePeriodField.Equals(value) != true)) {
                    this.ClientMetricsUpdatePeriodField = value;
                    this.RaisePropertyChanged("ClientMetricsUpdatePeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan ClientPollPeriod {
            get {
                return this.ClientPollPeriodField;
            }
            set {
                if ((this.ClientPollPeriodField.Equals(value) != true)) {
                    this.ClientPollPeriodField = value;
                    this.RaisePropertyChanged("ClientPollPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatabaseName {
            get {
                return this.DatabaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseNameField, value) != true)) {
                    this.DatabaseNameField = value;
                    this.RaisePropertyChanged("DatabaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatabaseVersion {
            get {
                return this.DatabaseVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseVersionField, value) != true)) {
                    this.DatabaseVersionField = value;
                    this.RaisePropertyChanged("DatabaseVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasCustomLoggingEnabled {
            get {
                return this.HasCustomLoggingEnabledField;
            }
            set {
                if ((this.HasCustomLoggingEnabledField.Equals(value) != true)) {
                    this.HasCustomLoggingEnabledField = value;
                    this.RaisePropertyChanged("HasCustomLoggingEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatsEngineLocked {
            get {
                return this.StatsEngineLockedField;
            }
            set {
                if ((this.StatsEngineLockedField.Equals(value) != true)) {
                    this.StatsEngineLockedField = value;
                    this.RaisePropertyChanged("StatsEngineLocked");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoSiraBlackFlagReportJournal", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Entitie" +
        "s.LobTypes")]
    [System.SerializableAttribute()]
    public partial class DtoSiraBlackFlagReportJournal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateRemovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiraBlackFlagReportJournalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TankSystemIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAdded {
            get {
                return this.DateAddedField;
            }
            set {
                if ((this.DateAddedField.Equals(value) != true)) {
                    this.DateAddedField = value;
                    this.RaisePropertyChanged("DateAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateRemoved {
            get {
                return this.DateRemovedField;
            }
            set {
                if ((this.DateRemovedField.Equals(value) != true)) {
                    this.DateRemovedField = value;
                    this.RaisePropertyChanged("DateRemoved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiraBlackFlagReportJournalId {
            get {
                return this.SiraBlackFlagReportJournalIdField;
            }
            set {
                if ((this.SiraBlackFlagReportJournalIdField.Equals(value) != true)) {
                    this.SiraBlackFlagReportJournalIdField = value;
                    this.RaisePropertyChanged("SiraBlackFlagReportJournalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TankSystemId {
            get {
                return this.TankSystemIdField;
            }
            set {
                if ((this.TankSystemIdField.Equals(value) != true)) {
                    this.TankSystemIdField = value;
                    this.RaisePropertyChanged("TankSystemId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoFileReader", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.BL.Framework.Dt" +
        "o")]
    [System.SerializableAttribute()]
    public partial class DtoFileReader : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] CompanyIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileReaderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] CompanyIds {
            get {
                return this.CompanyIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyIdsField, value) != true)) {
                    this.CompanyIdsField = value;
                    this.RaisePropertyChanged("CompanyIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileReaderId {
            get {
                return this.FileReaderIdField;
            }
            set {
                if ((this.FileReaderIdField.Equals(value) != true)) {
                    this.FileReaderIdField = value;
                    this.RaisePropertyChanged("FileReaderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoImportPath", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Entitie" +
        "s.LobTypes")]
    [System.SerializableAttribute()]
    public partial class DtoImportPath : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImportPathIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImportPathId {
            get {
                return this.ImportPathIdField;
            }
            set {
                if ((this.ImportPathIdField.Equals(value) != true)) {
                    this.ImportPathIdField = value;
                    this.RaisePropertyChanged("ImportPathId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoAnalysisTask", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoAnalysisTask : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnalysisIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnalysisTaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnalysisWorkTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnalysisWorkTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsScreamerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastObsDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProcessingStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TankSystemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TankSystemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> WhenVerifiedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnalysisId {
            get {
                return this.AnalysisIdField;
            }
            set {
                if ((this.AnalysisIdField.Equals(value) != true)) {
                    this.AnalysisIdField = value;
                    this.RaisePropertyChanged("AnalysisId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnalysisTaskId {
            get {
                return this.AnalysisTaskIdField;
            }
            set {
                if ((this.AnalysisTaskIdField.Equals(value) != true)) {
                    this.AnalysisTaskIdField = value;
                    this.RaisePropertyChanged("AnalysisTaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnalysisWorkTypeId {
            get {
                return this.AnalysisWorkTypeIdField;
            }
            set {
                if ((this.AnalysisWorkTypeIdField.Equals(value) != true)) {
                    this.AnalysisWorkTypeIdField = value;
                    this.RaisePropertyChanged("AnalysisWorkTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnalysisWorkTypeName {
            get {
                return this.AnalysisWorkTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AnalysisWorkTypeNameField, value) != true)) {
                    this.AnalysisWorkTypeNameField = value;
                    this.RaisePropertyChanged("AnalysisWorkTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyCode {
            get {
                return this.CompanyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyCodeField, value) != true)) {
                    this.CompanyCodeField = value;
                    this.RaisePropertyChanged("CompanyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Done {
            get {
                return this.DoneField;
            }
            set {
                if ((this.DoneField.Equals(value) != true)) {
                    this.DoneField = value;
                    this.RaisePropertyChanged("Done");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsScreamer {
            get {
                return this.IsScreamerField;
            }
            set {
                if ((this.IsScreamerField.Equals(value) != true)) {
                    this.IsScreamerField = value;
                    this.RaisePropertyChanged("IsScreamer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobName {
            get {
                return this.JobNameField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNameField, value) != true)) {
                    this.JobNameField = value;
                    this.RaisePropertyChanged("JobName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastObsDate {
            get {
                return this.LastObsDateField;
            }
            set {
                if ((this.LastObsDateField.Equals(value) != true)) {
                    this.LastObsDateField = value;
                    this.RaisePropertyChanged("LastObsDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProcessingState {
            get {
                return this.ProcessingStateField;
            }
            set {
                if ((this.ProcessingStateField.Equals(value) != true)) {
                    this.ProcessingStateField = value;
                    this.RaisePropertyChanged("ProcessingState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteCode {
            get {
                return this.SiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteCodeField, value) != true)) {
                    this.SiteCodeField = value;
                    this.RaisePropertyChanged("SiteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteId {
            get {
                return this.SiteIdField;
            }
            set {
                if ((this.SiteIdField.Equals(value) != true)) {
                    this.SiteIdField = value;
                    this.RaisePropertyChanged("SiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TankSystemId {
            get {
                return this.TankSystemIdField;
            }
            set {
                if ((this.TankSystemIdField.Equals(value) != true)) {
                    this.TankSystemIdField = value;
                    this.RaisePropertyChanged("TankSystemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TankSystemName {
            get {
                return this.TankSystemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TankSystemNameField, value) != true)) {
                    this.TankSystemNameField = value;
                    this.RaisePropertyChanged("TankSystemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> WhenVerified {
            get {
                return this.WhenVerifiedField;
            }
            set {
                if ((this.WhenVerifiedField.Equals(value) != true)) {
                    this.WhenVerifiedField = value;
                    this.RaisePropertyChanged("WhenVerified");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoPublishingDataCriteria", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoPublishingDataCriteria : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AnalysisMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AnalysisMonth {
            get {
                return this.AnalysisMonthField;
            }
            set {
                if ((this.AnalysisMonthField.Equals(value) != true)) {
                    this.AnalysisMonthField = value;
                    this.RaisePropertyChanged("AnalysisMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoAnalysesDataToPublish", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoAnalysesDataToPublish : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnalysisIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnalysisJournalIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnalysisId {
            get {
                return this.AnalysisIdField;
            }
            set {
                if ((this.AnalysisIdField.Equals(value) != true)) {
                    this.AnalysisIdField = value;
                    this.RaisePropertyChanged("AnalysisId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnalysisJournalId {
            get {
                return this.AnalysisJournalIdField;
            }
            set {
                if ((this.AnalysisJournalIdField.Equals(value) != true)) {
                    this.AnalysisJournalIdField = value;
                    this.RaisePropertyChanged("AnalysisJournalId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoMessagesFilter", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoMessagesFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DomainUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessagesNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DomainUserId {
            get {
                return this.DomainUserIdField;
            }
            set {
                if ((this.DomainUserIdField.Equals(value) != true)) {
                    this.DomainUserIdField = value;
                    this.RaisePropertyChanged("DomainUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessagesNumber {
            get {
                return this.MessagesNumberField;
            }
            set {
                if ((this.MessagesNumberField.Equals(value) != true)) {
                    this.MessagesNumberField = value;
                    this.RaisePropertyChanged("MessagesNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoSessionCommand", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    public enum DtoSessionCommand : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseExistingSession = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreateNewBrowsingSession = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreateNewSavingSession = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoLogEvent", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.SiraSystem.DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoLogEvent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Context {
            get {
                return this.ContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextField, value) != true)) {
                    this.ContextField = value;
                    this.RaisePropertyChanged("Context");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Level {
            get {
                return this.LevelField;
            }
            set {
                if ((object.ReferenceEquals(this.LevelField, value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoClientMetric", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.SiraSystem.DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoClientMetric : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampUtcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProgramMonitor.SIRA.DtoClientMetricValue[] ValuesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStampUtc {
            get {
                return this.TimeStampUtcField;
            }
            set {
                if ((this.TimeStampUtcField.Equals(value) != true)) {
                    this.TimeStampUtcField = value;
                    this.RaisePropertyChanged("TimeStampUtc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitsField, value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProgramMonitor.SIRA.DtoClientMetricValue[] Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoClientMetricValue", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.SiraSystem.DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoClientMetricValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoSiraGradeConfigFilter", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoSiraGradeConfigFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DoesApplyAllField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GradeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SiteIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DoesApplyAll {
            get {
                return this.DoesApplyAllField;
            }
            set {
                if ((this.DoesApplyAllField.Equals(value) != true)) {
                    this.DoesApplyAllField = value;
                    this.RaisePropertyChanged("DoesApplyAll");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GradeId {
            get {
                return this.GradeIdField;
            }
            set {
                if ((this.GradeIdField.Equals(value) != true)) {
                    this.GradeIdField = value;
                    this.RaisePropertyChanged("GradeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postcode {
            get {
                return this.PostcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostcodeField, value) != true)) {
                    this.PostcodeField = value;
                    this.RaisePropertyChanged("Postcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SiteId {
            get {
                return this.SiteIdField;
            }
            set {
                if ((this.SiteIdField.Equals(value) != true)) {
                    this.SiteIdField = value;
                    this.RaisePropertyChanged("SiteId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoAuditLog", Namespace="http://schemas.datacontract.org/2004/07/LeightonOBrien.Hydraulics.Sira.BL.Common." +
        "DtoTypes")]
    [System.SerializableAttribute()]
    public partial class DtoAuditLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ActionDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuditedObjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuditedObjectTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientApplicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActionDateTime {
            get {
                return this.ActionDateTimeField;
            }
            set {
                if ((this.ActionDateTimeField.Equals(value) != true)) {
                    this.ActionDateTimeField = value;
                    this.RaisePropertyChanged("ActionDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActionId {
            get {
                return this.ActionIdField;
            }
            set {
                if ((this.ActionIdField.Equals(value) != true)) {
                    this.ActionIdField = value;
                    this.RaisePropertyChanged("ActionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalInformation {
            get {
                return this.AdditionalInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalInformationField, value) != true)) {
                    this.AdditionalInformationField = value;
                    this.RaisePropertyChanged("AdditionalInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuditedObjectId {
            get {
                return this.AuditedObjectIdField;
            }
            set {
                if ((this.AuditedObjectIdField.Equals(value) != true)) {
                    this.AuditedObjectIdField = value;
                    this.RaisePropertyChanged("AuditedObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuditedObjectTypeId {
            get {
                return this.AuditedObjectTypeIdField;
            }
            set {
                if ((this.AuditedObjectTypeIdField.Equals(value) != true)) {
                    this.AuditedObjectTypeIdField = value;
                    this.RaisePropertyChanged("AuditedObjectTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientApplicationId {
            get {
                return this.ClientApplicationIdField;
            }
            set {
                if ((this.ClientApplicationIdField.Equals(value) != true)) {
                    this.ClientApplicationIdField = value;
                    this.RaisePropertyChanged("ClientApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogDetail {
            get {
                return this.LogDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.LogDetailField, value) != true)) {
                    this.LogDetailField = value;
                    this.RaisePropertyChanged("LogDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SIRA.ISiraSystemService")]
    public interface ISiraSystemService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/AnalysisRunGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/AnalysisRunGetAllResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisRunHll1wPEA AnalysisRunGetAll(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/AnalysisRunGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/AnalysisRunGetAllResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisRunHll1wPEA> AnalysisRunGetAllAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/AnalysisRunGet", ReplyAction="http://tempuri.org/ISiraSystemService/AnalysisRunGetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisRunHll1wPEA AnalysisRunGet(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/AnalysisRunGet", ReplyAction="http://tempuri.org/ISiraSystemService/AnalysisRunGetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisRunHll1wPEA> AnalysisRunGetAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/AnalysisRunDelete", ReplyAction="http://tempuri.org/ISiraSystemService/AnalysisRunDeleteResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean AnalysisRunDelete(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/AnalysisRunDelete", ReplyAction="http://tempuri.org/ISiraSystemService/AnalysisRunDeleteResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> AnalysisRunDeleteAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/AnalysisRunCommit", ReplyAction="http://tempuri.org/ISiraSystemService/AnalysisRunCommitResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisRunHll1wPEA AnalysisRunCommit(ProgramMonitor.SIRA.DtoAnalysisRun[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/AnalysisRunCommit", ReplyAction="http://tempuri.org/ISiraSystemService/AnalysisRunCommitResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisRunHll1wPEA> AnalysisRunCommitAsync(ProgramMonitor.SIRA.DtoAnalysisRun[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/AnalysisRunCreate", ReplyAction="http://tempuri.org/ISiraSystemService/AnalysisRunCreateResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisRunHll1wPEA AnalysisRunCreate(ProgramMonitor.SIRA.DtoAnalysisRun[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/AnalysisRunCreate", ReplyAction="http://tempuri.org/ISiraSystemService/AnalysisRunCreateResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisRunHll1wPEA> AnalysisRunCreateAsync(ProgramMonitor.SIRA.DtoAnalysisRun[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PermissionGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/PermissionGetAllResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoPermissionI_PRg1ux4 PermissionGetAll(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PermissionGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/PermissionGetAllResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPermissionI_PRg1ux4> PermissionGetAllAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PermissionGet", ReplyAction="http://tempuri.org/ISiraSystemService/PermissionGetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoPermissionI_PRg1ux4 PermissionGet(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PermissionGet", ReplyAction="http://tempuri.org/ISiraSystemService/PermissionGetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPermissionI_PRg1ux4> PermissionGetAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CompanyRoleGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/CompanyRoleGetAllResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoCompanyRoleI_PRg1ux4 CompanyRoleGetAll(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CompanyRoleGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/CompanyRoleGetAllResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCompanyRoleI_PRg1ux4> CompanyRoleGetAllAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CompanyRoleGet", ReplyAction="http://tempuri.org/ISiraSystemService/CompanyRoleGetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoCompanyRoleI_PRg1ux4 CompanyRoleGet(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CompanyRoleGet", ReplyAction="http://tempuri.org/ISiraSystemService/CompanyRoleGetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCompanyRoleI_PRg1ux4> CompanyRoleGetAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CompanyRoleDelete", ReplyAction="http://tempuri.org/ISiraSystemService/CompanyRoleDeleteResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean CompanyRoleDelete(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CompanyRoleDelete", ReplyAction="http://tempuri.org/ISiraSystemService/CompanyRoleDeleteResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> CompanyRoleDeleteAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CompanyRoleCommit", ReplyAction="http://tempuri.org/ISiraSystemService/CompanyRoleCommitResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoCompanyRoleI_PRg1ux4 CompanyRoleCommit(ProgramMonitor.SIRA.DtoCompanyRole[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CompanyRoleCommit", ReplyAction="http://tempuri.org/ISiraSystemService/CompanyRoleCommitResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCompanyRoleI_PRg1ux4> CompanyRoleCommitAsync(ProgramMonitor.SIRA.DtoCompanyRole[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CompanyRoleCreate", ReplyAction="http://tempuri.org/ISiraSystemService/CompanyRoleCreateResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoCompanyRoleI_PRg1ux4 CompanyRoleCreate(ProgramMonitor.SIRA.DtoCompanyRole[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CompanyRoleCreate", ReplyAction="http://tempuri.org/ISiraSystemService/CompanyRoleCreateResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCompanyRoleI_PRg1ux4> CompanyRoleCreateAsync(ProgramMonitor.SIRA.DtoCompanyRole[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ObservationRawDataGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/ObservationRawDataGetAllResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoObservationRawDataHll1wPEA ObservationRawDataGetAll(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ObservationRawDataGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/ObservationRawDataGetAllResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoObservationRawDataHll1wPEA> ObservationRawDataGetAllAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ObservationRawDataGet", ReplyAction="http://tempuri.org/ISiraSystemService/ObservationRawDataGetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoObservationRawDataHll1wPEA ObservationRawDataGet(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ObservationRawDataGet", ReplyAction="http://tempuri.org/ISiraSystemService/ObservationRawDataGetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoObservationRawDataHll1wPEA> ObservationRawDataGetAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ObservationRawDataDelete", ReplyAction="http://tempuri.org/ISiraSystemService/ObservationRawDataDeleteResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean ObservationRawDataDelete(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ObservationRawDataDelete", ReplyAction="http://tempuri.org/ISiraSystemService/ObservationRawDataDeleteResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> ObservationRawDataDeleteAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ObservationRawDataCommit", ReplyAction="http://tempuri.org/ISiraSystemService/ObservationRawDataCommitResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoObservationRawDataHll1wPEA ObservationRawDataCommit(ProgramMonitor.SIRA.DtoObservationRawData[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ObservationRawDataCommit", ReplyAction="http://tempuri.org/ISiraSystemService/ObservationRawDataCommitResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoObservationRawDataHll1wPEA> ObservationRawDataCommitAsync(ProgramMonitor.SIRA.DtoObservationRawData[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ObservationRawDataCreate", ReplyAction="http://tempuri.org/ISiraSystemService/ObservationRawDataCreateResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoObservationRawDataHll1wPEA ObservationRawDataCreate(ProgramMonitor.SIRA.DtoObservationRawData[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ObservationRawDataCreate", ReplyAction="http://tempuri.org/ISiraSystemService/ObservationRawDataCreateResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoObservationRawDataHll1wPEA> ObservationRawDataCreateAsync(ProgramMonitor.SIRA.DtoObservationRawData[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GradeGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/GradeGetAllResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoGradeHll1wPEA GradeGetAll(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GradeGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/GradeGetAllResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoGradeHll1wPEA> GradeGetAllAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GradeGet", ReplyAction="http://tempuri.org/ISiraSystemService/GradeGetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoGradeHll1wPEA GradeGet(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GradeGet", ReplyAction="http://tempuri.org/ISiraSystemService/GradeGetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoGradeHll1wPEA> GradeGetAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GradeAliasGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/GradeAliasGetAllResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoGradeAliasHll1wPEA GradeAliasGetAll(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GradeAliasGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/GradeAliasGetAllResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoGradeAliasHll1wPEA> GradeAliasGetAllAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GradeAliasGet", ReplyAction="http://tempuri.org/ISiraSystemService/GradeAliasGetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoGradeAliasHll1wPEA GradeAliasGet(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GradeAliasGet", ReplyAction="http://tempuri.org/ISiraSystemService/GradeAliasGetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoGradeAliasHll1wPEA> GradeAliasGetAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GradeAliasDelete", ReplyAction="http://tempuri.org/ISiraSystemService/GradeAliasDeleteResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean GradeAliasDelete(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GradeAliasDelete", ReplyAction="http://tempuri.org/ISiraSystemService/GradeAliasDeleteResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> GradeAliasDeleteAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GradeAliasCommit", ReplyAction="http://tempuri.org/ISiraSystemService/GradeAliasCommitResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoGradeAliasHll1wPEA GradeAliasCommit(ProgramMonitor.SIRA.DtoGradeAlias[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GradeAliasCommit", ReplyAction="http://tempuri.org/ISiraSystemService/GradeAliasCommitResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoGradeAliasHll1wPEA> GradeAliasCommitAsync(ProgramMonitor.SIRA.DtoGradeAlias[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/TankGet", ReplyAction="http://tempuri.org/ISiraSystemService/TankGetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoTankI_PRg1ux4 TankGet(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/TankGet", ReplyAction="http://tempuri.org/ISiraSystemService/TankGetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoTankI_PRg1ux4> TankGetAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/TankCommit", ReplyAction="http://tempuri.org/ISiraSystemService/TankCommitResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoTankI_PRg1ux4 TankCommit(ProgramMonitor.SIRA.DtoTank[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/TankCommit", ReplyAction="http://tempuri.org/ISiraSystemService/TankCommitResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoTankI_PRg1ux4> TankCommitAsync(ProgramMonitor.SIRA.DtoTank[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RegionGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/RegionGetAllResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoRegionI_PRg1ux4 RegionGetAll(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RegionGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/RegionGetAllResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoRegionI_PRg1ux4> RegionGetAllAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RegionGet", ReplyAction="http://tempuri.org/ISiraSystemService/RegionGetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoRegionI_PRg1ux4 RegionGet(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RegionGet", ReplyAction="http://tempuri.org/ISiraSystemService/RegionGetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoRegionI_PRg1ux4> RegionGetAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RegionDelete", ReplyAction="http://tempuri.org/ISiraSystemService/RegionDeleteResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean RegionDelete(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RegionDelete", ReplyAction="http://tempuri.org/ISiraSystemService/RegionDeleteResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> RegionDeleteAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RegionCommit", ReplyAction="http://tempuri.org/ISiraSystemService/RegionCommitResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoRegionI_PRg1ux4 RegionCommit(ProgramMonitor.SIRA.DtoRegion[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RegionCommit", ReplyAction="http://tempuri.org/ISiraSystemService/RegionCommitResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoRegionI_PRg1ux4> RegionCommitAsync(ProgramMonitor.SIRA.DtoRegion[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RegionCreate", ReplyAction="http://tempuri.org/ISiraSystemService/RegionCreateResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoRegionI_PRg1ux4 RegionCreate(ProgramMonitor.SIRA.DtoRegion[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RegionCreate", ReplyAction="http://tempuri.org/ISiraSystemService/RegionCreateResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoRegionI_PRg1ux4> RegionCreateAsync(ProgramMonitor.SIRA.DtoRegion[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RuleGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/RuleGetAllResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoRuleHll1wPEA RuleGetAll(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RuleGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/RuleGetAllResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoRuleHll1wPEA> RuleGetAllAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RuleGet", ReplyAction="http://tempuri.org/ISiraSystemService/RuleGetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoRuleHll1wPEA RuleGet(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RuleGet", ReplyAction="http://tempuri.org/ISiraSystemService/RuleGetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoRuleHll1wPEA> RuleGetAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RuleDelete", ReplyAction="http://tempuri.org/ISiraSystemService/RuleDeleteResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean RuleDelete(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RuleDelete", ReplyAction="http://tempuri.org/ISiraSystemService/RuleDeleteResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> RuleDeleteAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RuleCommit", ReplyAction="http://tempuri.org/ISiraSystemService/RuleCommitResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoRuleHll1wPEA RuleCommit(ProgramMonitor.SIRA.DtoRule[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RuleCommit", ReplyAction="http://tempuri.org/ISiraSystemService/RuleCommitResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoRuleHll1wPEA> RuleCommitAsync(ProgramMonitor.SIRA.DtoRule[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RuleCreate", ReplyAction="http://tempuri.org/ISiraSystemService/RuleCreateResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoRuleHll1wPEA RuleCreate(ProgramMonitor.SIRA.DtoRule[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RuleCreate", ReplyAction="http://tempuri.org/ISiraSystemService/RuleCreateResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoRuleHll1wPEA> RuleCreateAsync(ProgramMonitor.SIRA.DtoRule[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceGetAllResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceHll1wPEA PostAnalysisServiceGetAll(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceGetAllResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceHll1wPEA> PostAnalysisServiceGetAllAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceGet", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceGetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceHll1wPEA PostAnalysisServiceGet(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceGet", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceGetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceHll1wPEA> PostAnalysisServiceGetAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceDelete", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceDeleteResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean PostAnalysisServiceDelete(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceDelete", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceDeleteResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> PostAnalysisServiceDeleteAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceCommit", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceCommitResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceHll1wPEA PostAnalysisServiceCommit(ProgramMonitor.SIRA.DtoPostAnalysisService[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceCommit", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceCommitResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceHll1wPEA> PostAnalysisServiceCommitAsync(ProgramMonitor.SIRA.DtoPostAnalysisService[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceCreate", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceCreateResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceHll1wPEA PostAnalysisServiceCreate(ProgramMonitor.SIRA.DtoPostAnalysisService[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceCreate", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceCreateResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceHll1wPEA> PostAnalysisServiceCreateAsync(ProgramMonitor.SIRA.DtoPostAnalysisService[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PublisherGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/PublisherGetAllResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoPublisherHll1wPEA PublisherGetAll(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PublisherGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/PublisherGetAllResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPublisherHll1wPEA> PublisherGetAllAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PublisherGet", ReplyAction="http://tempuri.org/ISiraSystemService/PublisherGetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoPublisherHll1wPEA PublisherGet(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PublisherGet", ReplyAction="http://tempuri.org/ISiraSystemService/PublisherGetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPublisherHll1wPEA> PublisherGetAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PublisherActionGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/PublisherActionGetAllResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoPublisherActionHll1wPEA PublisherActionGetAll(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PublisherActionGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/PublisherActionGetAllResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPublisherActionHll1wPEA> PublisherActionGetAllAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PublisherActionGet", ReplyAction="http://tempuri.org/ISiraSystemService/PublisherActionGetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoPublisherActionHll1wPEA PublisherActionGet(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PublisherActionGet", ReplyAction="http://tempuri.org/ISiraSystemService/PublisherActionGetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPublisherActionHll1wPEA> PublisherActionGetAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PublisherActionDelete", ReplyAction="http://tempuri.org/ISiraSystemService/PublisherActionDeleteResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean PublisherActionDelete(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PublisherActionDelete", ReplyAction="http://tempuri.org/ISiraSystemService/PublisherActionDeleteResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> PublisherActionDeleteAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PublisherActionCommit", ReplyAction="http://tempuri.org/ISiraSystemService/PublisherActionCommitResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoPublisherActionHll1wPEA PublisherActionCommit(ProgramMonitor.SIRA.DtoPublisherAction[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PublisherActionCommit", ReplyAction="http://tempuri.org/ISiraSystemService/PublisherActionCommitResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPublisherActionHll1wPEA> PublisherActionCommitAsync(ProgramMonitor.SIRA.DtoPublisherAction[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PublisherActionCreate", ReplyAction="http://tempuri.org/ISiraSystemService/PublisherActionCreateResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoPublisherActionHll1wPEA PublisherActionCreate(ProgramMonitor.SIRA.DtoPublisherAction[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PublisherActionCreate", ReplyAction="http://tempuri.org/ISiraSystemService/PublisherActionCreateResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPublisherActionHll1wPEA> PublisherActionCreateAsync(ProgramMonitor.SIRA.DtoPublisherAction[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceActionGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceActionGetAllResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceActionHll1wPEA PostAnalysisServiceActionGetAll(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceActionGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceActionGetAllResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceActionHll1wPEA> PostAnalysisServiceActionGetAllAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceActionGet", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceActionGetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceActionHll1wPEA PostAnalysisServiceActionGet(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceActionGet", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceActionGetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceActionHll1wPEA> PostAnalysisServiceActionGetAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceActionDelete", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceActionDeleteResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean PostAnalysisServiceActionDelete(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceActionDelete", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceActionDeleteResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> PostAnalysisServiceActionDeleteAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceActionCommit", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceActionCommitResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceActionHll1wPEA PostAnalysisServiceActionCommit(ProgramMonitor.SIRA.DtoPostAnalysisServiceAction[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceActionCommit", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceActionCommitResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceActionHll1wPEA> PostAnalysisServiceActionCommitAsync(ProgramMonitor.SIRA.DtoPostAnalysisServiceAction[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceActionCreate", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceActionCreateResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceActionHll1wPEA PostAnalysisServiceActionCreate(ProgramMonitor.SIRA.DtoPostAnalysisServiceAction[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceActionCreate", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceActionCreateResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceActionHll1wPEA> PostAnalysisServiceActionCreateAsync(ProgramMonitor.SIRA.DtoPostAnalysisServiceAction[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceRuleGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceRuleGetAllResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceRuleHll1wPEA PostAnalysisServiceRuleGetAll(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceRuleGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceRuleGetAllResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceRuleHll1wPEA> PostAnalysisServiceRuleGetAllAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceRuleGet", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceRuleGetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceRuleHll1wPEA PostAnalysisServiceRuleGet(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceRuleGet", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceRuleGetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceRuleHll1wPEA> PostAnalysisServiceRuleGetAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceRuleDelete", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceRuleDeleteResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean PostAnalysisServiceRuleDelete(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceRuleDelete", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceRuleDeleteResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> PostAnalysisServiceRuleDeleteAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceRuleCreate", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceRuleCreateResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceRuleHll1wPEA PostAnalysisServiceRuleCreate(ProgramMonitor.SIRA.DtoPostAnalysisServiceRule[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PostAnalysisServiceRuleCreate", ReplyAction="http://tempuri.org/ISiraSystemService/PostAnalysisServiceRuleCreateResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceRuleHll1wPEA> PostAnalysisServiceRuleCreateAsync(ProgramMonitor.SIRA.DtoPostAnalysisServiceRule[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ContactGetEligibleForManagementReport", ReplyAction="http://tempuri.org/ISiraSystemService/ContactGetEligibleForManagementReportRespon" +
            "se")]
        ProgramMonitor.SIRA.ServiceResultOfDtoContactI_PRg1ux4 ContactGetEligibleForManagementReport(System.Guid clientIdentifier, int companyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ContactGetEligibleForManagementReport", ReplyAction="http://tempuri.org/ISiraSystemService/ContactGetEligibleForManagementReportRespon" +
            "se")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoContactI_PRg1ux4> ContactGetEligibleForManagementReportAsync(System.Guid clientIdentifier, int companyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ContactsResetPassword", ReplyAction="http://tempuri.org/ISiraSystemService/ContactsResetPasswordResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean ContactsResetPassword(System.Guid clientIdentifier, int contactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ContactsResetPassword", ReplyAction="http://tempuri.org/ISiraSystemService/ContactsResetPasswordResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> ContactsResetPasswordAsync(System.Guid clientIdentifier, int contactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/DisableAccount", ReplyAction="http://tempuri.org/ISiraSystemService/DisableAccountResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean DisableAccount(System.Guid clientIdentifier, int contactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/DisableAccount", ReplyAction="http://tempuri.org/ISiraSystemService/DisableAccountResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> DisableAccountAsync(System.Guid clientIdentifier, int contactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/EnableAccount", ReplyAction="http://tempuri.org/ISiraSystemService/EnableAccountResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean EnableAccount(System.Guid clientIdentifier, int contactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/EnableAccount", ReplyAction="http://tempuri.org/ISiraSystemService/EnableAccountResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> EnableAccountAsync(System.Guid clientIdentifier, int contactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CreateCompanies", ReplyAction="http://tempuri.org/ISiraSystemService/CreateCompaniesResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoCompanyI_PRg1ux4 CreateCompanies(ProgramMonitor.SIRA.DtoCompany[] dtos, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CreateCompanies", ReplyAction="http://tempuri.org/ISiraSystemService/CreateCompaniesResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCompanyI_PRg1ux4> CreateCompaniesAsync(ProgramMonitor.SIRA.DtoCompany[] dtos, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetCompanies", ReplyAction="http://tempuri.org/ISiraSystemService/GetCompaniesResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoCompanyI_PRg1ux4 GetCompanies(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetCompanies", ReplyAction="http://tempuri.org/ISiraSystemService/GetCompaniesResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCompanyI_PRg1ux4> GetCompaniesAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetCompanyAndSiteItems", ReplyAction="http://tempuri.org/ISiraSystemService/GetCompanyAndSiteItemsResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoCompanyAndSiteItemsyKa_PZV9R GetCompanyAndSiteItems(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetCompanyAndSiteItems", ReplyAction="http://tempuri.org/ISiraSystemService/GetCompanyAndSiteItemsResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCompanyAndSiteItemsyKa_PZV9R> GetCompanyAndSiteItemsAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ModifyCompanies", ReplyAction="http://tempuri.org/ISiraSystemService/ModifyCompaniesResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoCompanyI_PRg1ux4 ModifyCompanies(ProgramMonitor.SIRA.DtoCompany[] dtos, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ModifyCompanies", ReplyAction="http://tempuri.org/ISiraSystemService/ModifyCompaniesResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCompanyI_PRg1ux4> ModifyCompaniesAsync(ProgramMonitor.SIRA.DtoCompany[] dtos, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetSiteNames", ReplyAction="http://tempuri.org/ISiraSystemService/GetSiteNamesResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoSiteNameI_PRg1ux4 GetSiteNames(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetSiteNames", ReplyAction="http://tempuri.org/ISiraSystemService/GetSiteNamesResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiteNameI_PRg1ux4> GetSiteNamesAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/SiteCreate", ReplyAction="http://tempuri.org/ISiraSystemService/SiteCreateResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoSiteI_PRg1ux4 SiteCreate(int companyId, string siteCode, string name, System.DateTime fromDate, int gaugeMethod, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/SiteCreate", ReplyAction="http://tempuri.org/ISiraSystemService/SiteCreateResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiteI_PRg1ux4> SiteCreateAsync(int companyId, string siteCode, string name, System.DateTime fromDate, int gaugeMethod, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/SitesCommit", ReplyAction="http://tempuri.org/ISiraSystemService/SitesCommitResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoSiteI_PRg1ux4 SitesCommit(ProgramMonitor.SIRA.DtoSite[] sites, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/SitesCommit", ReplyAction="http://tempuri.org/ISiraSystemService/SitesCommitResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiteI_PRg1ux4> SitesCommitAsync(ProgramMonitor.SIRA.DtoSite[] sites, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/SitesGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/SitesGetAllResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoSiteI_PRg1ux4 SitesGetAll(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/SitesGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/SitesGetAllResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiteI_PRg1ux4> SitesGetAllAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ConfirmPendingSite", ReplyAction="http://tempuri.org/ISiraSystemService/ConfirmPendingSiteResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean ConfirmPendingSite(int siteId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ConfirmPendingSite", ReplyAction="http://tempuri.org/ISiraSystemService/ConfirmPendingSiteResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> ConfirmPendingSiteAsync(int siteId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetActiveTankSystemNames", ReplyAction="http://tempuri.org/ISiraSystemService/GetActiveTankSystemNamesResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoTankSystemNameI_PRg1ux4 GetActiveTankSystemNames(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetActiveTankSystemNames", ReplyAction="http://tempuri.org/ISiraSystemService/GetActiveTankSystemNamesResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoTankSystemNameI_PRg1ux4> GetActiveTankSystemNamesAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetSiteTankSystems", ReplyAction="http://tempuri.org/ISiraSystemService/GetSiteTankSystemsResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoSiteTankSystemsyKa_PZV9R GetSiteTankSystems(int siteId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetSiteTankSystems", ReplyAction="http://tempuri.org/ISiraSystemService/GetSiteTankSystemsResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiteTankSystemsyKa_PZV9R> GetSiteTankSystemsAsync(int siteId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/TankSystemHistoryGetBySite", ReplyAction="http://tempuri.org/ISiraSystemService/TankSystemHistoryGetBySiteResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoTankSystemActivePeriodEntryyKa_PZV9R TankSystemHistoryGetBySite(int siteId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/TankSystemHistoryGetBySite", ReplyAction="http://tempuri.org/ISiraSystemService/TankSystemHistoryGetBySiteResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoTankSystemActivePeriodEntryyKa_PZV9R> TankSystemHistoryGetBySiteAsync(int siteId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/TankSystemsGet", ReplyAction="http://tempuri.org/ISiraSystemService/TankSystemsGetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoTankSystemyKa_PZV9R TankSystemsGet(int[] tankSystemIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/TankSystemsGet", ReplyAction="http://tempuri.org/ISiraSystemService/TankSystemsGetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoTankSystemyKa_PZV9R> TankSystemsGetAsync(int[] tankSystemIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/UpdateSitesTankSystems", ReplyAction="http://tempuri.org/ISiraSystemService/UpdateSitesTankSystemsResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoSiteTankSystemsChangeResultyKa_PZV9R UpdateSitesTankSystems(int siteId, ProgramMonitor.SIRA.DtoSite siteDetails, ProgramMonitor.SIRA.DtoTank[] tanks, System.DateTime fromDate, ProgramMonitor.SIRA.DtoTankSystem[] dtoTankSystems, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/UpdateSitesTankSystems", ReplyAction="http://tempuri.org/ISiraSystemService/UpdateSitesTankSystemsResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiteTankSystemsChangeResultyKa_PZV9R> UpdateSitesTankSystemsAsync(int siteId, ProgramMonitor.SIRA.DtoSite siteDetails, ProgramMonitor.SIRA.DtoTank[] tanks, System.DateTime fromDate, ProgramMonitor.SIRA.DtoTankSystem[] dtoTankSystems, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/UpdateSitesTankSystemsOutofService", ReplyAction="http://tempuri.org/ISiraSystemService/UpdateSitesTankSystemsOutofServiceResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoSiteTankSystemsChangeResultyKa_PZV9R UpdateSitesTankSystemsOutofService(int siteId, ProgramMonitor.SIRA.DtoSite siteDetails, ProgramMonitor.SIRA.DtoTankSystem[] dtoTankSystems, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/UpdateSitesTankSystemsOutofService", ReplyAction="http://tempuri.org/ISiraSystemService/UpdateSitesTankSystemsOutofServiceResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiteTankSystemsChangeResultyKa_PZV9R> UpdateSitesTankSystemsOutofServiceAsync(int siteId, ProgramMonitor.SIRA.DtoSite siteDetails, ProgramMonitor.SIRA.DtoTankSystem[] dtoTankSystems, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ConfirmPendingTankSystem", ReplyAction="http://tempuri.org/ISiraSystemService/ConfirmPendingTankSystemResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean ConfirmPendingTankSystem(int tankSystemId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ConfirmPendingTankSystem", ReplyAction="http://tempuri.org/ISiraSystemService/ConfirmPendingTankSystemResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> ConfirmPendingTankSystemAsync(int tankSystemId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/TanksCommit", ReplyAction="http://tempuri.org/ISiraSystemService/TanksCommitResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoTankI_PRg1ux4 TanksCommit(ProgramMonitor.SIRA.DtoTank[] sites, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/TanksCommit", ReplyAction="http://tempuri.org/ISiraSystemService/TanksCommitResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoTankI_PRg1ux4> TanksCommitAsync(ProgramMonitor.SIRA.DtoTank[] sites, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/AssignTasksToRun", ReplyAction="http://tempuri.org/ISiraSystemService/AssignTasksToRunResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisRunHll1wPEA AssignTasksToRun(int jobId, int[] taskIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/AssignTasksToRun", ReplyAction="http://tempuri.org/ISiraSystemService/AssignTasksToRunResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisRunHll1wPEA> AssignTasksToRunAsync(int jobId, int[] taskIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetCompaniesAndSitesByJobId", ReplyAction="http://tempuri.org/ISiraSystemService/GetCompaniesAndSitesByJobIdResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoJobCompanyAndSiteItemsyKa_PZV9R GetCompaniesAndSitesByJobId(int jobId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetCompaniesAndSitesByJobId", ReplyAction="http://tempuri.org/ISiraSystemService/GetCompaniesAndSitesByJobIdResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoJobCompanyAndSiteItemsyKa_PZV9R> GetCompaniesAndSitesByJobIdAsync(int jobId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/StartRegenerateAnalysisTasksList", ReplyAction="http://tempuri.org/ISiraSystemService/StartRegenerateAnalysisTasksListResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoOperationyKa_PZV9R StartRegenerateAnalysisTasksList(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/StartRegenerateAnalysisTasksList", ReplyAction="http://tempuri.org/ISiraSystemService/StartRegenerateAnalysisTasksListResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoOperationyKa_PZV9R> StartRegenerateAnalysisTasksListAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAllAnalysesSummary", ReplyAction="http://tempuri.org/ISiraSystemService/GetAllAnalysesSummaryResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoSiteAnalysesSummaryyKa_PZV9R GetAllAnalysesSummary(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAllAnalysesSummary", ReplyAction="http://tempuri.org/ISiraSystemService/GetAllAnalysesSummaryResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiteAnalysesSummaryyKa_PZV9R> GetAllAnalysesSummaryAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAnalyses", ReplyAction="http://tempuri.org/ISiraSystemService/GetAnalysesResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R GetAnalyses(int tankSystemId, System.Nullable<System.DateTime> startDate, int numberOfMonths, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAnalyses", ReplyAction="http://tempuri.org/ISiraSystemService/GetAnalysesResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> GetAnalysesAsync(int tankSystemId, System.Nullable<System.DateTime> startDate, int numberOfMonths, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAnalysesByIds", ReplyAction="http://tempuri.org/ISiraSystemService/GetAnalysesByIdsResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R GetAnalysesByIds(int[] analysisIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAnalysesByIds", ReplyAction="http://tempuri.org/ISiraSystemService/GetAnalysesByIdsResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> GetAnalysesByIdsAsync(int[] analysisIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAnalysesForSite", ReplyAction="http://tempuri.org/ISiraSystemService/GetAnalysesForSiteResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R GetAnalysesForSite(int siteId, System.DateTime date, bool monthlyAnalyses, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAnalysesForSite", ReplyAction="http://tempuri.org/ISiraSystemService/GetAnalysesForSiteResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> GetAnalysesForSiteAsync(int siteId, System.DateTime date, bool monthlyAnalyses, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAnalysesJournals", ReplyAction="http://tempuri.org/ISiraSystemService/GetAnalysesJournalsResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisJournalHll1wPEA GetAnalysesJournals(int[] tankSystemIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAnalysesJournals", ReplyAction="http://tempuri.org/ISiraSystemService/GetAnalysesJournalsResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisJournalHll1wPEA> GetAnalysesJournalsAsync(int[] tankSystemIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetPublishingAnalysesData", ReplyAction="http://tempuri.org/ISiraSystemService/GetPublishingAnalysesDataResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysesPublishingDatayKa_PZV9R GetPublishingAnalysesData(ProgramMonitor.SIRA.DtoPublishingDataCriteria[] publishingDataCriteria, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetPublishingAnalysesData", ReplyAction="http://tempuri.org/ISiraSystemService/GetPublishingAnalysesDataResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysesPublishingDatayKa_PZV9R> GetPublishingAnalysesDataAsync(ProgramMonitor.SIRA.DtoPublishingDataCriteria[] publishingDataCriteria, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PublishAnalysesData", ReplyAction="http://tempuri.org/ISiraSystemService/PublishAnalysesDataResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean PublishAnalysesData(ProgramMonitor.SIRA.DtoAnalysesDataToPublish[] publishingData, ProgramMonitor.SIRA.DtoOperatorInfo operatorInfo, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PublishAnalysesData", ReplyAction="http://tempuri.org/ISiraSystemService/PublishAnalysesDataResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> PublishAnalysesDataAsync(ProgramMonitor.SIRA.DtoAnalysesDataToPublish[] publishingData, ProgramMonitor.SIRA.DtoOperatorInfo operatorInfo, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetMessages", ReplyAction="http://tempuri.org/ISiraSystemService/GetMessagesResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoMessageTnvYW2Wc GetMessages(ProgramMonitor.SIRA.DtoMessagesFilter dtoMessagesFilter, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetMessages", ReplyAction="http://tempuri.org/ISiraSystemService/GetMessagesResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoMessageTnvYW2Wc> GetMessagesAsync(ProgramMonitor.SIRA.DtoMessagesFilter dtoMessagesFilter, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAllNeoOperators", ReplyAction="http://tempuri.org/ISiraSystemService/GetAllNeoOperatorsResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoOperatorInfoyKa_PZV9R GetAllNeoOperators(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAllNeoOperators", ReplyAction="http://tempuri.org/ISiraSystemService/GetAllNeoOperatorsResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoOperatorInfoyKa_PZV9R> GetAllNeoOperatorsAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/AddMessage", ReplyAction="http://tempuri.org/ISiraSystemService/AddMessageResponse")]
        ProgramMonitor.SIRA.ServiceResultOfint AddMessage(ProgramMonitor.SIRA.DtoMessage dtoMessage, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/AddMessage", ReplyAction="http://tempuri.org/ISiraSystemService/AddMessageResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfint> AddMessageAsync(ProgramMonitor.SIRA.DtoMessage dtoMessage, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAnalysesOverlappingDates", ReplyAction="http://tempuri.org/ISiraSystemService/GetAnalysesOverlappingDatesResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R GetAnalysesOverlappingDates(int tankSystemId, System.Nullable<System.DateTime> startDate, int numberOfMonths, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAnalysesOverlappingDates", ReplyAction="http://tempuri.org/ISiraSystemService/GetAnalysesOverlappingDatesResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> GetAnalysesOverlappingDatesAsync(int tankSystemId, System.Nullable<System.DateTime> startDate, int numberOfMonths, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAnalysesStateMetrics", ReplyAction="http://tempuri.org/ISiraSystemService/GetAnalysesStateMetricsResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysesMetricsyKa_PZV9R GetAnalysesStateMetrics(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAnalysesStateMetrics", ReplyAction="http://tempuri.org/ISiraSystemService/GetAnalysesStateMetricsResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysesMetricsyKa_PZV9R> GetAnalysesStateMetricsAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetTankSystemAnalysisStateMetrics", ReplyAction="http://tempuri.org/ISiraSystemService/GetTankSystemAnalysisStateMetricsResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoTankSystemAnalysisMetricsyKa_PZV9R GetTankSystemAnalysisStateMetrics(int companyId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetTankSystemAnalysisStateMetrics", ReplyAction="http://tempuri.org/ISiraSystemService/GetTankSystemAnalysisStateMetricsResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoTankSystemAnalysisMetricsyKa_PZV9R> GetTankSystemAnalysisStateMetricsAsync(int companyId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAnalysis", ReplyAction="http://tempuri.org/ISiraSystemService/GetAnalysisResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R GetAnalysis(int analysisId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAnalysis", ReplyAction="http://tempuri.org/ISiraSystemService/GetAnalysisResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> GetAnalysisAsync(int analysisId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAnalysisRunStateInfo", ReplyAction="http://tempuri.org/ISiraSystemService/GetAnalysisRunStateInfoResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoRunStateInfoyKa_PZV9R GetAnalysisRunStateInfo(int jobId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAnalysisRunStateInfo", ReplyAction="http://tempuri.org/ISiraSystemService/GetAnalysisRunStateInfoResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoRunStateInfoyKa_PZV9R> GetAnalysisRunStateInfoAsync(int jobId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAnalysisSummaries", ReplyAction="http://tempuri.org/ISiraSystemService/GetAnalysisSummariesResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoTankAnalysisSummaryyKa_PZV9R GetAnalysisSummaries(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAnalysisSummaries", ReplyAction="http://tempuri.org/ISiraSystemService/GetAnalysisSummariesResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoTankAnalysisSummaryyKa_PZV9R> GetAnalysisSummariesAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetIntraMonthAnalyses", ReplyAction="http://tempuri.org/ISiraSystemService/GetIntraMonthAnalysesResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R GetIntraMonthAnalyses(int tankSystemId, int periodMonths, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetIntraMonthAnalyses", ReplyAction="http://tempuri.org/ISiraSystemService/GetIntraMonthAnalysesResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> GetIntraMonthAnalysesAsync(int tankSystemId, int periodMonths, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetLatestCycleStartDate", ReplyAction="http://tempuri.org/ISiraSystemService/GetLatestCycleStartDateResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoLastestCycleStartDateyKa_PZV9R GetLatestCycleStartDate(int tankSystemId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetLatestCycleStartDate", ReplyAction="http://tempuri.org/ISiraSystemService/GetLatestCycleStartDateResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoLastestCycleStartDateyKa_PZV9R> GetLatestCycleStartDateAsync(int tankSystemId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetPendingAnalyses", ReplyAction="http://tempuri.org/ISiraSystemService/GetPendingAnalysesResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoUnverifiedAnalysisInfoNS3hM9Iz GetPendingAnalyses(int jobId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetPendingAnalyses", ReplyAction="http://tempuri.org/ISiraSystemService/GetPendingAnalysesResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoUnverifiedAnalysisInfoNS3hM9Iz> GetPendingAnalysesAsync(int jobId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetPendingAnalysesForSite", ReplyAction="http://tempuri.org/ISiraSystemService/GetPendingAnalysesForSiteResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoUnverifiedAnalysisInfoNS3hM9Iz GetPendingAnalysesForSite(int jobId, int siteId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetPendingAnalysesForSite", ReplyAction="http://tempuri.org/ISiraSystemService/GetPendingAnalysesForSiteResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoUnverifiedAnalysisInfoNS3hM9Iz> GetPendingAnalysesForSiteAsync(int jobId, int siteId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetRecentSiteAnalysesSummary", ReplyAction="http://tempuri.org/ISiraSystemService/GetRecentSiteAnalysesSummaryResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoSiteAnalysesSummaryyKa_PZV9R GetRecentSiteAnalysesSummary(int siteId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetRecentSiteAnalysesSummary", ReplyAction="http://tempuri.org/ISiraSystemService/GetRecentSiteAnalysesSummaryResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiteAnalysesSummaryyKa_PZV9R> GetRecentSiteAnalysesSummaryAsync(int siteId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetVerifiedAnalysesPeriods", ReplyAction="http://tempuri.org/ISiraSystemService/GetVerifiedAnalysesPeriodsResponse")]
        ProgramMonitor.SIRA.ServiceResultOfdateTime GetVerifiedAnalysesPeriods(int companyId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetVerifiedAnalysesPeriods", ReplyAction="http://tempuri.org/ISiraSystemService/GetVerifiedAnalysesPeriodsResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfdateTime> GetVerifiedAnalysesPeriodsAsync(int companyId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ApplyOptimalTankCalibration", ReplyAction="http://tempuri.org/ISiraSystemService/ApplyOptimalTankCalibrationResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R ApplyOptimalTankCalibration(int analysisId, int[] returnAnalysisIds, System.Nullable<double> rHSm, System.Nullable<double> lHSm, System.Nullable<double> fromLevel, System.DateTime fromDate, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ApplyOptimalTankCalibration", ReplyAction="http://tempuri.org/ISiraSystemService/ApplyOptimalTankCalibrationResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> ApplyOptimalTankCalibrationAsync(int analysisId, int[] returnAnalysisIds, System.Nullable<double> rHSm, System.Nullable<double> lHSm, System.Nullable<double> fromLevel, System.DateTime fromDate, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CorrectDDWithOneMonth", ReplyAction="http://tempuri.org/ISiraSystemService/CorrectDDWithOneMonthResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R CorrectDDWithOneMonth(int analysisId, int[] observationIdsToBeCorrected, int[] returnAnalysisIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CorrectDDWithOneMonth", ReplyAction="http://tempuri.org/ISiraSystemService/CorrectDDWithOneMonthResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> CorrectDDWithOneMonthAsync(int analysisId, int[] observationIdsToBeCorrected, int[] returnAnalysisIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CorrectDDsUnrestricted", ReplyAction="http://tempuri.org/ISiraSystemService/CorrectDDsUnrestrictedResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R CorrectDDsUnrestricted(int analysisId, int[] observationIdsToBeCorrected, int[] returnAnalysisIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CorrectDDsUnrestricted", ReplyAction="http://tempuri.org/ISiraSystemService/CorrectDDsUnrestrictedResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> CorrectDDsUnrestrictedAsync(int analysisId, int[] observationIdsToBeCorrected, int[] returnAnalysisIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CorrectDDsWithinRange", ReplyAction="http://tempuri.org/ISiraSystemService/CorrectDDsWithinRangeResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R CorrectDDsWithinRange(int analysisId, int firstObs, int lastObs, int[] returnAnalysisIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CorrectDDsWithinRange", ReplyAction="http://tempuri.org/ISiraSystemService/CorrectDDsWithinRangeResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> CorrectDDsWithinRangeAsync(int analysisId, int firstObs, int lastObs, int[] returnAnalysisIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/FindOptimalTankCalibration", ReplyAction="http://tempuri.org/ISiraSystemService/FindOptimalTankCalibrationResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R FindOptimalTankCalibration(int analysisId, int[] returnAnalysisIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/FindOptimalTankCalibration", ReplyAction="http://tempuri.org/ISiraSystemService/FindOptimalTankCalibrationResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> FindOptimalTankCalibrationAsync(int analysisId, int[] returnAnalysisIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/FindOptimalTankCalibrationMdlr", ReplyAction="http://tempuri.org/ISiraSystemService/FindOptimalTankCalibrationMdlrResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationMdlryKa_PZV9R FindOptimalTankCalibrationMdlr(int analysisId, double highRange, double lowRange, double resolution, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/FindOptimalTankCalibrationMdlr", ReplyAction="http://tempuri.org/ISiraSystemService/FindOptimalTankCalibrationMdlrResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationMdlryKa_PZV9R> FindOptimalTankCalibrationMdlrAsync(int analysisId, double highRange, double lowRange, double resolution, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/MoveObservationsToNextAnalysis", ReplyAction="http://tempuri.org/ISiraSystemService/MoveObservationsToNextAnalysisResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R MoveObservationsToNextAnalysis(int analysisId, System.DateTime fromDate, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/MoveObservationsToNextAnalysis", ReplyAction="http://tempuri.org/ISiraSystemService/MoveObservationsToNextAnalysisResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> MoveObservationsToNextAnalysisAsync(int analysisId, System.DateTime fromDate, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/MoveObservationsToPriorAnalysis", ReplyAction="http://tempuri.org/ISiraSystemService/MoveObservationsToPriorAnalysisResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R MoveObservationsToPriorAnalysis(int analysisId, System.DateTime upToDate, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/MoveObservationsToPriorAnalysis", ReplyAction="http://tempuri.org/ISiraSystemService/MoveObservationsToPriorAnalysisResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> MoveObservationsToPriorAnalysisAsync(int analysisId, System.DateTime upToDate, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RawObservationsCommit", ReplyAction="http://tempuri.org/ISiraSystemService/RawObservationsCommitResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean RawObservationsCommit(ProgramMonitor.SIRA.DtoObservationRawData[] observations, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RawObservationsCommit", ReplyAction="http://tempuri.org/ISiraSystemService/RawObservationsCommitResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> RawObservationsCommitAsync(ProgramMonitor.SIRA.DtoObservationRawData[] observations, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RemovePoorDips", ReplyAction="http://tempuri.org/ISiraSystemService/RemovePoorDipsResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R RemovePoorDips(int analysisId, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RemovePoorDips", ReplyAction="http://tempuri.org/ISiraSystemService/RemovePoorDipsResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> RemovePoorDipsAsync(int analysisId, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RestoreRawData", ReplyAction="http://tempuri.org/ISiraSystemService/RestoreRawDataResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R RestoreRawData(int analysisId, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RestoreRawData", ReplyAction="http://tempuri.org/ISiraSystemService/RestoreRawDataResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> RestoreRawDataAsync(int analysisId, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/Save", ReplyAction="http://tempuri.org/ISiraSystemService/SaveResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R Save(int analysisId, int verifiedState, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/Save", ReplyAction="http://tempuri.org/ISiraSystemService/SaveResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> SaveAsync(int analysisId, int verifiedState, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ScreamersGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/ScreamersGetAllResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoScreameryKa_PZV9R ScreamersGetAll(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ScreamersGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/ScreamersGetAllResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoScreameryKa_PZV9R> ScreamersGetAllAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/SetAnalysisResult", ReplyAction="http://tempuri.org/ISiraSystemService/SetAnalysisResultResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R SetAnalysisResult(int analysisId, int result, int reasonCode, int verifiedState, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/SetAnalysisResult", ReplyAction="http://tempuri.org/ISiraSystemService/SetAnalysisResultResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> SetAnalysisResultAsync(int analysisId, int result, int reasonCode, int verifiedState, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/SetAnalysisVerified", ReplyAction="http://tempuri.org/ISiraSystemService/SetAnalysisVerifiedResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean SetAnalysisVerified(int analysisId, int verifiedState, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/SetAnalysisVerified", ReplyAction="http://tempuri.org/ISiraSystemService/SetAnalysisVerifiedResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> SetAnalysisVerifiedAsync(int analysisId, int verifiedState, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/SiraOpStartNewSavingSession", ReplyAction="http://tempuri.org/ISiraSystemService/SiraOpStartNewSavingSessionResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean SiraOpStartNewSavingSession(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/SiraOpStartNewSavingSession", ReplyAction="http://tempuri.org/ISiraSystemService/SiraOpStartNewSavingSessionResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> SiraOpStartNewSavingSessionAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/StartNewBrowsingSession", ReplyAction="http://tempuri.org/ISiraSystemService/StartNewBrowsingSessionResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean StartNewBrowsingSession(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/StartNewBrowsingSession", ReplyAction="http://tempuri.org/ISiraSystemService/StartNewBrowsingSessionResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> StartNewBrowsingSessionAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/SystemCorrectsDDWithRestrictedPeriod", ReplyAction="http://tempuri.org/ISiraSystemService/SystemCorrectsDDWithRestrictedPeriodRespons" +
            "e")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R SystemCorrectsDDWithRestrictedPeriod(int analysisId, int[] returnAnalysisIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/SystemCorrectsDDWithRestrictedPeriod", ReplyAction="http://tempuri.org/ISiraSystemService/SystemCorrectsDDWithRestrictedPeriodRespons" +
            "e")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> SystemCorrectsDDWithRestrictedPeriodAsync(int analysisId, int[] returnAnalysisIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ToggleDipsRemoved", ReplyAction="http://tempuri.org/ISiraSystemService/ToggleDipsRemovedResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R ToggleDipsRemoved(int analysisId, int[] observationIdsToBeIgnored, int[] observationIdsToBeIncluded, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ToggleDipsRemoved", ReplyAction="http://tempuri.org/ISiraSystemService/ToggleDipsRemovedResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> ToggleDipsRemovedAsync(int analysisId, int[] observationIdsToBeIgnored, int[] observationIdsToBeIncluded, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/UndoActions", ReplyAction="http://tempuri.org/ISiraSystemService/UndoActionsResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R UndoActions(int[] returnAnalysisIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/UndoActions", ReplyAction="http://tempuri.org/ISiraSystemService/UndoActionsResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> UndoActionsAsync(int[] returnAnalysisIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/UndoCorrections", ReplyAction="http://tempuri.org/ISiraSystemService/UndoCorrectionsResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R UndoCorrections(int analysisId, int[] correctedObservationIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/UndoCorrections", ReplyAction="http://tempuri.org/ISiraSystemService/UndoCorrectionsResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> UndoCorrectionsAsync(int analysisId, int[] correctedObservationIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/UndoDeliveryCorrections", ReplyAction="http://tempuri.org/ISiraSystemService/UndoDeliveryCorrectionsResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R UndoDeliveryCorrections(int analysisId, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/UndoDeliveryCorrections", ReplyAction="http://tempuri.org/ISiraSystemService/UndoDeliveryCorrectionsResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> UndoDeliveryCorrectionsAsync(int analysisId, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/DeliveryRecordingProblem", ReplyAction="http://tempuri.org/ISiraSystemService/DeliveryRecordingProblemResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R DeliveryRecordingProblem(int analysisId, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/DeliveryRecordingProblem", ReplyAction="http://tempuri.org/ISiraSystemService/DeliveryRecordingProblemResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> DeliveryRecordingProblemAsync(int analysisId, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/Ping", ReplyAction="http://tempuri.org/ISiraSystemService/PingResponse")]
        void Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/Ping", ReplyAction="http://tempuri.org/ISiraSystemService/PingResponse")]
        System.Threading.Tasks.Task PingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RunSelfCheck", ReplyAction="http://tempuri.org/ISiraSystemService/RunSelfCheckResponse")]
        ProgramMonitor.SIRA.ServiceResultOfstring RunSelfCheck(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/RunSelfCheck", ReplyAction="http://tempuri.org/ISiraSystemService/RunSelfCheckResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfstring> RunSelfCheckAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CalibrationsCommit", ReplyAction="http://tempuri.org/ISiraSystemService/CalibrationsCommitResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationyKa_PZV9R CalibrationsCommit(ProgramMonitor.SIRA.DtoCalibration[] calibrations, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CalibrationsCommit", ReplyAction="http://tempuri.org/ISiraSystemService/CalibrationsCommitResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationyKa_PZV9R> CalibrationsCommitAsync(ProgramMonitor.SIRA.DtoCalibration[] calibrations, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CalibrationsCreate", ReplyAction="http://tempuri.org/ISiraSystemService/CalibrationsCreateResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationyKa_PZV9R CalibrationsCreate(ProgramMonitor.SIRA.DtoCalibration[] calibrations, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CalibrationsCreate", ReplyAction="http://tempuri.org/ISiraSystemService/CalibrationsCreateResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationyKa_PZV9R> CalibrationsCreateAsync(ProgramMonitor.SIRA.DtoCalibration[] calibrations, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CalibrationsDelete", ReplyAction="http://tempuri.org/ISiraSystemService/CalibrationsDeleteResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean CalibrationsDelete(int[] calibrationIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CalibrationsDelete", ReplyAction="http://tempuri.org/ISiraSystemService/CalibrationsDeleteResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> CalibrationsDeleteAsync(int[] calibrationIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CalibrationsForTankSystemsGet", ReplyAction="http://tempuri.org/ISiraSystemService/CalibrationsForTankSystemsGetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationyKa_PZV9R CalibrationsForTankSystemsGet(int[] tankSystemIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CalibrationsForTankSystemsGet", ReplyAction="http://tempuri.org/ISiraSystemService/CalibrationsForTankSystemsGetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationyKa_PZV9R> CalibrationsForTankSystemsGetAsync(int[] tankSystemIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CalibrationsGet", ReplyAction="http://tempuri.org/ISiraSystemService/CalibrationsGetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationyKa_PZV9R CalibrationsGet(int[] calibrationsIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CalibrationsGet", ReplyAction="http://tempuri.org/ISiraSystemService/CalibrationsGetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationyKa_PZV9R> CalibrationsGetAsync(int[] calibrationsIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CalibrationFactorsCommit", ReplyAction="http://tempuri.org/ISiraSystemService/CalibrationFactorsCommitResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationFactoryKa_PZV9R CalibrationFactorsCommit(ProgramMonitor.SIRA.DtoCalibrationFactor[] calibrationFactors, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CalibrationFactorsCommit", ReplyAction="http://tempuri.org/ISiraSystemService/CalibrationFactorsCommitResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationFactoryKa_PZV9R> CalibrationFactorsCommitAsync(ProgramMonitor.SIRA.DtoCalibrationFactor[] calibrationFactors, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CalibrationFactorsCreate", ReplyAction="http://tempuri.org/ISiraSystemService/CalibrationFactorsCreateResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationFactoryKa_PZV9R CalibrationFactorsCreate(ProgramMonitor.SIRA.DtoCalibrationFactor[] calibrationFactors, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CalibrationFactorsCreate", ReplyAction="http://tempuri.org/ISiraSystemService/CalibrationFactorsCreateResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationFactoryKa_PZV9R> CalibrationFactorsCreateAsync(ProgramMonitor.SIRA.DtoCalibrationFactor[] calibrationFactors, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CalibrationFactorsDelete", ReplyAction="http://tempuri.org/ISiraSystemService/CalibrationFactorsDeleteResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean CalibrationFactorsDelete(int[] calibrationFactorIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CalibrationFactorsDelete", ReplyAction="http://tempuri.org/ISiraSystemService/CalibrationFactorsDeleteResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> CalibrationFactorsDeleteAsync(int[] calibrationFactorIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CalibrationsFactorsGet", ReplyAction="http://tempuri.org/ISiraSystemService/CalibrationsFactorsGetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationFactoryKa_PZV9R CalibrationsFactorsGet(int[] calibrationFactorIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CalibrationsFactorsGet", ReplyAction="http://tempuri.org/ISiraSystemService/CalibrationsFactorsGetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationFactoryKa_PZV9R> CalibrationsFactorsGetAsync(int[] calibrationFactorIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/DummyCall1", ReplyAction="http://tempuri.org/ISiraSystemService/DummyCall1Response")]
        ProgramMonitor.SIRA.DtoServerMessage DummyCall1();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/DummyCall1", ReplyAction="http://tempuri.org/ISiraSystemService/DummyCall1Response")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.DtoServerMessage> DummyCall1Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/DummyCall2", ReplyAction="http://tempuri.org/ISiraSystemService/DummyCall2Response")]
        ProgramMonitor.SIRA.DtoTank DummyCall2();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/DummyCall2", ReplyAction="http://tempuri.org/ISiraSystemService/DummyCall2Response")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.DtoTank> DummyCall2Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/DummyCall5", ReplyAction="http://tempuri.org/ISiraSystemService/DummyCall5Response")]
        ProgramMonitor.SIRA.DtoTankSystemActivePeriodEntry DummyCall5();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/DummyCall5", ReplyAction="http://tempuri.org/ISiraSystemService/DummyCall5Response")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.DtoTankSystemActivePeriodEntry> DummyCall5Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/DummyCall6", ReplyAction="http://tempuri.org/ISiraSystemService/DummyCall6Response")]
        ProgramMonitor.SIRA.DtoLogEvent DummyCall6();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/DummyCall6", ReplyAction="http://tempuri.org/ISiraSystemService/DummyCall6Response")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.DtoLogEvent> DummyCall6Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/DummyCall7", ReplyAction="http://tempuri.org/ISiraSystemService/DummyCall7Response")]
        ProgramMonitor.SIRA.DtoClientMetric DummyCall7();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/DummyCall7", ReplyAction="http://tempuri.org/ISiraSystemService/DummyCall7Response")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.DtoClientMetric> DummyCall7Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/DummyCall8", ReplyAction="http://tempuri.org/ISiraSystemService/DummyCall8Response")]
        ProgramMonitor.SIRA.DtoObservationRawData DummyCall8();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/DummyCall8", ReplyAction="http://tempuri.org/ISiraSystemService/DummyCall8Response")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.DtoObservationRawData> DummyCall8Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/DummyCall9", ReplyAction="http://tempuri.org/ISiraSystemService/DummyCall9Response")]
        ProgramMonitor.SIRA.ServiceResult DummyCall9();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/DummyCall9", ReplyAction="http://tempuri.org/ISiraSystemService/DummyCall9Response")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResult> DummyCall9Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ImportedFileGetFor", ReplyAction="http://tempuri.org/ISiraSystemService/ImportedFileGetForResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileyKa_PZV9R ImportedFileGetFor(System.DateTime fromDate, System.DateTime endDate, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ImportedFileGetFor", ReplyAction="http://tempuri.org/ISiraSystemService/ImportedFileGetForResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileyKa_PZV9R> ImportedFileGetForAsync(System.DateTime fromDate, System.DateTime endDate, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ImportedFileMessageGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/ImportedFileMessageGetAllResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileMessageHll1wPEA ImportedFileMessageGetAll(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ImportedFileMessageGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/ImportedFileMessageGetAllResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileMessageHll1wPEA> ImportedFileMessageGetAllAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ImportedFileMessageGetByParent", ReplyAction="http://tempuri.org/ISiraSystemService/ImportedFileMessageGetByParentResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileMessageHll1wPEA ImportedFileMessageGetByParent(int[] fileIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ImportedFileMessageGetByParent", ReplyAction="http://tempuri.org/ISiraSystemService/ImportedFileMessageGetByParentResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileMessageHll1wPEA> ImportedFileMessageGetByParentAsync(int[] fileIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CreateSiraConfigurationSets", ReplyAction="http://tempuri.org/ISiraSystemService/CreateSiraConfigurationSetsResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoSiraConfigyKa_PZV9R CreateSiraConfigurationSets(ProgramMonitor.SIRA.DtoSiraConfig[] setTemplates, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CreateSiraConfigurationSets", ReplyAction="http://tempuri.org/ISiraSystemService/CreateSiraConfigurationSetsResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiraConfigyKa_PZV9R> CreateSiraConfigurationSetsAsync(ProgramMonitor.SIRA.DtoSiraConfig[] setTemplates, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/DeleteSiraConfigurationSets", ReplyAction="http://tempuri.org/ISiraSystemService/DeleteSiraConfigurationSetsResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean DeleteSiraConfigurationSets(int[] configurationId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/DeleteSiraConfigurationSets", ReplyAction="http://tempuri.org/ISiraSystemService/DeleteSiraConfigurationSetsResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> DeleteSiraConfigurationSetsAsync(int[] configurationId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAllSiraConfigurations", ReplyAction="http://tempuri.org/ISiraSystemService/GetAllSiraConfigurationsResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoSiraConfigyKa_PZV9R GetAllSiraConfigurations(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAllSiraConfigurations", ReplyAction="http://tempuri.org/ISiraSystemService/GetAllSiraConfigurationsResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiraConfigyKa_PZV9R> GetAllSiraConfigurationsAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetSiraConfiguration", ReplyAction="http://tempuri.org/ISiraSystemService/GetSiraConfigurationResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoSiraConfigyKa_PZV9R GetSiraConfiguration(int siteId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetSiraConfiguration", ReplyAction="http://tempuri.org/ISiraSystemService/GetSiraConfigurationResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiraConfigyKa_PZV9R> GetSiraConfigurationAsync(int siteId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetSiraGradeConfigurationSet", ReplyAction="http://tempuri.org/ISiraSystemService/GetSiraGradeConfigurationSetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoSiraGradeConfigSetyKa_PZV9R GetSiraGradeConfigurationSet(ProgramMonitor.SIRA.DtoSiraGradeConfigFilter siraGradeConfigFilter, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetSiraGradeConfigurationSet", ReplyAction="http://tempuri.org/ISiraSystemService/GetSiraGradeConfigurationSetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiraGradeConfigSetyKa_PZV9R> GetSiraGradeConfigurationSetAsync(ProgramMonitor.SIRA.DtoSiraGradeConfigFilter siraGradeConfigFilter, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ModifySiraConfigurationSets", ReplyAction="http://tempuri.org/ISiraSystemService/ModifySiraConfigurationSetsResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoSiraConfigyKa_PZV9R ModifySiraConfigurationSets(ProgramMonitor.SIRA.DtoSiraConfig[] sets, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ModifySiraConfigurationSets", ReplyAction="http://tempuri.org/ISiraSystemService/ModifySiraConfigurationSetsResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiraConfigyKa_PZV9R> ModifySiraConfigurationSetsAsync(ProgramMonitor.SIRA.DtoSiraConfig[] sets, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/SaveSiraGradeConfigurationSet", ReplyAction="http://tempuri.org/ISiraSystemService/SaveSiraGradeConfigurationSetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoSiraGradeConfigSetyKa_PZV9R SaveSiraGradeConfigurationSet(ProgramMonitor.SIRA.DtoSiraGradeConfigSet siraGradeConfigSet, ProgramMonitor.SIRA.DtoSiraGradeConfigFilter siraGradeConfigFilter, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/SaveSiraGradeConfigurationSet", ReplyAction="http://tempuri.org/ISiraSystemService/SaveSiraGradeConfigurationSetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiraGradeConfigSetyKa_PZV9R> SaveSiraGradeConfigurationSetAsync(ProgramMonitor.SIRA.DtoSiraGradeConfigSet siraGradeConfigSet, ProgramMonitor.SIRA.DtoSiraGradeConfigFilter siraGradeConfigFilter, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CreateAuditLogs", ReplyAction="http://tempuri.org/ISiraSystemService/CreateAuditLogsResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean CreateAuditLogs(ProgramMonitor.SIRA.DtoAuditLog[] auditLogs, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/CreateAuditLogs", ReplyAction="http://tempuri.org/ISiraSystemService/CreateAuditLogsResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> CreateAuditLogsAsync(ProgramMonitor.SIRA.DtoAuditLog[] auditLogs, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAllOperations", ReplyAction="http://tempuri.org/ISiraSystemService/GetAllOperationsResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoOperationyKa_PZV9R GetAllOperations(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetAllOperations", ReplyAction="http://tempuri.org/ISiraSystemService/GetAllOperationsResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoOperationyKa_PZV9R> GetAllOperationsAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetObservationRawDataChangedLog", ReplyAction="http://tempuri.org/ISiraSystemService/GetObservationRawDataChangedLogResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoObservationRawDataChangeLogyKa_PZV9R GetObservationRawDataChangedLog(int companyId, System.DateTime fromDate, System.DateTime toDate, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetObservationRawDataChangedLog", ReplyAction="http://tempuri.org/ISiraSystemService/GetObservationRawDataChangedLogResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoObservationRawDataChangeLogyKa_PZV9R> GetObservationRawDataChangedLogAsync(int companyId, System.DateTime fromDate, System.DateTime toDate, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetOperationStatus", ReplyAction="http://tempuri.org/ISiraSystemService/GetOperationStatusResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoOperationyKa_PZV9R GetOperationStatus(int[] operationIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetOperationStatus", ReplyAction="http://tempuri.org/ISiraSystemService/GetOperationStatusResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoOperationyKa_PZV9R> GetOperationStatusAsync(int[] operationIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetSitesByCompanyAndProduct", ReplyAction="http://tempuri.org/ISiraSystemService/GetSitesByCompanyAndProductResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoSiteI_PRg1ux4 GetSitesByCompanyAndProduct(int companyId, int productId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetSitesByCompanyAndProduct", ReplyAction="http://tempuri.org/ISiraSystemService/GetSitesByCompanyAndProductResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiteI_PRg1ux4> GetSitesByCompanyAndProductAsync(int companyId, int productId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetSitesByCompanyId", ReplyAction="http://tempuri.org/ISiraSystemService/GetSitesByCompanyIdResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoSiteI_PRg1ux4 GetSitesByCompanyId(int companyId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetSitesByCompanyId", ReplyAction="http://tempuri.org/ISiraSystemService/GetSitesByCompanyIdResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiteI_PRg1ux4> GetSitesByCompanyIdAsync(int companyId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetClients", ReplyAction="http://tempuri.org/ISiraSystemService/GetClientsResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoClientInfoGzr_Sn7us GetClients(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/GetClients", ReplyAction="http://tempuri.org/ISiraSystemService/GetClientsResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoClientInfoGzr_Sn7us> GetClientsAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/OpenClientSession", ReplyAction="http://tempuri.org/ISiraSystemService/OpenClientSessionResponse")]
        System.Guid OpenClientSession(string hostName, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/OpenClientSession", ReplyAction="http://tempuri.org/ISiraSystemService/OpenClientSessionResponse")]
        System.Threading.Tasks.Task<System.Guid> OpenClientSessionAsync(string hostName, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PollServer", ReplyAction="http://tempuri.org/ISiraSystemService/PollServerResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoSystemInfoNS3hM9Iz PollServer(ProgramMonitor.SIRA.DtoLogEvent[] logEvents, ProgramMonitor.SIRA.DtoClientMetric[] clientMetrics, int lastReceivedChangeId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/PollServer", ReplyAction="http://tempuri.org/ISiraSystemService/PollServerResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSystemInfoNS3hM9Iz> PollServerAsync(ProgramMonitor.SIRA.DtoLogEvent[] logEvents, ProgramMonitor.SIRA.DtoClientMetric[] clientMetrics, int lastReceivedChangeId, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/SiraBlackFlagReportJournalGetByTankSystem", ReplyAction="http://tempuri.org/ISiraSystemService/SiraBlackFlagReportJournalGetByTankSystemRe" +
            "sponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoSiraBlackFlagReportJournalHll1wPEA SiraBlackFlagReportJournalGetByTankSystem(int[] parentIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/SiraBlackFlagReportJournalGetByTankSystem", ReplyAction="http://tempuri.org/ISiraSystemService/SiraBlackFlagReportJournalGetByTankSystemRe" +
            "sponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiraBlackFlagReportJournalHll1wPEA> SiraBlackFlagReportJournalGetByTankSystemAsync(int[] parentIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/SiraBlackFlagReportJournalGet", ReplyAction="http://tempuri.org/ISiraSystemService/SiraBlackFlagReportJournalGetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoSiraBlackFlagReportJournalHll1wPEA SiraBlackFlagReportJournalGet(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/SiraBlackFlagReportJournalGet", ReplyAction="http://tempuri.org/ISiraSystemService/SiraBlackFlagReportJournalGetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiraBlackFlagReportJournalHll1wPEA> SiraBlackFlagReportJournalGetAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ContactGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/ContactGetAllResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoContactI_PRg1ux4 ContactGetAll(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ContactGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/ContactGetAllResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoContactI_PRg1ux4> ContactGetAllAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ContactGet", ReplyAction="http://tempuri.org/ISiraSystemService/ContactGetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoContactI_PRg1ux4 ContactGet(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ContactGet", ReplyAction="http://tempuri.org/ISiraSystemService/ContactGetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoContactI_PRg1ux4> ContactGetAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ContactDelete", ReplyAction="http://tempuri.org/ISiraSystemService/ContactDeleteResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean ContactDelete(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ContactDelete", ReplyAction="http://tempuri.org/ISiraSystemService/ContactDeleteResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> ContactDeleteAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ContactCommit", ReplyAction="http://tempuri.org/ISiraSystemService/ContactCommitResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoContactI_PRg1ux4 ContactCommit(ProgramMonitor.SIRA.DtoContact[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ContactCommit", ReplyAction="http://tempuri.org/ISiraSystemService/ContactCommitResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoContactI_PRg1ux4> ContactCommitAsync(ProgramMonitor.SIRA.DtoContact[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ContactCreate", ReplyAction="http://tempuri.org/ISiraSystemService/ContactCreateResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoContactI_PRg1ux4 ContactCreate(ProgramMonitor.SIRA.DtoContact[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ContactCreate", ReplyAction="http://tempuri.org/ISiraSystemService/ContactCreateResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoContactI_PRg1ux4> ContactCreateAsync(ProgramMonitor.SIRA.DtoContact[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/FileReaderGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/FileReaderGetAllResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoFileReaderI_PRg1ux4 FileReaderGetAll(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/FileReaderGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/FileReaderGetAllResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoFileReaderI_PRg1ux4> FileReaderGetAllAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/FileReaderGet", ReplyAction="http://tempuri.org/ISiraSystemService/FileReaderGetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoFileReaderI_PRg1ux4 FileReaderGet(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/FileReaderGet", ReplyAction="http://tempuri.org/ISiraSystemService/FileReaderGetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoFileReaderI_PRg1ux4> FileReaderGetAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/FileReaderDelete", ReplyAction="http://tempuri.org/ISiraSystemService/FileReaderDeleteResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean FileReaderDelete(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/FileReaderDelete", ReplyAction="http://tempuri.org/ISiraSystemService/FileReaderDeleteResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> FileReaderDeleteAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/FileReaderCommit", ReplyAction="http://tempuri.org/ISiraSystemService/FileReaderCommitResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoFileReaderI_PRg1ux4 FileReaderCommit(ProgramMonitor.SIRA.DtoFileReader[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/FileReaderCommit", ReplyAction="http://tempuri.org/ISiraSystemService/FileReaderCommitResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoFileReaderI_PRg1ux4> FileReaderCommitAsync(ProgramMonitor.SIRA.DtoFileReader[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/FileReaderCreate", ReplyAction="http://tempuri.org/ISiraSystemService/FileReaderCreateResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoFileReaderI_PRg1ux4 FileReaderCreate(ProgramMonitor.SIRA.DtoFileReader[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/FileReaderCreate", ReplyAction="http://tempuri.org/ISiraSystemService/FileReaderCreateResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoFileReaderI_PRg1ux4> FileReaderCreateAsync(ProgramMonitor.SIRA.DtoFileReader[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ImportPathGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/ImportPathGetAllResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoImportPathHll1wPEA ImportPathGetAll(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ImportPathGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/ImportPathGetAllResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoImportPathHll1wPEA> ImportPathGetAllAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ImportPathGet", ReplyAction="http://tempuri.org/ISiraSystemService/ImportPathGetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoImportPathHll1wPEA ImportPathGet(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ImportPathGet", ReplyAction="http://tempuri.org/ISiraSystemService/ImportPathGetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoImportPathHll1wPEA> ImportPathGetAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ImportedFileGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/ImportedFileGetAllResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileyKa_PZV9R ImportedFileGetAll(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ImportedFileGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/ImportedFileGetAllResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileyKa_PZV9R> ImportedFileGetAllAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ImportedFileGet", ReplyAction="http://tempuri.org/ISiraSystemService/ImportedFileGetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileyKa_PZV9R ImportedFileGet(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ImportedFileGet", ReplyAction="http://tempuri.org/ISiraSystemService/ImportedFileGetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileyKa_PZV9R> ImportedFileGetAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ImportedFileMessageGetByImportedFile", ReplyAction="http://tempuri.org/ISiraSystemService/ImportedFileMessageGetByImportedFileRespons" +
            "e")]
        ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileMessageHll1wPEA ImportedFileMessageGetByImportedFile(int[] parentIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ImportedFileMessageGetByImportedFile", ReplyAction="http://tempuri.org/ISiraSystemService/ImportedFileMessageGetByImportedFileRespons" +
            "e")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileMessageHll1wPEA> ImportedFileMessageGetByImportedFileAsync(int[] parentIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ImportedFileMessageGet", ReplyAction="http://tempuri.org/ISiraSystemService/ImportedFileMessageGetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileMessageHll1wPEA ImportedFileMessageGet(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/ImportedFileMessageGet", ReplyAction="http://tempuri.org/ISiraSystemService/ImportedFileMessageGetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileMessageHll1wPEA> ImportedFileMessageGetAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/AnalysisTaskGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/AnalysisTaskGetAllResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisTaskyKa_PZV9R AnalysisTaskGetAll(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/AnalysisTaskGetAll", ReplyAction="http://tempuri.org/ISiraSystemService/AnalysisTaskGetAllResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisTaskyKa_PZV9R> AnalysisTaskGetAllAsync(System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/AnalysisTaskGet", ReplyAction="http://tempuri.org/ISiraSystemService/AnalysisTaskGetResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisTaskyKa_PZV9R AnalysisTaskGet(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/AnalysisTaskGet", ReplyAction="http://tempuri.org/ISiraSystemService/AnalysisTaskGetResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisTaskyKa_PZV9R> AnalysisTaskGetAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/AnalysisTaskDelete", ReplyAction="http://tempuri.org/ISiraSystemService/AnalysisTaskDeleteResponse")]
        ProgramMonitor.SIRA.ServiceResultOfboolean AnalysisTaskDelete(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/AnalysisTaskDelete", ReplyAction="http://tempuri.org/ISiraSystemService/AnalysisTaskDeleteResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> AnalysisTaskDeleteAsync(int[] entityIds, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/AnalysisTaskCommit", ReplyAction="http://tempuri.org/ISiraSystemService/AnalysisTaskCommitResponse")]
        ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisTaskyKa_PZV9R AnalysisTaskCommit(ProgramMonitor.SIRA.DtoAnalysisTask[] entities, System.Guid clientIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISiraSystemService/AnalysisTaskCommit", ReplyAction="http://tempuri.org/ISiraSystemService/AnalysisTaskCommitResponse")]
        System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisTaskyKa_PZV9R> AnalysisTaskCommitAsync(ProgramMonitor.SIRA.DtoAnalysisTask[] entities, System.Guid clientIdentifier);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISiraSystemServiceChannel : ProgramMonitor.SIRA.ISiraSystemService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SiraSystemServiceClient : System.ServiceModel.ClientBase<ProgramMonitor.SIRA.ISiraSystemService>, ProgramMonitor.SIRA.ISiraSystemService {
        
        public SiraSystemServiceClient() {
        }
        
        public SiraSystemServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SiraSystemServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SiraSystemServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SiraSystemServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisRunHll1wPEA AnalysisRunGetAll(System.Guid clientIdentifier) {
            return base.Channel.AnalysisRunGetAll(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisRunHll1wPEA> AnalysisRunGetAllAsync(System.Guid clientIdentifier) {
            return base.Channel.AnalysisRunGetAllAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisRunHll1wPEA AnalysisRunGet(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.AnalysisRunGet(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisRunHll1wPEA> AnalysisRunGetAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.AnalysisRunGetAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean AnalysisRunDelete(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.AnalysisRunDelete(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> AnalysisRunDeleteAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.AnalysisRunDeleteAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisRunHll1wPEA AnalysisRunCommit(ProgramMonitor.SIRA.DtoAnalysisRun[] entities, System.Guid clientIdentifier) {
            return base.Channel.AnalysisRunCommit(entities, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisRunHll1wPEA> AnalysisRunCommitAsync(ProgramMonitor.SIRA.DtoAnalysisRun[] entities, System.Guid clientIdentifier) {
            return base.Channel.AnalysisRunCommitAsync(entities, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisRunHll1wPEA AnalysisRunCreate(ProgramMonitor.SIRA.DtoAnalysisRun[] entities, System.Guid clientIdentifier) {
            return base.Channel.AnalysisRunCreate(entities, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisRunHll1wPEA> AnalysisRunCreateAsync(ProgramMonitor.SIRA.DtoAnalysisRun[] entities, System.Guid clientIdentifier) {
            return base.Channel.AnalysisRunCreateAsync(entities, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoPermissionI_PRg1ux4 PermissionGetAll(System.Guid clientIdentifier) {
            return base.Channel.PermissionGetAll(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPermissionI_PRg1ux4> PermissionGetAllAsync(System.Guid clientIdentifier) {
            return base.Channel.PermissionGetAllAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoPermissionI_PRg1ux4 PermissionGet(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.PermissionGet(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPermissionI_PRg1ux4> PermissionGetAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.PermissionGetAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoCompanyRoleI_PRg1ux4 CompanyRoleGetAll(System.Guid clientIdentifier) {
            return base.Channel.CompanyRoleGetAll(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCompanyRoleI_PRg1ux4> CompanyRoleGetAllAsync(System.Guid clientIdentifier) {
            return base.Channel.CompanyRoleGetAllAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoCompanyRoleI_PRg1ux4 CompanyRoleGet(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.CompanyRoleGet(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCompanyRoleI_PRg1ux4> CompanyRoleGetAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.CompanyRoleGetAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean CompanyRoleDelete(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.CompanyRoleDelete(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> CompanyRoleDeleteAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.CompanyRoleDeleteAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoCompanyRoleI_PRg1ux4 CompanyRoleCommit(ProgramMonitor.SIRA.DtoCompanyRole[] entities, System.Guid clientIdentifier) {
            return base.Channel.CompanyRoleCommit(entities, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCompanyRoleI_PRg1ux4> CompanyRoleCommitAsync(ProgramMonitor.SIRA.DtoCompanyRole[] entities, System.Guid clientIdentifier) {
            return base.Channel.CompanyRoleCommitAsync(entities, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoCompanyRoleI_PRg1ux4 CompanyRoleCreate(ProgramMonitor.SIRA.DtoCompanyRole[] entities, System.Guid clientIdentifier) {
            return base.Channel.CompanyRoleCreate(entities, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCompanyRoleI_PRg1ux4> CompanyRoleCreateAsync(ProgramMonitor.SIRA.DtoCompanyRole[] entities, System.Guid clientIdentifier) {
            return base.Channel.CompanyRoleCreateAsync(entities, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoObservationRawDataHll1wPEA ObservationRawDataGetAll(System.Guid clientIdentifier) {
            return base.Channel.ObservationRawDataGetAll(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoObservationRawDataHll1wPEA> ObservationRawDataGetAllAsync(System.Guid clientIdentifier) {
            return base.Channel.ObservationRawDataGetAllAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoObservationRawDataHll1wPEA ObservationRawDataGet(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.ObservationRawDataGet(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoObservationRawDataHll1wPEA> ObservationRawDataGetAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.ObservationRawDataGetAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean ObservationRawDataDelete(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.ObservationRawDataDelete(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> ObservationRawDataDeleteAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.ObservationRawDataDeleteAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoObservationRawDataHll1wPEA ObservationRawDataCommit(ProgramMonitor.SIRA.DtoObservationRawData[] entities, System.Guid clientIdentifier) {
            return base.Channel.ObservationRawDataCommit(entities, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoObservationRawDataHll1wPEA> ObservationRawDataCommitAsync(ProgramMonitor.SIRA.DtoObservationRawData[] entities, System.Guid clientIdentifier) {
            return base.Channel.ObservationRawDataCommitAsync(entities, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoObservationRawDataHll1wPEA ObservationRawDataCreate(ProgramMonitor.SIRA.DtoObservationRawData[] entities, System.Guid clientIdentifier) {
            return base.Channel.ObservationRawDataCreate(entities, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoObservationRawDataHll1wPEA> ObservationRawDataCreateAsync(ProgramMonitor.SIRA.DtoObservationRawData[] entities, System.Guid clientIdentifier) {
            return base.Channel.ObservationRawDataCreateAsync(entities, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoGradeHll1wPEA GradeGetAll(System.Guid clientIdentifier) {
            return base.Channel.GradeGetAll(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoGradeHll1wPEA> GradeGetAllAsync(System.Guid clientIdentifier) {
            return base.Channel.GradeGetAllAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoGradeHll1wPEA GradeGet(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.GradeGet(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoGradeHll1wPEA> GradeGetAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.GradeGetAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoGradeAliasHll1wPEA GradeAliasGetAll(System.Guid clientIdentifier) {
            return base.Channel.GradeAliasGetAll(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoGradeAliasHll1wPEA> GradeAliasGetAllAsync(System.Guid clientIdentifier) {
            return base.Channel.GradeAliasGetAllAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoGradeAliasHll1wPEA GradeAliasGet(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.GradeAliasGet(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoGradeAliasHll1wPEA> GradeAliasGetAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.GradeAliasGetAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean GradeAliasDelete(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.GradeAliasDelete(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> GradeAliasDeleteAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.GradeAliasDeleteAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoGradeAliasHll1wPEA GradeAliasCommit(ProgramMonitor.SIRA.DtoGradeAlias[] entities, System.Guid clientIdentifier) {
            return base.Channel.GradeAliasCommit(entities, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoGradeAliasHll1wPEA> GradeAliasCommitAsync(ProgramMonitor.SIRA.DtoGradeAlias[] entities, System.Guid clientIdentifier) {
            return base.Channel.GradeAliasCommitAsync(entities, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoTankI_PRg1ux4 TankGet(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.TankGet(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoTankI_PRg1ux4> TankGetAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.TankGetAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoTankI_PRg1ux4 TankCommit(ProgramMonitor.SIRA.DtoTank[] entities, System.Guid clientIdentifier) {
            return base.Channel.TankCommit(entities, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoTankI_PRg1ux4> TankCommitAsync(ProgramMonitor.SIRA.DtoTank[] entities, System.Guid clientIdentifier) {
            return base.Channel.TankCommitAsync(entities, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoRegionI_PRg1ux4 RegionGetAll(System.Guid clientIdentifier) {
            return base.Channel.RegionGetAll(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoRegionI_PRg1ux4> RegionGetAllAsync(System.Guid clientIdentifier) {
            return base.Channel.RegionGetAllAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoRegionI_PRg1ux4 RegionGet(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.RegionGet(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoRegionI_PRg1ux4> RegionGetAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.RegionGetAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean RegionDelete(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.RegionDelete(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> RegionDeleteAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.RegionDeleteAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoRegionI_PRg1ux4 RegionCommit(ProgramMonitor.SIRA.DtoRegion[] entities, System.Guid clientIdentifier) {
            return base.Channel.RegionCommit(entities, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoRegionI_PRg1ux4> RegionCommitAsync(ProgramMonitor.SIRA.DtoRegion[] entities, System.Guid clientIdentifier) {
            return base.Channel.RegionCommitAsync(entities, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoRegionI_PRg1ux4 RegionCreate(ProgramMonitor.SIRA.DtoRegion[] entities, System.Guid clientIdentifier) {
            return base.Channel.RegionCreate(entities, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoRegionI_PRg1ux4> RegionCreateAsync(ProgramMonitor.SIRA.DtoRegion[] entities, System.Guid clientIdentifier) {
            return base.Channel.RegionCreateAsync(entities, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoRuleHll1wPEA RuleGetAll(System.Guid clientIdentifier) {
            return base.Channel.RuleGetAll(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoRuleHll1wPEA> RuleGetAllAsync(System.Guid clientIdentifier) {
            return base.Channel.RuleGetAllAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoRuleHll1wPEA RuleGet(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.RuleGet(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoRuleHll1wPEA> RuleGetAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.RuleGetAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean RuleDelete(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.RuleDelete(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> RuleDeleteAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.RuleDeleteAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoRuleHll1wPEA RuleCommit(ProgramMonitor.SIRA.DtoRule[] entities, System.Guid clientIdentifier) {
            return base.Channel.RuleCommit(entities, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoRuleHll1wPEA> RuleCommitAsync(ProgramMonitor.SIRA.DtoRule[] entities, System.Guid clientIdentifier) {
            return base.Channel.RuleCommitAsync(entities, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoRuleHll1wPEA RuleCreate(ProgramMonitor.SIRA.DtoRule[] entities, System.Guid clientIdentifier) {
            return base.Channel.RuleCreate(entities, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoRuleHll1wPEA> RuleCreateAsync(ProgramMonitor.SIRA.DtoRule[] entities, System.Guid clientIdentifier) {
            return base.Channel.RuleCreateAsync(entities, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceHll1wPEA PostAnalysisServiceGetAll(System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceGetAll(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceHll1wPEA> PostAnalysisServiceGetAllAsync(System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceGetAllAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceHll1wPEA PostAnalysisServiceGet(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceGet(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceHll1wPEA> PostAnalysisServiceGetAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceGetAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean PostAnalysisServiceDelete(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceDelete(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> PostAnalysisServiceDeleteAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceDeleteAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceHll1wPEA PostAnalysisServiceCommit(ProgramMonitor.SIRA.DtoPostAnalysisService[] entities, System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceCommit(entities, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceHll1wPEA> PostAnalysisServiceCommitAsync(ProgramMonitor.SIRA.DtoPostAnalysisService[] entities, System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceCommitAsync(entities, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceHll1wPEA PostAnalysisServiceCreate(ProgramMonitor.SIRA.DtoPostAnalysisService[] entities, System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceCreate(entities, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceHll1wPEA> PostAnalysisServiceCreateAsync(ProgramMonitor.SIRA.DtoPostAnalysisService[] entities, System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceCreateAsync(entities, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoPublisherHll1wPEA PublisherGetAll(System.Guid clientIdentifier) {
            return base.Channel.PublisherGetAll(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPublisherHll1wPEA> PublisherGetAllAsync(System.Guid clientIdentifier) {
            return base.Channel.PublisherGetAllAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoPublisherHll1wPEA PublisherGet(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.PublisherGet(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPublisherHll1wPEA> PublisherGetAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.PublisherGetAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoPublisherActionHll1wPEA PublisherActionGetAll(System.Guid clientIdentifier) {
            return base.Channel.PublisherActionGetAll(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPublisherActionHll1wPEA> PublisherActionGetAllAsync(System.Guid clientIdentifier) {
            return base.Channel.PublisherActionGetAllAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoPublisherActionHll1wPEA PublisherActionGet(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.PublisherActionGet(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPublisherActionHll1wPEA> PublisherActionGetAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.PublisherActionGetAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean PublisherActionDelete(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.PublisherActionDelete(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> PublisherActionDeleteAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.PublisherActionDeleteAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoPublisherActionHll1wPEA PublisherActionCommit(ProgramMonitor.SIRA.DtoPublisherAction[] entities, System.Guid clientIdentifier) {
            return base.Channel.PublisherActionCommit(entities, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPublisherActionHll1wPEA> PublisherActionCommitAsync(ProgramMonitor.SIRA.DtoPublisherAction[] entities, System.Guid clientIdentifier) {
            return base.Channel.PublisherActionCommitAsync(entities, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoPublisherActionHll1wPEA PublisherActionCreate(ProgramMonitor.SIRA.DtoPublisherAction[] entities, System.Guid clientIdentifier) {
            return base.Channel.PublisherActionCreate(entities, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPublisherActionHll1wPEA> PublisherActionCreateAsync(ProgramMonitor.SIRA.DtoPublisherAction[] entities, System.Guid clientIdentifier) {
            return base.Channel.PublisherActionCreateAsync(entities, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceActionHll1wPEA PostAnalysisServiceActionGetAll(System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceActionGetAll(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceActionHll1wPEA> PostAnalysisServiceActionGetAllAsync(System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceActionGetAllAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceActionHll1wPEA PostAnalysisServiceActionGet(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceActionGet(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceActionHll1wPEA> PostAnalysisServiceActionGetAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceActionGetAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean PostAnalysisServiceActionDelete(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceActionDelete(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> PostAnalysisServiceActionDeleteAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceActionDeleteAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceActionHll1wPEA PostAnalysisServiceActionCommit(ProgramMonitor.SIRA.DtoPostAnalysisServiceAction[] entities, System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceActionCommit(entities, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceActionHll1wPEA> PostAnalysisServiceActionCommitAsync(ProgramMonitor.SIRA.DtoPostAnalysisServiceAction[] entities, System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceActionCommitAsync(entities, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceActionHll1wPEA PostAnalysisServiceActionCreate(ProgramMonitor.SIRA.DtoPostAnalysisServiceAction[] entities, System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceActionCreate(entities, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceActionHll1wPEA> PostAnalysisServiceActionCreateAsync(ProgramMonitor.SIRA.DtoPostAnalysisServiceAction[] entities, System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceActionCreateAsync(entities, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceRuleHll1wPEA PostAnalysisServiceRuleGetAll(System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceRuleGetAll(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceRuleHll1wPEA> PostAnalysisServiceRuleGetAllAsync(System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceRuleGetAllAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceRuleHll1wPEA PostAnalysisServiceRuleGet(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceRuleGet(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceRuleHll1wPEA> PostAnalysisServiceRuleGetAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceRuleGetAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean PostAnalysisServiceRuleDelete(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceRuleDelete(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> PostAnalysisServiceRuleDeleteAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceRuleDeleteAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceRuleHll1wPEA PostAnalysisServiceRuleCreate(ProgramMonitor.SIRA.DtoPostAnalysisServiceRule[] entities, System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceRuleCreate(entities, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoPostAnalysisServiceRuleHll1wPEA> PostAnalysisServiceRuleCreateAsync(ProgramMonitor.SIRA.DtoPostAnalysisServiceRule[] entities, System.Guid clientIdentifier) {
            return base.Channel.PostAnalysisServiceRuleCreateAsync(entities, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoContactI_PRg1ux4 ContactGetEligibleForManagementReport(System.Guid clientIdentifier, int companyId) {
            return base.Channel.ContactGetEligibleForManagementReport(clientIdentifier, companyId);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoContactI_PRg1ux4> ContactGetEligibleForManagementReportAsync(System.Guid clientIdentifier, int companyId) {
            return base.Channel.ContactGetEligibleForManagementReportAsync(clientIdentifier, companyId);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean ContactsResetPassword(System.Guid clientIdentifier, int contactId) {
            return base.Channel.ContactsResetPassword(clientIdentifier, contactId);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> ContactsResetPasswordAsync(System.Guid clientIdentifier, int contactId) {
            return base.Channel.ContactsResetPasswordAsync(clientIdentifier, contactId);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean DisableAccount(System.Guid clientIdentifier, int contactId) {
            return base.Channel.DisableAccount(clientIdentifier, contactId);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> DisableAccountAsync(System.Guid clientIdentifier, int contactId) {
            return base.Channel.DisableAccountAsync(clientIdentifier, contactId);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean EnableAccount(System.Guid clientIdentifier, int contactId) {
            return base.Channel.EnableAccount(clientIdentifier, contactId);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> EnableAccountAsync(System.Guid clientIdentifier, int contactId) {
            return base.Channel.EnableAccountAsync(clientIdentifier, contactId);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoCompanyI_PRg1ux4 CreateCompanies(ProgramMonitor.SIRA.DtoCompany[] dtos, System.Guid clientIdentifier) {
            return base.Channel.CreateCompanies(dtos, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCompanyI_PRg1ux4> CreateCompaniesAsync(ProgramMonitor.SIRA.DtoCompany[] dtos, System.Guid clientIdentifier) {
            return base.Channel.CreateCompaniesAsync(dtos, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoCompanyI_PRg1ux4 GetCompanies(System.Guid clientIdentifier) {
            return base.Channel.GetCompanies(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCompanyI_PRg1ux4> GetCompaniesAsync(System.Guid clientIdentifier) {
            return base.Channel.GetCompaniesAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoCompanyAndSiteItemsyKa_PZV9R GetCompanyAndSiteItems(System.Guid clientIdentifier) {
            return base.Channel.GetCompanyAndSiteItems(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCompanyAndSiteItemsyKa_PZV9R> GetCompanyAndSiteItemsAsync(System.Guid clientIdentifier) {
            return base.Channel.GetCompanyAndSiteItemsAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoCompanyI_PRg1ux4 ModifyCompanies(ProgramMonitor.SIRA.DtoCompany[] dtos, System.Guid clientIdentifier) {
            return base.Channel.ModifyCompanies(dtos, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCompanyI_PRg1ux4> ModifyCompaniesAsync(ProgramMonitor.SIRA.DtoCompany[] dtos, System.Guid clientIdentifier) {
            return base.Channel.ModifyCompaniesAsync(dtos, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoSiteNameI_PRg1ux4 GetSiteNames(System.Guid clientIdentifier) {
            return base.Channel.GetSiteNames(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiteNameI_PRg1ux4> GetSiteNamesAsync(System.Guid clientIdentifier) {
            return base.Channel.GetSiteNamesAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoSiteI_PRg1ux4 SiteCreate(int companyId, string siteCode, string name, System.DateTime fromDate, int gaugeMethod, System.Guid clientIdentifier) {
            return base.Channel.SiteCreate(companyId, siteCode, name, fromDate, gaugeMethod, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiteI_PRg1ux4> SiteCreateAsync(int companyId, string siteCode, string name, System.DateTime fromDate, int gaugeMethod, System.Guid clientIdentifier) {
            return base.Channel.SiteCreateAsync(companyId, siteCode, name, fromDate, gaugeMethod, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoSiteI_PRg1ux4 SitesCommit(ProgramMonitor.SIRA.DtoSite[] sites, System.Guid clientIdentifier) {
            return base.Channel.SitesCommit(sites, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiteI_PRg1ux4> SitesCommitAsync(ProgramMonitor.SIRA.DtoSite[] sites, System.Guid clientIdentifier) {
            return base.Channel.SitesCommitAsync(sites, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoSiteI_PRg1ux4 SitesGetAll(System.Guid clientIdentifier) {
            return base.Channel.SitesGetAll(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiteI_PRg1ux4> SitesGetAllAsync(System.Guid clientIdentifier) {
            return base.Channel.SitesGetAllAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean ConfirmPendingSite(int siteId, System.Guid clientIdentifier) {
            return base.Channel.ConfirmPendingSite(siteId, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> ConfirmPendingSiteAsync(int siteId, System.Guid clientIdentifier) {
            return base.Channel.ConfirmPendingSiteAsync(siteId, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoTankSystemNameI_PRg1ux4 GetActiveTankSystemNames(System.Guid clientIdentifier) {
            return base.Channel.GetActiveTankSystemNames(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoTankSystemNameI_PRg1ux4> GetActiveTankSystemNamesAsync(System.Guid clientIdentifier) {
            return base.Channel.GetActiveTankSystemNamesAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoSiteTankSystemsyKa_PZV9R GetSiteTankSystems(int siteId, System.Guid clientIdentifier) {
            return base.Channel.GetSiteTankSystems(siteId, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiteTankSystemsyKa_PZV9R> GetSiteTankSystemsAsync(int siteId, System.Guid clientIdentifier) {
            return base.Channel.GetSiteTankSystemsAsync(siteId, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoTankSystemActivePeriodEntryyKa_PZV9R TankSystemHistoryGetBySite(int siteId, System.Guid clientIdentifier) {
            return base.Channel.TankSystemHistoryGetBySite(siteId, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoTankSystemActivePeriodEntryyKa_PZV9R> TankSystemHistoryGetBySiteAsync(int siteId, System.Guid clientIdentifier) {
            return base.Channel.TankSystemHistoryGetBySiteAsync(siteId, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoTankSystemyKa_PZV9R TankSystemsGet(int[] tankSystemIds, System.Guid clientIdentifier) {
            return base.Channel.TankSystemsGet(tankSystemIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoTankSystemyKa_PZV9R> TankSystemsGetAsync(int[] tankSystemIds, System.Guid clientIdentifier) {
            return base.Channel.TankSystemsGetAsync(tankSystemIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoSiteTankSystemsChangeResultyKa_PZV9R UpdateSitesTankSystems(int siteId, ProgramMonitor.SIRA.DtoSite siteDetails, ProgramMonitor.SIRA.DtoTank[] tanks, System.DateTime fromDate, ProgramMonitor.SIRA.DtoTankSystem[] dtoTankSystems, System.Guid clientIdentifier) {
            return base.Channel.UpdateSitesTankSystems(siteId, siteDetails, tanks, fromDate, dtoTankSystems, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiteTankSystemsChangeResultyKa_PZV9R> UpdateSitesTankSystemsAsync(int siteId, ProgramMonitor.SIRA.DtoSite siteDetails, ProgramMonitor.SIRA.DtoTank[] tanks, System.DateTime fromDate, ProgramMonitor.SIRA.DtoTankSystem[] dtoTankSystems, System.Guid clientIdentifier) {
            return base.Channel.UpdateSitesTankSystemsAsync(siteId, siteDetails, tanks, fromDate, dtoTankSystems, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoSiteTankSystemsChangeResultyKa_PZV9R UpdateSitesTankSystemsOutofService(int siteId, ProgramMonitor.SIRA.DtoSite siteDetails, ProgramMonitor.SIRA.DtoTankSystem[] dtoTankSystems, System.Guid clientIdentifier) {
            return base.Channel.UpdateSitesTankSystemsOutofService(siteId, siteDetails, dtoTankSystems, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiteTankSystemsChangeResultyKa_PZV9R> UpdateSitesTankSystemsOutofServiceAsync(int siteId, ProgramMonitor.SIRA.DtoSite siteDetails, ProgramMonitor.SIRA.DtoTankSystem[] dtoTankSystems, System.Guid clientIdentifier) {
            return base.Channel.UpdateSitesTankSystemsOutofServiceAsync(siteId, siteDetails, dtoTankSystems, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean ConfirmPendingTankSystem(int tankSystemId, System.Guid clientIdentifier) {
            return base.Channel.ConfirmPendingTankSystem(tankSystemId, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> ConfirmPendingTankSystemAsync(int tankSystemId, System.Guid clientIdentifier) {
            return base.Channel.ConfirmPendingTankSystemAsync(tankSystemId, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoTankI_PRg1ux4 TanksCommit(ProgramMonitor.SIRA.DtoTank[] sites, System.Guid clientIdentifier) {
            return base.Channel.TanksCommit(sites, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoTankI_PRg1ux4> TanksCommitAsync(ProgramMonitor.SIRA.DtoTank[] sites, System.Guid clientIdentifier) {
            return base.Channel.TanksCommitAsync(sites, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisRunHll1wPEA AssignTasksToRun(int jobId, int[] taskIds, System.Guid clientIdentifier) {
            return base.Channel.AssignTasksToRun(jobId, taskIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisRunHll1wPEA> AssignTasksToRunAsync(int jobId, int[] taskIds, System.Guid clientIdentifier) {
            return base.Channel.AssignTasksToRunAsync(jobId, taskIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoJobCompanyAndSiteItemsyKa_PZV9R GetCompaniesAndSitesByJobId(int jobId, System.Guid clientIdentifier) {
            return base.Channel.GetCompaniesAndSitesByJobId(jobId, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoJobCompanyAndSiteItemsyKa_PZV9R> GetCompaniesAndSitesByJobIdAsync(int jobId, System.Guid clientIdentifier) {
            return base.Channel.GetCompaniesAndSitesByJobIdAsync(jobId, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoOperationyKa_PZV9R StartRegenerateAnalysisTasksList(System.Guid clientIdentifier) {
            return base.Channel.StartRegenerateAnalysisTasksList(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoOperationyKa_PZV9R> StartRegenerateAnalysisTasksListAsync(System.Guid clientIdentifier) {
            return base.Channel.StartRegenerateAnalysisTasksListAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoSiteAnalysesSummaryyKa_PZV9R GetAllAnalysesSummary(System.Guid clientIdentifier) {
            return base.Channel.GetAllAnalysesSummary(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiteAnalysesSummaryyKa_PZV9R> GetAllAnalysesSummaryAsync(System.Guid clientIdentifier) {
            return base.Channel.GetAllAnalysesSummaryAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R GetAnalyses(int tankSystemId, System.Nullable<System.DateTime> startDate, int numberOfMonths, System.Guid clientIdentifier) {
            return base.Channel.GetAnalyses(tankSystemId, startDate, numberOfMonths, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> GetAnalysesAsync(int tankSystemId, System.Nullable<System.DateTime> startDate, int numberOfMonths, System.Guid clientIdentifier) {
            return base.Channel.GetAnalysesAsync(tankSystemId, startDate, numberOfMonths, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R GetAnalysesByIds(int[] analysisIds, System.Guid clientIdentifier) {
            return base.Channel.GetAnalysesByIds(analysisIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> GetAnalysesByIdsAsync(int[] analysisIds, System.Guid clientIdentifier) {
            return base.Channel.GetAnalysesByIdsAsync(analysisIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R GetAnalysesForSite(int siteId, System.DateTime date, bool monthlyAnalyses, System.Guid clientIdentifier) {
            return base.Channel.GetAnalysesForSite(siteId, date, monthlyAnalyses, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> GetAnalysesForSiteAsync(int siteId, System.DateTime date, bool monthlyAnalyses, System.Guid clientIdentifier) {
            return base.Channel.GetAnalysesForSiteAsync(siteId, date, monthlyAnalyses, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisJournalHll1wPEA GetAnalysesJournals(int[] tankSystemIds, System.Guid clientIdentifier) {
            return base.Channel.GetAnalysesJournals(tankSystemIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisJournalHll1wPEA> GetAnalysesJournalsAsync(int[] tankSystemIds, System.Guid clientIdentifier) {
            return base.Channel.GetAnalysesJournalsAsync(tankSystemIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysesPublishingDatayKa_PZV9R GetPublishingAnalysesData(ProgramMonitor.SIRA.DtoPublishingDataCriteria[] publishingDataCriteria, System.Guid clientIdentifier) {
            return base.Channel.GetPublishingAnalysesData(publishingDataCriteria, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysesPublishingDatayKa_PZV9R> GetPublishingAnalysesDataAsync(ProgramMonitor.SIRA.DtoPublishingDataCriteria[] publishingDataCriteria, System.Guid clientIdentifier) {
            return base.Channel.GetPublishingAnalysesDataAsync(publishingDataCriteria, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean PublishAnalysesData(ProgramMonitor.SIRA.DtoAnalysesDataToPublish[] publishingData, ProgramMonitor.SIRA.DtoOperatorInfo operatorInfo, System.Guid clientIdentifier) {
            return base.Channel.PublishAnalysesData(publishingData, operatorInfo, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> PublishAnalysesDataAsync(ProgramMonitor.SIRA.DtoAnalysesDataToPublish[] publishingData, ProgramMonitor.SIRA.DtoOperatorInfo operatorInfo, System.Guid clientIdentifier) {
            return base.Channel.PublishAnalysesDataAsync(publishingData, operatorInfo, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoMessageTnvYW2Wc GetMessages(ProgramMonitor.SIRA.DtoMessagesFilter dtoMessagesFilter, System.Guid clientIdentifier) {
            return base.Channel.GetMessages(dtoMessagesFilter, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoMessageTnvYW2Wc> GetMessagesAsync(ProgramMonitor.SIRA.DtoMessagesFilter dtoMessagesFilter, System.Guid clientIdentifier) {
            return base.Channel.GetMessagesAsync(dtoMessagesFilter, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoOperatorInfoyKa_PZV9R GetAllNeoOperators(System.Guid clientIdentifier) {
            return base.Channel.GetAllNeoOperators(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoOperatorInfoyKa_PZV9R> GetAllNeoOperatorsAsync(System.Guid clientIdentifier) {
            return base.Channel.GetAllNeoOperatorsAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfint AddMessage(ProgramMonitor.SIRA.DtoMessage dtoMessage, System.Guid clientIdentifier) {
            return base.Channel.AddMessage(dtoMessage, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfint> AddMessageAsync(ProgramMonitor.SIRA.DtoMessage dtoMessage, System.Guid clientIdentifier) {
            return base.Channel.AddMessageAsync(dtoMessage, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R GetAnalysesOverlappingDates(int tankSystemId, System.Nullable<System.DateTime> startDate, int numberOfMonths, System.Guid clientIdentifier) {
            return base.Channel.GetAnalysesOverlappingDates(tankSystemId, startDate, numberOfMonths, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> GetAnalysesOverlappingDatesAsync(int tankSystemId, System.Nullable<System.DateTime> startDate, int numberOfMonths, System.Guid clientIdentifier) {
            return base.Channel.GetAnalysesOverlappingDatesAsync(tankSystemId, startDate, numberOfMonths, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysesMetricsyKa_PZV9R GetAnalysesStateMetrics(System.Guid clientIdentifier) {
            return base.Channel.GetAnalysesStateMetrics(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysesMetricsyKa_PZV9R> GetAnalysesStateMetricsAsync(System.Guid clientIdentifier) {
            return base.Channel.GetAnalysesStateMetricsAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoTankSystemAnalysisMetricsyKa_PZV9R GetTankSystemAnalysisStateMetrics(int companyId, System.Guid clientIdentifier) {
            return base.Channel.GetTankSystemAnalysisStateMetrics(companyId, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoTankSystemAnalysisMetricsyKa_PZV9R> GetTankSystemAnalysisStateMetricsAsync(int companyId, System.Guid clientIdentifier) {
            return base.Channel.GetTankSystemAnalysisStateMetricsAsync(companyId, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R GetAnalysis(int analysisId, System.Guid clientIdentifier) {
            return base.Channel.GetAnalysis(analysisId, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> GetAnalysisAsync(int analysisId, System.Guid clientIdentifier) {
            return base.Channel.GetAnalysisAsync(analysisId, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoRunStateInfoyKa_PZV9R GetAnalysisRunStateInfo(int jobId, System.Guid clientIdentifier) {
            return base.Channel.GetAnalysisRunStateInfo(jobId, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoRunStateInfoyKa_PZV9R> GetAnalysisRunStateInfoAsync(int jobId, System.Guid clientIdentifier) {
            return base.Channel.GetAnalysisRunStateInfoAsync(jobId, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoTankAnalysisSummaryyKa_PZV9R GetAnalysisSummaries(System.Guid clientIdentifier) {
            return base.Channel.GetAnalysisSummaries(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoTankAnalysisSummaryyKa_PZV9R> GetAnalysisSummariesAsync(System.Guid clientIdentifier) {
            return base.Channel.GetAnalysisSummariesAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R GetIntraMonthAnalyses(int tankSystemId, int periodMonths, System.Guid clientIdentifier) {
            return base.Channel.GetIntraMonthAnalyses(tankSystemId, periodMonths, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> GetIntraMonthAnalysesAsync(int tankSystemId, int periodMonths, System.Guid clientIdentifier) {
            return base.Channel.GetIntraMonthAnalysesAsync(tankSystemId, periodMonths, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoLastestCycleStartDateyKa_PZV9R GetLatestCycleStartDate(int tankSystemId, System.Guid clientIdentifier) {
            return base.Channel.GetLatestCycleStartDate(tankSystemId, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoLastestCycleStartDateyKa_PZV9R> GetLatestCycleStartDateAsync(int tankSystemId, System.Guid clientIdentifier) {
            return base.Channel.GetLatestCycleStartDateAsync(tankSystemId, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoUnverifiedAnalysisInfoNS3hM9Iz GetPendingAnalyses(int jobId, System.Guid clientIdentifier) {
            return base.Channel.GetPendingAnalyses(jobId, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoUnverifiedAnalysisInfoNS3hM9Iz> GetPendingAnalysesAsync(int jobId, System.Guid clientIdentifier) {
            return base.Channel.GetPendingAnalysesAsync(jobId, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoUnverifiedAnalysisInfoNS3hM9Iz GetPendingAnalysesForSite(int jobId, int siteId, System.Guid clientIdentifier) {
            return base.Channel.GetPendingAnalysesForSite(jobId, siteId, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoUnverifiedAnalysisInfoNS3hM9Iz> GetPendingAnalysesForSiteAsync(int jobId, int siteId, System.Guid clientIdentifier) {
            return base.Channel.GetPendingAnalysesForSiteAsync(jobId, siteId, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoSiteAnalysesSummaryyKa_PZV9R GetRecentSiteAnalysesSummary(int siteId, System.Guid clientIdentifier) {
            return base.Channel.GetRecentSiteAnalysesSummary(siteId, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiteAnalysesSummaryyKa_PZV9R> GetRecentSiteAnalysesSummaryAsync(int siteId, System.Guid clientIdentifier) {
            return base.Channel.GetRecentSiteAnalysesSummaryAsync(siteId, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfdateTime GetVerifiedAnalysesPeriods(int companyId, System.Guid clientIdentifier) {
            return base.Channel.GetVerifiedAnalysesPeriods(companyId, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfdateTime> GetVerifiedAnalysesPeriodsAsync(int companyId, System.Guid clientIdentifier) {
            return base.Channel.GetVerifiedAnalysesPeriodsAsync(companyId, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R ApplyOptimalTankCalibration(int analysisId, int[] returnAnalysisIds, System.Nullable<double> rHSm, System.Nullable<double> lHSm, System.Nullable<double> fromLevel, System.DateTime fromDate, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.ApplyOptimalTankCalibration(analysisId, returnAnalysisIds, rHSm, lHSm, fromLevel, fromDate, sessionCommand, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> ApplyOptimalTankCalibrationAsync(int analysisId, int[] returnAnalysisIds, System.Nullable<double> rHSm, System.Nullable<double> lHSm, System.Nullable<double> fromLevel, System.DateTime fromDate, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.ApplyOptimalTankCalibrationAsync(analysisId, returnAnalysisIds, rHSm, lHSm, fromLevel, fromDate, sessionCommand, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R CorrectDDWithOneMonth(int analysisId, int[] observationIdsToBeCorrected, int[] returnAnalysisIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.CorrectDDWithOneMonth(analysisId, observationIdsToBeCorrected, returnAnalysisIds, sessionCommand, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> CorrectDDWithOneMonthAsync(int analysisId, int[] observationIdsToBeCorrected, int[] returnAnalysisIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.CorrectDDWithOneMonthAsync(analysisId, observationIdsToBeCorrected, returnAnalysisIds, sessionCommand, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R CorrectDDsUnrestricted(int analysisId, int[] observationIdsToBeCorrected, int[] returnAnalysisIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.CorrectDDsUnrestricted(analysisId, observationIdsToBeCorrected, returnAnalysisIds, sessionCommand, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> CorrectDDsUnrestrictedAsync(int analysisId, int[] observationIdsToBeCorrected, int[] returnAnalysisIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.CorrectDDsUnrestrictedAsync(analysisId, observationIdsToBeCorrected, returnAnalysisIds, sessionCommand, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R CorrectDDsWithinRange(int analysisId, int firstObs, int lastObs, int[] returnAnalysisIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.CorrectDDsWithinRange(analysisId, firstObs, lastObs, returnAnalysisIds, sessionCommand, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> CorrectDDsWithinRangeAsync(int analysisId, int firstObs, int lastObs, int[] returnAnalysisIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.CorrectDDsWithinRangeAsync(analysisId, firstObs, lastObs, returnAnalysisIds, sessionCommand, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R FindOptimalTankCalibration(int analysisId, int[] returnAnalysisIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.FindOptimalTankCalibration(analysisId, returnAnalysisIds, sessionCommand, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> FindOptimalTankCalibrationAsync(int analysisId, int[] returnAnalysisIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.FindOptimalTankCalibrationAsync(analysisId, returnAnalysisIds, sessionCommand, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationMdlryKa_PZV9R FindOptimalTankCalibrationMdlr(int analysisId, double highRange, double lowRange, double resolution, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.FindOptimalTankCalibrationMdlr(analysisId, highRange, lowRange, resolution, sessionCommand, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationMdlryKa_PZV9R> FindOptimalTankCalibrationMdlrAsync(int analysisId, double highRange, double lowRange, double resolution, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.FindOptimalTankCalibrationMdlrAsync(analysisId, highRange, lowRange, resolution, sessionCommand, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R MoveObservationsToNextAnalysis(int analysisId, System.DateTime fromDate, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.MoveObservationsToNextAnalysis(analysisId, fromDate, sessionCommand, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> MoveObservationsToNextAnalysisAsync(int analysisId, System.DateTime fromDate, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.MoveObservationsToNextAnalysisAsync(analysisId, fromDate, sessionCommand, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R MoveObservationsToPriorAnalysis(int analysisId, System.DateTime upToDate, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.MoveObservationsToPriorAnalysis(analysisId, upToDate, sessionCommand, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> MoveObservationsToPriorAnalysisAsync(int analysisId, System.DateTime upToDate, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.MoveObservationsToPriorAnalysisAsync(analysisId, upToDate, sessionCommand, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean RawObservationsCommit(ProgramMonitor.SIRA.DtoObservationRawData[] observations, System.Guid clientIdentifier) {
            return base.Channel.RawObservationsCommit(observations, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> RawObservationsCommitAsync(ProgramMonitor.SIRA.DtoObservationRawData[] observations, System.Guid clientIdentifier) {
            return base.Channel.RawObservationsCommitAsync(observations, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R RemovePoorDips(int analysisId, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.RemovePoorDips(analysisId, sessionCommand, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> RemovePoorDipsAsync(int analysisId, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.RemovePoorDipsAsync(analysisId, sessionCommand, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R RestoreRawData(int analysisId, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.RestoreRawData(analysisId, sessionCommand, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> RestoreRawDataAsync(int analysisId, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.RestoreRawDataAsync(analysisId, sessionCommand, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R Save(int analysisId, int verifiedState, System.Guid clientIdentifier) {
            return base.Channel.Save(analysisId, verifiedState, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> SaveAsync(int analysisId, int verifiedState, System.Guid clientIdentifier) {
            return base.Channel.SaveAsync(analysisId, verifiedState, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoScreameryKa_PZV9R ScreamersGetAll(System.Guid clientIdentifier) {
            return base.Channel.ScreamersGetAll(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoScreameryKa_PZV9R> ScreamersGetAllAsync(System.Guid clientIdentifier) {
            return base.Channel.ScreamersGetAllAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R SetAnalysisResult(int analysisId, int result, int reasonCode, int verifiedState, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.SetAnalysisResult(analysisId, result, reasonCode, verifiedState, sessionCommand, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> SetAnalysisResultAsync(int analysisId, int result, int reasonCode, int verifiedState, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.SetAnalysisResultAsync(analysisId, result, reasonCode, verifiedState, sessionCommand, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean SetAnalysisVerified(int analysisId, int verifiedState, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.SetAnalysisVerified(analysisId, verifiedState, sessionCommand, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> SetAnalysisVerifiedAsync(int analysisId, int verifiedState, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.SetAnalysisVerifiedAsync(analysisId, verifiedState, sessionCommand, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean SiraOpStartNewSavingSession(System.Guid clientIdentifier) {
            return base.Channel.SiraOpStartNewSavingSession(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> SiraOpStartNewSavingSessionAsync(System.Guid clientIdentifier) {
            return base.Channel.SiraOpStartNewSavingSessionAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean StartNewBrowsingSession(System.Guid clientIdentifier) {
            return base.Channel.StartNewBrowsingSession(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> StartNewBrowsingSessionAsync(System.Guid clientIdentifier) {
            return base.Channel.StartNewBrowsingSessionAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R SystemCorrectsDDWithRestrictedPeriod(int analysisId, int[] returnAnalysisIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.SystemCorrectsDDWithRestrictedPeriod(analysisId, returnAnalysisIds, sessionCommand, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> SystemCorrectsDDWithRestrictedPeriodAsync(int analysisId, int[] returnAnalysisIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.SystemCorrectsDDWithRestrictedPeriodAsync(analysisId, returnAnalysisIds, sessionCommand, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R ToggleDipsRemoved(int analysisId, int[] observationIdsToBeIgnored, int[] observationIdsToBeIncluded, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.ToggleDipsRemoved(analysisId, observationIdsToBeIgnored, observationIdsToBeIncluded, sessionCommand, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> ToggleDipsRemovedAsync(int analysisId, int[] observationIdsToBeIgnored, int[] observationIdsToBeIncluded, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.ToggleDipsRemovedAsync(analysisId, observationIdsToBeIgnored, observationIdsToBeIncluded, sessionCommand, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R UndoActions(int[] returnAnalysisIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.UndoActions(returnAnalysisIds, sessionCommand, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> UndoActionsAsync(int[] returnAnalysisIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.UndoActionsAsync(returnAnalysisIds, sessionCommand, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R UndoCorrections(int analysisId, int[] correctedObservationIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.UndoCorrections(analysisId, correctedObservationIds, sessionCommand, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> UndoCorrectionsAsync(int analysisId, int[] correctedObservationIds, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.UndoCorrectionsAsync(analysisId, correctedObservationIds, sessionCommand, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R UndoDeliveryCorrections(int analysisId, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.UndoDeliveryCorrections(analysisId, sessionCommand, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> UndoDeliveryCorrectionsAsync(int analysisId, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.UndoDeliveryCorrectionsAsync(analysisId, sessionCommand, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R DeliveryRecordingProblem(int analysisId, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.DeliveryRecordingProblem(analysisId, sessionCommand, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisyKa_PZV9R> DeliveryRecordingProblemAsync(int analysisId, ProgramMonitor.SIRA.DtoSessionCommand sessionCommand, System.Guid clientIdentifier) {
            return base.Channel.DeliveryRecordingProblemAsync(analysisId, sessionCommand, clientIdentifier);
        }
        
        public void Ping() {
            base.Channel.Ping();
        }
        
        public System.Threading.Tasks.Task PingAsync() {
            return base.Channel.PingAsync();
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfstring RunSelfCheck(System.Guid clientIdentifier) {
            return base.Channel.RunSelfCheck(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfstring> RunSelfCheckAsync(System.Guid clientIdentifier) {
            return base.Channel.RunSelfCheckAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationyKa_PZV9R CalibrationsCommit(ProgramMonitor.SIRA.DtoCalibration[] calibrations, System.Guid clientIdentifier) {
            return base.Channel.CalibrationsCommit(calibrations, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationyKa_PZV9R> CalibrationsCommitAsync(ProgramMonitor.SIRA.DtoCalibration[] calibrations, System.Guid clientIdentifier) {
            return base.Channel.CalibrationsCommitAsync(calibrations, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationyKa_PZV9R CalibrationsCreate(ProgramMonitor.SIRA.DtoCalibration[] calibrations, System.Guid clientIdentifier) {
            return base.Channel.CalibrationsCreate(calibrations, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationyKa_PZV9R> CalibrationsCreateAsync(ProgramMonitor.SIRA.DtoCalibration[] calibrations, System.Guid clientIdentifier) {
            return base.Channel.CalibrationsCreateAsync(calibrations, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean CalibrationsDelete(int[] calibrationIds, System.Guid clientIdentifier) {
            return base.Channel.CalibrationsDelete(calibrationIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> CalibrationsDeleteAsync(int[] calibrationIds, System.Guid clientIdentifier) {
            return base.Channel.CalibrationsDeleteAsync(calibrationIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationyKa_PZV9R CalibrationsForTankSystemsGet(int[] tankSystemIds, System.Guid clientIdentifier) {
            return base.Channel.CalibrationsForTankSystemsGet(tankSystemIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationyKa_PZV9R> CalibrationsForTankSystemsGetAsync(int[] tankSystemIds, System.Guid clientIdentifier) {
            return base.Channel.CalibrationsForTankSystemsGetAsync(tankSystemIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationyKa_PZV9R CalibrationsGet(int[] calibrationsIds, System.Guid clientIdentifier) {
            return base.Channel.CalibrationsGet(calibrationsIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationyKa_PZV9R> CalibrationsGetAsync(int[] calibrationsIds, System.Guid clientIdentifier) {
            return base.Channel.CalibrationsGetAsync(calibrationsIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationFactoryKa_PZV9R CalibrationFactorsCommit(ProgramMonitor.SIRA.DtoCalibrationFactor[] calibrationFactors, System.Guid clientIdentifier) {
            return base.Channel.CalibrationFactorsCommit(calibrationFactors, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationFactoryKa_PZV9R> CalibrationFactorsCommitAsync(ProgramMonitor.SIRA.DtoCalibrationFactor[] calibrationFactors, System.Guid clientIdentifier) {
            return base.Channel.CalibrationFactorsCommitAsync(calibrationFactors, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationFactoryKa_PZV9R CalibrationFactorsCreate(ProgramMonitor.SIRA.DtoCalibrationFactor[] calibrationFactors, System.Guid clientIdentifier) {
            return base.Channel.CalibrationFactorsCreate(calibrationFactors, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationFactoryKa_PZV9R> CalibrationFactorsCreateAsync(ProgramMonitor.SIRA.DtoCalibrationFactor[] calibrationFactors, System.Guid clientIdentifier) {
            return base.Channel.CalibrationFactorsCreateAsync(calibrationFactors, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean CalibrationFactorsDelete(int[] calibrationFactorIds, System.Guid clientIdentifier) {
            return base.Channel.CalibrationFactorsDelete(calibrationFactorIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> CalibrationFactorsDeleteAsync(int[] calibrationFactorIds, System.Guid clientIdentifier) {
            return base.Channel.CalibrationFactorsDeleteAsync(calibrationFactorIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationFactoryKa_PZV9R CalibrationsFactorsGet(int[] calibrationFactorIds, System.Guid clientIdentifier) {
            return base.Channel.CalibrationsFactorsGet(calibrationFactorIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoCalibrationFactoryKa_PZV9R> CalibrationsFactorsGetAsync(int[] calibrationFactorIds, System.Guid clientIdentifier) {
            return base.Channel.CalibrationsFactorsGetAsync(calibrationFactorIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.DtoServerMessage DummyCall1() {
            return base.Channel.DummyCall1();
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.DtoServerMessage> DummyCall1Async() {
            return base.Channel.DummyCall1Async();
        }
        
        public ProgramMonitor.SIRA.DtoTank DummyCall2() {
            return base.Channel.DummyCall2();
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.DtoTank> DummyCall2Async() {
            return base.Channel.DummyCall2Async();
        }
        
        public ProgramMonitor.SIRA.DtoTankSystemActivePeriodEntry DummyCall5() {
            return base.Channel.DummyCall5();
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.DtoTankSystemActivePeriodEntry> DummyCall5Async() {
            return base.Channel.DummyCall5Async();
        }
        
        public ProgramMonitor.SIRA.DtoLogEvent DummyCall6() {
            return base.Channel.DummyCall6();
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.DtoLogEvent> DummyCall6Async() {
            return base.Channel.DummyCall6Async();
        }
        
        public ProgramMonitor.SIRA.DtoClientMetric DummyCall7() {
            return base.Channel.DummyCall7();
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.DtoClientMetric> DummyCall7Async() {
            return base.Channel.DummyCall7Async();
        }
        
        public ProgramMonitor.SIRA.DtoObservationRawData DummyCall8() {
            return base.Channel.DummyCall8();
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.DtoObservationRawData> DummyCall8Async() {
            return base.Channel.DummyCall8Async();
        }
        
        public ProgramMonitor.SIRA.ServiceResult DummyCall9() {
            return base.Channel.DummyCall9();
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResult> DummyCall9Async() {
            return base.Channel.DummyCall9Async();
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileyKa_PZV9R ImportedFileGetFor(System.DateTime fromDate, System.DateTime endDate, System.Guid clientIdentifier) {
            return base.Channel.ImportedFileGetFor(fromDate, endDate, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileyKa_PZV9R> ImportedFileGetForAsync(System.DateTime fromDate, System.DateTime endDate, System.Guid clientIdentifier) {
            return base.Channel.ImportedFileGetForAsync(fromDate, endDate, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileMessageHll1wPEA ImportedFileMessageGetAll(System.Guid clientIdentifier) {
            return base.Channel.ImportedFileMessageGetAll(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileMessageHll1wPEA> ImportedFileMessageGetAllAsync(System.Guid clientIdentifier) {
            return base.Channel.ImportedFileMessageGetAllAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileMessageHll1wPEA ImportedFileMessageGetByParent(int[] fileIds, System.Guid clientIdentifier) {
            return base.Channel.ImportedFileMessageGetByParent(fileIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileMessageHll1wPEA> ImportedFileMessageGetByParentAsync(int[] fileIds, System.Guid clientIdentifier) {
            return base.Channel.ImportedFileMessageGetByParentAsync(fileIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoSiraConfigyKa_PZV9R CreateSiraConfigurationSets(ProgramMonitor.SIRA.DtoSiraConfig[] setTemplates, System.Guid clientIdentifier) {
            return base.Channel.CreateSiraConfigurationSets(setTemplates, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiraConfigyKa_PZV9R> CreateSiraConfigurationSetsAsync(ProgramMonitor.SIRA.DtoSiraConfig[] setTemplates, System.Guid clientIdentifier) {
            return base.Channel.CreateSiraConfigurationSetsAsync(setTemplates, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean DeleteSiraConfigurationSets(int[] configurationId, System.Guid clientIdentifier) {
            return base.Channel.DeleteSiraConfigurationSets(configurationId, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> DeleteSiraConfigurationSetsAsync(int[] configurationId, System.Guid clientIdentifier) {
            return base.Channel.DeleteSiraConfigurationSetsAsync(configurationId, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoSiraConfigyKa_PZV9R GetAllSiraConfigurations(System.Guid clientIdentifier) {
            return base.Channel.GetAllSiraConfigurations(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiraConfigyKa_PZV9R> GetAllSiraConfigurationsAsync(System.Guid clientIdentifier) {
            return base.Channel.GetAllSiraConfigurationsAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoSiraConfigyKa_PZV9R GetSiraConfiguration(int siteId, System.Guid clientIdentifier) {
            return base.Channel.GetSiraConfiguration(siteId, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiraConfigyKa_PZV9R> GetSiraConfigurationAsync(int siteId, System.Guid clientIdentifier) {
            return base.Channel.GetSiraConfigurationAsync(siteId, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoSiraGradeConfigSetyKa_PZV9R GetSiraGradeConfigurationSet(ProgramMonitor.SIRA.DtoSiraGradeConfigFilter siraGradeConfigFilter, System.Guid clientIdentifier) {
            return base.Channel.GetSiraGradeConfigurationSet(siraGradeConfigFilter, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiraGradeConfigSetyKa_PZV9R> GetSiraGradeConfigurationSetAsync(ProgramMonitor.SIRA.DtoSiraGradeConfigFilter siraGradeConfigFilter, System.Guid clientIdentifier) {
            return base.Channel.GetSiraGradeConfigurationSetAsync(siraGradeConfigFilter, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoSiraConfigyKa_PZV9R ModifySiraConfigurationSets(ProgramMonitor.SIRA.DtoSiraConfig[] sets, System.Guid clientIdentifier) {
            return base.Channel.ModifySiraConfigurationSets(sets, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiraConfigyKa_PZV9R> ModifySiraConfigurationSetsAsync(ProgramMonitor.SIRA.DtoSiraConfig[] sets, System.Guid clientIdentifier) {
            return base.Channel.ModifySiraConfigurationSetsAsync(sets, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoSiraGradeConfigSetyKa_PZV9R SaveSiraGradeConfigurationSet(ProgramMonitor.SIRA.DtoSiraGradeConfigSet siraGradeConfigSet, ProgramMonitor.SIRA.DtoSiraGradeConfigFilter siraGradeConfigFilter, System.Guid clientIdentifier) {
            return base.Channel.SaveSiraGradeConfigurationSet(siraGradeConfigSet, siraGradeConfigFilter, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiraGradeConfigSetyKa_PZV9R> SaveSiraGradeConfigurationSetAsync(ProgramMonitor.SIRA.DtoSiraGradeConfigSet siraGradeConfigSet, ProgramMonitor.SIRA.DtoSiraGradeConfigFilter siraGradeConfigFilter, System.Guid clientIdentifier) {
            return base.Channel.SaveSiraGradeConfigurationSetAsync(siraGradeConfigSet, siraGradeConfigFilter, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean CreateAuditLogs(ProgramMonitor.SIRA.DtoAuditLog[] auditLogs, System.Guid clientIdentifier) {
            return base.Channel.CreateAuditLogs(auditLogs, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> CreateAuditLogsAsync(ProgramMonitor.SIRA.DtoAuditLog[] auditLogs, System.Guid clientIdentifier) {
            return base.Channel.CreateAuditLogsAsync(auditLogs, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoOperationyKa_PZV9R GetAllOperations(System.Guid clientIdentifier) {
            return base.Channel.GetAllOperations(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoOperationyKa_PZV9R> GetAllOperationsAsync(System.Guid clientIdentifier) {
            return base.Channel.GetAllOperationsAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoObservationRawDataChangeLogyKa_PZV9R GetObservationRawDataChangedLog(int companyId, System.DateTime fromDate, System.DateTime toDate, System.Guid clientIdentifier) {
            return base.Channel.GetObservationRawDataChangedLog(companyId, fromDate, toDate, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoObservationRawDataChangeLogyKa_PZV9R> GetObservationRawDataChangedLogAsync(int companyId, System.DateTime fromDate, System.DateTime toDate, System.Guid clientIdentifier) {
            return base.Channel.GetObservationRawDataChangedLogAsync(companyId, fromDate, toDate, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoOperationyKa_PZV9R GetOperationStatus(int[] operationIds, System.Guid clientIdentifier) {
            return base.Channel.GetOperationStatus(operationIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoOperationyKa_PZV9R> GetOperationStatusAsync(int[] operationIds, System.Guid clientIdentifier) {
            return base.Channel.GetOperationStatusAsync(operationIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoSiteI_PRg1ux4 GetSitesByCompanyAndProduct(int companyId, int productId, System.Guid clientIdentifier) {
            return base.Channel.GetSitesByCompanyAndProduct(companyId, productId, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiteI_PRg1ux4> GetSitesByCompanyAndProductAsync(int companyId, int productId, System.Guid clientIdentifier) {
            return base.Channel.GetSitesByCompanyAndProductAsync(companyId, productId, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoSiteI_PRg1ux4 GetSitesByCompanyId(int companyId, System.Guid clientIdentifier) {
            return base.Channel.GetSitesByCompanyId(companyId, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiteI_PRg1ux4> GetSitesByCompanyIdAsync(int companyId, System.Guid clientIdentifier) {
            return base.Channel.GetSitesByCompanyIdAsync(companyId, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoClientInfoGzr_Sn7us GetClients(System.Guid clientIdentifier) {
            return base.Channel.GetClients(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoClientInfoGzr_Sn7us> GetClientsAsync(System.Guid clientIdentifier) {
            return base.Channel.GetClientsAsync(clientIdentifier);
        }
        
        public System.Guid OpenClientSession(string hostName, string userName) {
            return base.Channel.OpenClientSession(hostName, userName);
        }
        
        public System.Threading.Tasks.Task<System.Guid> OpenClientSessionAsync(string hostName, string userName) {
            return base.Channel.OpenClientSessionAsync(hostName, userName);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoSystemInfoNS3hM9Iz PollServer(ProgramMonitor.SIRA.DtoLogEvent[] logEvents, ProgramMonitor.SIRA.DtoClientMetric[] clientMetrics, int lastReceivedChangeId, System.Guid clientIdentifier) {
            return base.Channel.PollServer(logEvents, clientMetrics, lastReceivedChangeId, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSystemInfoNS3hM9Iz> PollServerAsync(ProgramMonitor.SIRA.DtoLogEvent[] logEvents, ProgramMonitor.SIRA.DtoClientMetric[] clientMetrics, int lastReceivedChangeId, System.Guid clientIdentifier) {
            return base.Channel.PollServerAsync(logEvents, clientMetrics, lastReceivedChangeId, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoSiraBlackFlagReportJournalHll1wPEA SiraBlackFlagReportJournalGetByTankSystem(int[] parentIds, System.Guid clientIdentifier) {
            return base.Channel.SiraBlackFlagReportJournalGetByTankSystem(parentIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiraBlackFlagReportJournalHll1wPEA> SiraBlackFlagReportJournalGetByTankSystemAsync(int[] parentIds, System.Guid clientIdentifier) {
            return base.Channel.SiraBlackFlagReportJournalGetByTankSystemAsync(parentIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoSiraBlackFlagReportJournalHll1wPEA SiraBlackFlagReportJournalGet(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.SiraBlackFlagReportJournalGet(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoSiraBlackFlagReportJournalHll1wPEA> SiraBlackFlagReportJournalGetAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.SiraBlackFlagReportJournalGetAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoContactI_PRg1ux4 ContactGetAll(System.Guid clientIdentifier) {
            return base.Channel.ContactGetAll(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoContactI_PRg1ux4> ContactGetAllAsync(System.Guid clientIdentifier) {
            return base.Channel.ContactGetAllAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoContactI_PRg1ux4 ContactGet(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.ContactGet(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoContactI_PRg1ux4> ContactGetAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.ContactGetAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean ContactDelete(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.ContactDelete(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> ContactDeleteAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.ContactDeleteAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoContactI_PRg1ux4 ContactCommit(ProgramMonitor.SIRA.DtoContact[] entities, System.Guid clientIdentifier) {
            return base.Channel.ContactCommit(entities, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoContactI_PRg1ux4> ContactCommitAsync(ProgramMonitor.SIRA.DtoContact[] entities, System.Guid clientIdentifier) {
            return base.Channel.ContactCommitAsync(entities, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoContactI_PRg1ux4 ContactCreate(ProgramMonitor.SIRA.DtoContact[] entities, System.Guid clientIdentifier) {
            return base.Channel.ContactCreate(entities, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoContactI_PRg1ux4> ContactCreateAsync(ProgramMonitor.SIRA.DtoContact[] entities, System.Guid clientIdentifier) {
            return base.Channel.ContactCreateAsync(entities, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoFileReaderI_PRg1ux4 FileReaderGetAll(System.Guid clientIdentifier) {
            return base.Channel.FileReaderGetAll(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoFileReaderI_PRg1ux4> FileReaderGetAllAsync(System.Guid clientIdentifier) {
            return base.Channel.FileReaderGetAllAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoFileReaderI_PRg1ux4 FileReaderGet(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.FileReaderGet(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoFileReaderI_PRg1ux4> FileReaderGetAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.FileReaderGetAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean FileReaderDelete(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.FileReaderDelete(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> FileReaderDeleteAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.FileReaderDeleteAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoFileReaderI_PRg1ux4 FileReaderCommit(ProgramMonitor.SIRA.DtoFileReader[] entities, System.Guid clientIdentifier) {
            return base.Channel.FileReaderCommit(entities, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoFileReaderI_PRg1ux4> FileReaderCommitAsync(ProgramMonitor.SIRA.DtoFileReader[] entities, System.Guid clientIdentifier) {
            return base.Channel.FileReaderCommitAsync(entities, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoFileReaderI_PRg1ux4 FileReaderCreate(ProgramMonitor.SIRA.DtoFileReader[] entities, System.Guid clientIdentifier) {
            return base.Channel.FileReaderCreate(entities, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoFileReaderI_PRg1ux4> FileReaderCreateAsync(ProgramMonitor.SIRA.DtoFileReader[] entities, System.Guid clientIdentifier) {
            return base.Channel.FileReaderCreateAsync(entities, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoImportPathHll1wPEA ImportPathGetAll(System.Guid clientIdentifier) {
            return base.Channel.ImportPathGetAll(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoImportPathHll1wPEA> ImportPathGetAllAsync(System.Guid clientIdentifier) {
            return base.Channel.ImportPathGetAllAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoImportPathHll1wPEA ImportPathGet(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.ImportPathGet(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoImportPathHll1wPEA> ImportPathGetAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.ImportPathGetAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileyKa_PZV9R ImportedFileGetAll(System.Guid clientIdentifier) {
            return base.Channel.ImportedFileGetAll(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileyKa_PZV9R> ImportedFileGetAllAsync(System.Guid clientIdentifier) {
            return base.Channel.ImportedFileGetAllAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileyKa_PZV9R ImportedFileGet(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.ImportedFileGet(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileyKa_PZV9R> ImportedFileGetAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.ImportedFileGetAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileMessageHll1wPEA ImportedFileMessageGetByImportedFile(int[] parentIds, System.Guid clientIdentifier) {
            return base.Channel.ImportedFileMessageGetByImportedFile(parentIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileMessageHll1wPEA> ImportedFileMessageGetByImportedFileAsync(int[] parentIds, System.Guid clientIdentifier) {
            return base.Channel.ImportedFileMessageGetByImportedFileAsync(parentIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileMessageHll1wPEA ImportedFileMessageGet(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.ImportedFileMessageGet(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoImportedFileMessageHll1wPEA> ImportedFileMessageGetAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.ImportedFileMessageGetAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisTaskyKa_PZV9R AnalysisTaskGetAll(System.Guid clientIdentifier) {
            return base.Channel.AnalysisTaskGetAll(clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisTaskyKa_PZV9R> AnalysisTaskGetAllAsync(System.Guid clientIdentifier) {
            return base.Channel.AnalysisTaskGetAllAsync(clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisTaskyKa_PZV9R AnalysisTaskGet(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.AnalysisTaskGet(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisTaskyKa_PZV9R> AnalysisTaskGetAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.AnalysisTaskGetAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfboolean AnalysisTaskDelete(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.AnalysisTaskDelete(entityIds, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfboolean> AnalysisTaskDeleteAsync(int[] entityIds, System.Guid clientIdentifier) {
            return base.Channel.AnalysisTaskDeleteAsync(entityIds, clientIdentifier);
        }
        
        public ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisTaskyKa_PZV9R AnalysisTaskCommit(ProgramMonitor.SIRA.DtoAnalysisTask[] entities, System.Guid clientIdentifier) {
            return base.Channel.AnalysisTaskCommit(entities, clientIdentifier);
        }
        
        public System.Threading.Tasks.Task<ProgramMonitor.SIRA.ServiceResultOfDtoAnalysisTaskyKa_PZV9R> AnalysisTaskCommitAsync(ProgramMonitor.SIRA.DtoAnalysisTask[] entities, System.Guid clientIdentifier) {
            return base.Channel.AnalysisTaskCommitAsync(entities, clientIdentifier);
        }
    }
}
